Welcome to Ubuntu 12.04.2 LTS (GNU/Linux 3.2.0-24-generic-pae i686)

 * Documentation:  https://help.ubuntu.com/
|-----------------------------------------------------------------|
|                 *** For authorized use only ***                 |
| This system is for the use of authorized users only.  All users |
| are expected to comply with the "Acceptable Use Policy" availa- |
| ble at http://www.orbit-lab.org/AUP.html                        |
| Individuals using this computer system, are subject to having   |
| all of their activities on this system monitored and recorded   |
| by system personnel.                                            |
|                                                                 |
| Anyone using this system expressly consents to such monitoring  |
| and is advised that if such monitoring reveals possible         |
| evidence of criminal activity, system personnel may provide the |
| evidence of such monitoring to law enforcement officials.       |
|                                                                 |
| Email question, comments or problems to help@orbit-lab.org      |
|-----------------------------------------------------------------|

Last login: Wed Mar  6 18:15:20 2013 from pat_11.qualcomm.com
tritons@console.grid:~$ ssh root@node5-5[Kps -ef | grep omf | grpe[K[Kep lolade[K[K[K[Kad
tritons  10247 10126  0 18:15 pts/11   00:00:00 sh -c /usr/bin/env ruby1.8 -I/usr/share/omf-expctl-5.4/ -I/usr/share/omf-common-5.4 /usr/share/omf-expctl-5.4/omf-expctl.rb -a -r -S pxe_slice -s system:exp:imageNode -- --nodes 'system:topo:all' --image 'tritons_upload.ndz' --timeout '800'
tritons  10253 10247  2 18:15 pts/11   00:00:03 ruby1.8 -I/usr/share/omf-expctl-5.4/ -I/usr/share/omf-common-5.4 /usr/share/omf-expctl-5.4/omf-expctl.rb -a -r -S pxe_slice -s system:exp:imageNode -- --nodes system:topo:all --image tritons_upload.ndz --timeout 800
tritons@console.grid:~$ [Ktritons@console.grid:~$ [Ktritons@console.grid:~$ ps -ef | grep omf | grep load
tritons  10247 10126  0 18:15 pts/11   00:00:00 sh -c /usr/bin/env ruby1.8 -I/usr/share/omf-expctl-5.4/ -I/usr/share/omf-common-5.4 /usr/share/omf-expctl-5.4/omf-expctl.rb -a -r -S pxe_slice -s system:exp:imageNode -- --nodes 'system:topo:all' --image 'tritons_upload.ndz' --timeout '800'
tritons  10253 10247  2 18:15 pts/11   00:00:03 ruby1.8 -I/usr/share/omf-expctl-5.4/ -I/usr/share/omf-common-5.4 /usr/share/omf-expctl-5.4/omf-expctl.rb -a -r -S pxe_slice -s system:exp:imageNode -- --nodes system:topo:all --image tritons_upload.ndz --timeout 800
tritons@console.grid:~$ who 
prasanthi pts/0        2013-03-06 13:48 (165.230.132.121)
root     pts/1        2013-02-05 16:54 (syslog.orbit-lab.org)
root     pts/2        2013-02-06 04:07 (syslog.orbit-lab.org)
prasanthi pts/3        2013-03-06 08:52 (165.230.132.121)
prasanthi pts/4        2013-03-06 10:24 (165.230.132.121)
prasanthi pts/5        2013-03-06 13:57 (165.230.132.121)
transmit pts/6        2013-03-06 18:01 (yonch.csail.mit.edu)
transmit pts/7        2013-03-06 18:02 (yonch.csail.mit.edu)
tennessett pts/8        2013-03-06 17:45 (149.149.120.94)
tennessett pts/9        2013-03-06 17:51 (149.149.120.94)
prasanthi pts/10       2013-03-06 12:51 (165.230.132.121)
tritons  pts/11       2013-03-06 18:15 (pat_11.qualcomm.com)
prasanthi pts/12       2013-03-06 14:26 (165.230.132.121)
transmit pts/13       2013-03-06 18:00 (yonch.csail.mit.edu)
tritons  pts/14       2013-03-06 18:15 (pat_11.qualcomm.com)
tritons@console.grid:~$ [Ktritons@console.grid:~$ [Ktritons@console.grid:~$ [Ktritons@console.grid:~$ ssh root@node5-5
]0;root@node5-5: ~root@node5-5:~# cd ~/gnuradio/gr-digital/examples/narrowband
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
-- Detecting internal GPSDO.... not found
Using Volk machine: sse4_2_32
1348750000.000000
UINFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

.........................U
 low=0.045034
high=0.402530

Setting frequency to 1349375000

.........................U
 low=0.091995
high=0.051126

Setting frequency to 1350625000

.........................U
 low=0.137181
high=0.235789

Setting frequency to 1349375000

.........................U
 low=0.199629
high=0.062162

Setting frequency to 1350625000

.........................U
 low=0.106243
high=0.193244

Setting frequency to 1349375000

.........................U
 low=0.559153
high=0.119829

Setting frequency to 1350625000

.........................U
 low=0.108026
high=0.217572

Setting frequency to 1349375000

.........................U
 low=0.483777
high=0.169729

Setting frequency to 1350625000

.........................U
 low=0.097689
high=0.180733

Setting frequency to 1349375000

.........................U
 low=0.174041
high=0.231801

.........................U
 low=0.278504
high=0.042944

Setting frequency to 1350625000

.........................U
 low=0.181685
high=0.073368

Setting frequency to 1350625000

.........................U
 low=0.064893
high=0.159018

Setting frequency to 1349375000

.........................U
 low=0.148764
high=0.040303

Setting frequency to 1350625000

.........................U
 low=0.147388
high=0.240333

Setting frequency to 1349375000

.........................U
 low=0.185619
high=0.072890

Setting frequency to 1350625000

.........................U
 low=0.127813
high=0.126876

.........................U
 low=0.319484
high=0.239335

.........................U
 low=0.274537
high=0.018992

Setting frequency to 1350625000

.........................U
 low=0.201476
high=0.130121

Setting frequency to 1350625000

.........................U
 low=0.094073
high=0.179343

Setting frequency to 1349375000

.........................U
 low=0.150200
high=0.109763

.........................U
 low=0.176645
high=0.132554

.........................U
 low=0.204989
high=0.074387

Setting frequency to 1350625000

.........................U
 low=0.171295
high=0.124724

.........................U
 low=0.042517
high=0.404496

Setting frequency to 1349375000

.........................U
 low=0.291115
high=0.130768

Setting frequency to 1350625000

.........................U
 low=0.129458
high=0.077265

Setting frequency to 1350625000

.........................U
 low=0.165835
high=0.205208

.........................U
 low=0.098042
high=0.331538

Setting frequency to 1349375000

.........................U
 low=0.273687
high=0.084462

Setting frequency to 1350625000

.........................U
 low=0.299931
high=0.046927

Setting frequency to 1350625000

.........................U
 low=0.152294
high=0.225081

.........................U
 low=0.216508
high=0.164171

.........................U
 low=0.072117
high=0.150985

Setting frequency to 1349375000

.........................U
 low=0.223429
high=0.067037

Setting frequency to 1350625000

.........................U
 low=0.117058
high=0.126839

.........................U
 low=0.214346
high=0.337784

Setting frequency to 1349375000

.........................U
 low=0.368965
high=0.170992

Setting frequency to 1350625000

.........................U
 low=0.096555
high=0.374186

Setting frequency to 1349375000

.........................U
 low=0.419023
high=0.151137

Setting frequency to 1350625000

.........................U
 low=0.104474
high=0.228692

Setting frequency to 1349375000

.........................U
 low=0.294478
high=0.170544

Setting frequency to 1350625000

.........................U
 low=0.195975
high=0.107134

Setting frequency to 1350625000

.........................U
 low=0.079745
high=0.308329

Setting frequency to 1349375000

.........................U
 low=0.246977
high=0.113467

Setting frequency to 1350625000

.........................U
 low=0.110427
high=0.485718

Setting frequency to 1349375000

.........................U
 low=0.242494
high=0.152926

Setting frequency to 1350625000

.........................U
 low=0.283104
high=0.115943

Setting frequency to 1350625000

.........................U
 low=0.245504
high=0.273006

.........................U
 low=0.216629
high=0.233356

.........................U
 low=0.170635
high=0.331415

Setting frequency to 1349375000

.........................U
 low=0.250271
high=0.125152

Setting frequency to 1350625000

.........................U
 low=0.219213
high=0.195890

.........................U
 low=0.267016
high=0.072490

Setting frequency to 1350625000

.........................U
 low=0.223447
high=0.180231

.........................U
 low=0.224563
high=0.150960

.........................U
 low=0.034985
high=0.263268

Setting frequency to 1349375000

.........................U
 low=0.468182
high=0.179538

Setting frequency to 1350625000

.........................U
 low=0.079383
high=0.207930

Setting frequency to 1349375000

.........................U
 low=0.259646
high=0.086900

Setting frequency to 1350625000

.........................U
 low=0.094054
high=0.337574

Setting frequency to 1349375000

.........................U
 low=0.250181
high=0.150012

Setting frequency to 1350625000

.........................U
 low=0.233660
high=0.260788

.........................U
 low=0.083905
high=0.183445

Setting frequency to 1349375000

.........................U
 low=0.195025
high=0.090480

Setting frequency to 1350625000

.........................U
 low=0.094995
high=0.128856

.........................U
 low=0.079298
high=0.078257

.........................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

.........................U
 low=0.169522
high=0.189775

.........................U
 low=0.058101
high=0.144892

Setting frequency to 1349375000

.........................U
 low=0.087506
high=0.108955

.........................U
 low=0.231956
high=0.189556

.........................U
 low=0.136271
high=0.269706

Setting frequency to 1349375000

.........................U
 low=0.126025
high=0.029862

Setting frequency to 1350625000

.........................U
 low=0.240679
high=0.416133

Setting frequency to 1349375000

.........................U
 low=0.205502
high=0.061671

Setting frequency to 1350625000

.........................U
 low=0.097793
high=0.207417

Setting frequency to 1349375000

.........................U
 low=0.165281
high=0.101102

Setting frequency to 1350625000

....U.U..U............U.U.U..U.U.U
 low=0.140437
high=0.079134

Setting frequency to 1350625000

.........................U
 low=0.124269
high=0.051429

Setting frequency to 1350625000

.....U..U....U.U.......U..U.U.U..UUUUUUUUUUUUUUUUUUUUUUUUUUUUU
 low=0.228058
high=0.250316

.........................U
 low=0.253943
high=0.179083

....U.....U..U..U.U.U..U..U....U..UUUUUUUUUUUU
 low=0.038709
high=0.090217

Setting frequency to 1349375000

....U.U..U..................U
 low=0.316166
high=0.052978

Setting frequency to 1350625000

.........................U
 low=0.113739
high=0.183568

Setting frequency to 1349375000

.........................U
 low=0.171314
high=0.042413

Setting frequency to 1350625000

.........................U
 low=0.158529
high=0.364459

Setting frequency to 1349375000

.........................U
 low=0.157105
high=0.056645

Setting frequency to 1350625000

.........................U
 low=0.152596
high=0.116859

.........................U
 low=0.102462
high=0.177648

Setting frequency to 1349375000

.........................U
 low=0.183102
high=0.090166

Setting frequency to 1350625000

.........................U
 low=0.149696
high=0.437989

Setting frequency to 1349375000

.........................U
 low=0.300768
high=0.084888

Setting frequency to 1350625000

.........................U
 low=0.329186
high=0.161834

Setting frequency to 1350625000

.........................U
 low=0.204461
high=0.264020

.........................U
 low=0.106942
high=0.230576

Setting frequency to 1349375000

.........................U
 low=0.150609
high=0.124826

.........................U
 low=0.206607
high=0.105604

Setting frequency to 1350625000

.........................U
 low=0.107966
high=0.238599

Setting frequency to 1349375000

.........................U
 low=0.375201
high=0.115768

Setting frequency to 1350625000

.........................U
 low=0.217143
high=0.097311

Setting frequency to 1350625000

.........................U
 low=0.128618
high=0.166592

.........................U
 low=0.083482
high=0.150881

Setting frequency to 1349375000

.........................U
 low=0.225910
high=0.237360

.........................U
 low=0.160403
high=0.108996

.........................U
 low=0.307660
high=0.172931

Setting frequency to 1350625000

.........................U
 low=0.086932
high=0.071597

.........................U
 low=0.058249
high=0.191989

Setting frequency to 1349375000

.........................U
 low=0.188738
high=0.092104

Setting frequency to 1350625000

.........................U
 low=0.309069
high=0.108269

Setting frequency to 1350625000

.........................U
 low=0.222169
high=0.207935

.........................U
 low=0.108113
high=0.213005

Setting frequency to 1349375000

.........................U
 low=0.197761
high=0.156296

.........................U
 low=0.261031
high=0.119092

Setting frequency to 1350625000

.........................U
 low=0.107239
high=0.208879

Setting frequency to 1349375000

.........................U
 low=0.112256
high=0.089723

.........................U
 low=0.357347
high=0.077109

Setting frequency to 1350625000

.........................U
 low=0.094722
high=0.200423

Setting frequency to 1349375000

.........................U
 low=0.101484
high=0.079616

.........................U
 low=0.258655
high=0.520407

Setting frequency to 1349375000

.........................U
 low=0.501947
high=0.202148

Setting frequency to 1350625000

.........................U
 low=0.039632
high=0.135923

Setting frequency to 1349375000

.........................U
 low=0.169669
high=0.047602

Setting frequency to 1350625000

.........................U
 low=0.182729
high=0.150041

.........................U
 low=0.185819
high=0.123376

Setting frequency to 1350625000

.........................U
 low=0.075976
high=0.446525

Setting frequency to 1349375000

.........................U
 low=0.260825
high=0.082924

Setting frequency to 1350625000

.........................U
 low=0.133360
high=0.197724

.........................U
 low=0.300043
high=0.353566

.........................U
 low=0.067103
high=0.173311

Setting frequency to 1349375000

.........................U
 low=0.228171
high=0.037605

Setting frequency to 1350625000

.........................U
 low=0.158346
high=0.079469

Setting frequency to 1350625000

.........................U
 low=0.179408
high=0.102518

Setting frequency to 1350625000

.........................U
 low=0.166067
high=0.079399

Setting frequency to 1350625000

.........................U
 low=0.118258
high=0.171179

.........................U
 low=0.082418
high=0.184384

Setting frequency to 1349375000

.........................U
 low=0.150498
high=0.215296

.........................U
 low=0.098588
high=0.083040

.........................U
 low=0.346728
high=0.079087

Setting frequency to 1350625000

.........................U
 low=0.175917
high=0.263975

Setting frequency to 1349375000

.........................U
 low=0.173719
high=0.068102

Setting frequency to 1350625000

.........................U
 low=0.133860
high=0.115221

.........................U
 low=0.080192
high=0.100625

.........................U
 low=0.206001
high=0.384598

Setting frequency to 1349375000

.........................U
 low=0.341723
high=0.153675

Setting frequency to 1350625000

......U...................U
 low=0.068263
high=0.165480

Setting frequency to 1349375000

.........................U
 low=0.464809
high=0.079355

Setting frequency to 1350625000

.........................U
 low=0.208864
high=0.121257

Setting frequency to 1350625000

.........................U
 low=0.269399
high=0.208194

.....U........U..U..........U
 low=0.152726
high=0.140763

.........................U
 low=0.223413
high=0.487281

Setting frequency to 1349375000

....U..U.U..................U
 low=0.374496
high=0.129357

Setting frequency to 1350625000

.........................U
 low=0.127203
high=0.156276

.........................U
 low=0.138819
high=0.031887

Setting frequency to 1350625000

.........................U
 low=0.083920
high=0.123067

.........................U
 low=0.060523
high=0.156454

Setting frequency to 1349375000

.....U....................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9  ^C^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9  --bitrate 2500k[C[1P00k[C[C0k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

U.........................U
 low=0.074485
high=0.125799

Setting frequency to 1349375000

.........................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9 ---bitrate 2000k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
UINFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

.........................U
 low=0.156598
high=0.152639

.........................U
 low=0.087433
high=0.251282

Setting frequency to 1349375000

.........................U
 low=0.113964
high=0.130107

.........................U
 low=0.355882
high=0.046203

Setting frequency to 1350625000

.........................U
 low=0.262393
high=0.113483

Setting frequency to 1350625000

.........................U
 low=0.186879
high=0.163427

.........................U
 low=0.113872
high=0.126432

.........................U
 low=0.062098
high=0.207989

Setting frequency to 1349375000

.........................U
 low=0.408621
high=0.035322

Setting frequency to 1350625000

.........................U
 low=0.064996
high=0.118991

Setting frequency to 1349375000

.........................U
 low=0.152802
high=0.154070

.........................U
 low=0.229483
high=0.165142

.........................U
 low=0.173070
high=0.372027

Setting frequency to 1349375000

.........................U
 low=0.059471
high=0.141072

Setting frequency to 1349375000

.........................U
 low=0.166001
high=0.120555

.........................U
 low=0.692983
high=0.161876

Setting frequency to 1350625000

.........................U
 low=0.138774
high=0.364301

Setting frequency to 1349375000

.........................U
 low=0.540936
high=0.125065

Setting frequency to 1350625000

.........................U
 low=0.118693
high=0.304490

Setting frequency to 1349375000

.........................U
 low=0.152167
high=0.136571

.........................U
 low=0.085747
high=0.094991

.........................U
 low=0.465306
high=0.230209

Setting frequency to 1350625000

.........................U
 low=0.067644
high=0.150866

Setting frequency to 1349375000

.........................U
 low=0.043379
high=0.286469

Setting frequency to 1349375000

.........................U
 low=0.165138
high=0.073600

Setting frequency to 1350625000

.........................U
 low=0.194397
high=0.158909

.........................U
 low=0.448556
high=0.324974

.........................U
 low=0.139113
high=0.491899

Setting frequency to 1349375000

.........................U
 low=0.243371
high=0.075805

Setting frequency to 1350625000

.........................U
 low=0.134739
high=0.081923

Setting frequency to 1350625000

.........................U
 low=0.229464
high=0.162972

.........................U
 low=0.160142
high=0.108115

.........................U
 low=0.150960
high=0.112147

.........................U
 low=0.054153
high=0.232897

Setting frequency to 1349375000

.........................U
 low=0.436062
high=0.233178

Setting frequency to 1350625000

.........................U
 low=0.160575
high=0.128042

.........................U
 low=0.040549
high=0.104538

Setting frequency to 1349375000

.........................U
 low=0.386765
high=0.070402

Setting frequency to 1350625000

.........................U
 low=0.206710
high=0.334432

Setting frequency to 1349375000

.........................U
 low=0.161329
high=0.109411

.........................U
 low=0.190827
high=0.045726

Setting frequency to 1350625000

.........................U
 low=0.101065
high=0.091870

.........................U
 low=0.111563
high=0.167591

Setting frequency to 1349375000

.........................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9 ---bitrate 2000k[1P000k1000k[C[C[1Pk500k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes

UHD Warning:
    The requested interpolation is odd; the user should expect CIC rolloff.
    Select an even interpolation to ensure that a halfband filter is enabled.
    interpolation = dsp_rate/samp_rate -> 67 = (100.000000 MHz)/(1.500000 MHz)

UHD Warning:
    The hardware does not support the requested TX sample rate:
    Target sample rate: 1.500000 MSps
    Actual sample rate: 1.492537 MSps

UHD Warning:
    The hardware does not support the requested TX sample rate:
    Target sample rate: 2.250000 MSps
    Actual sample rate: 2.272727 MSps

Symbol Rate:         750000.000000
Requested sps:       2.000000
Given sample rate:   2272727.272727
Actual sps for rate: 3.030303

Requested sample rate: 2250000.000000
Actual sample rate: 2272727.272727
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

.........................U
 low=0.121898
high=0.217641

Setting frequency to 1349375000

.........................U
 low=0.080283
high=0.151842

Setting frequency to 1349375000

.........................U
 low=0.398155
high=0.176706

Setting frequency to 1350625000

.........................U
 low=0.123932
high=0.409531

Setting frequency to 1349375000

.........................U
 low=0.373422
high=0.146672

Setting frequency to 1350625000

.........................U
 low=0.122562
high=0.083536

.........................U
 low=0.131795
high=0.119660

.........................U
 low=0.215272
high=0.121093

Setting frequency to 1350625000

.........................U
 low=0.107117
high=0.058207

Setting frequency to 1350625000

.........................U
 low=0.218417
high=0.048254

Setting frequency to 1350625000

.........................U
 low=0.123509
high=0.283997

Setting frequency to 1349375000

.........................U
 low=0.082837
high=0.317447

Setting frequency to 1349375000

.........................U
 low=0.326639
high=0.133358

Setting frequency to 1350625000

.........................U
 low=0.272703
high=0.152730

Setting frequency to 1350625000

.........................U
 low=0.076101
high=0.337612

Setting frequency to 1349375000

.........................U
 low=0.119959
high=0.035115

Setting frequency to 1350625000

.........................U
 low=0.059856
high=0.088155

.........................U
 low=0.199383
high=0.061007

Setting frequency to 1350625000

.........................U
 low=0.124280
high=0.152182

.........................U
 low=0.241588
high=0.081181

Setting frequency to 1350625000

.........................U
 low=0.089416
high=0.201901

Setting frequency to 1349375000

.........................U
 low=0.157534
high=0.044295

Setting frequency to 1350625000

.........................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9 ---bitrate 1500k[1P00k[C[C0k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

.........................
 low=67875.284499
high=20362.974488

Setting frequency to 1350625000

.........................
 low=18831.346652
high=69932.200279

Setting frequency to 1349375000

.........................
 low=63225.162761
high=57578.077710

.........................
 low=32834.077359
high=78559.071330

Setting frequency to 1349375000

.........................
 low=34585.111621
high=77319.628211

Setting frequency to 1349375000

.........................
 low=20446.319421
high=61558.804455

Setting frequency to 1349375000

.........................
 low=56551.170310
high=56908.147427

.........................
 low=20678.457978
high=46191.884536

Setting frequency to 1349375000

.........................
 low=26473.430412
high=63932.040615

Setting frequency to 1349375000

.........................
 low=28052.549620
high=44928.136248

Setting frequency to 1349375000

.........................
 low=55299.868319
high=91538.057292

Setting frequency to 1349375000

.........................
 low=52326.608746
high=38220.703854

.........................
 low=38695.578521
high=77736.076767

Setting frequency to 1349375000

.........................
 low=68236.002165
high=65980.864059

.........................
 low=26182.176922
high=55852.536016

Setting frequency to 1349375000

.........................
 low=60149.680379
high=39830.609528

Setting frequency to 1350625000

.........................
 low=85077.791407
high=9785.222924

Setting frequency to 1350625000

.........................
 low=111892.043147
high=35492.642928

Setting frequency to 1350625000

.........................
 low=67802.545213
high=37682.078736

Setting frequency to 1350625000

.........................
 low=88326.567738
high=48077.200559

Setting frequency to 1350625000

.........................
 low=72903.102506
high=9925.773279

Setting frequency to 1350625000

.........................
 low=31634.771282
high=35385.376339

.........................
 low=42763.499151
high=32154.136678

.........................
 low=81248.366156
high=32540.456800

Setting frequency to 1350625000

.........................
 low=84567.602666
high=19612.720307

Setting frequency to 1350625000

.........................
 low=76644.989038
high=38652.867835

Setting frequency to 1350625000

.........................
 low=93267.184651
high=18801.869718

Setting frequency to 1350625000

.........................
 low=116899.479206
high=3325.614020

Setting frequency to 1350625000

.........................
 low=103517.652197
high=6308.053347

Setting frequency to 1350625000

.........................
 low=22828.992282
high=99747.253984

Setting frequency to 1349375000

.........................
 low=63984.822331
high=95110.923187

.........................
 low=71435.403117
high=55783.910487

.........................
 low=27266.924914
high=63095.950971

Setting frequency to 1349375000

.........................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim benchmark_tx.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx.py" 154L, 5415C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter

[35mimport[m time, struct, sys

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, modulator, options):[43;8H gr.top_block.__init__(self)[45;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[46;12H [34m# Work-around to get the modulation's bits_per_symbol[m[47;68H1,1[11CTop[1;1H[?12l[?25h[?25l[27m[m[H[2J[1;8H parser.print_help()[2;8H sys.exit([31m1[m)[4;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[5;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[7;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[10;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[12;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[14;4H tb.start()[22C [34m# start flow graph[m[16;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[22;4H [33mwhile[m n < nbytes:[23;8H [33mif[m options.from_file [33mis[m [36mNone[m:[24;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[25;8H [33melse[m:[26;12H data = source_file.read(pkt_size - [31m2[m)[27;12H [33mif[m data == [31m''[m:[28;16H [33mbreak[m;[30;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[31;8H send_pkt(payload)[32;8H n += [36mlen[m(payload)[33;8H sys.stderr.write([31m'.'[m)[34;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[35;12H time.sleep([31m1[m)[36;8H pktno += [31m1[m[38;4H send_pkt(eof=[36mTrue[m)[40;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[44;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[46;8H [33mpass[m[47;68H154,9[9CBot[46;9H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[47;70H3[45;9H[?12l[?25h[?25l[47;68H[K[47;1H?[?12l[?25h2[?25l[?12l[?25h5[?25l[?12l[?25h[?25l[31msearch hit TOP, continuing at BOTTOM[m[1m[37m[41mE486: Pattern not found: 25[m[47;28H[K[47;68H153,9[9CBot[45;9H[?12l[?25h[?25l[47;70H2[44;9H[?12l[?25h[?25l[47;70H3[45;9H[?12l[?25h[?25l[47;70H2[44;9H[?12l[?25h[?25l[47;70H1,8[43;8H[?12l[?25h[?25l[27m[m[H[2J[1;8H [34m# occur in the sinks (specifically the UHD sink)[m[2;8H self.txpath = transmit_path(modulator, options)[4;8H self.connect(self.txpath, self.sink)

[34m# /////////////////////////////////////////////////////////////////////////////
#                                   main
# /////////////////////////////////////////////////////////////////////////////[m

[33mdef[m [36mmain[m():[12;4H [33mdef[m [36msend_pkt[m(payload=[31m''[m, eof=[36mFalse[m):[13;8H [33mreturn[m tb.txpath.send_pkt(payload, eof)[15;4H mods = digital.modulation_utils.type_1_mods()[17;4H parser = OptionParser(option_class=eng_option, conflict_handler=[31m"resolve"[m)
    expert_grp = parser.add_option_group([31m"Expert"[m)[20;4H parser.add_option([31m"-m"[m, [31m"--modulation"[m, [36mtype[m=[31m"choice"[m, choices=mods.keys(),[21;22H default=[31m'psk'[m,[22;22H [36mhelp[m=[31m"Select modulation from: %s [default=%%default]"[m[23;28H % ([31m', '[m.join(mods.keys()),))[25;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[26;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)
    parser.add_option([31m"-M"[m, [31m"--megabytes"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1.0[m,[28;22H [36mhelp[m=[31m"set megabytes to transmit [default=%default]"[m)
    parser.add_option([31m""[m,[31m"--discontinuous"[m, action=[31m"store_true"[m, default=[36mFalse[m,[30;22H [36mhelp[m=[31m"enable discontinous transmission (bursts of 5 packets)"[m)
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[32;22H [36mhelp[m=[31m"use intput file for packet contents"[m)
    parser.add_option([31m""[m,[31m"--to-file"[m, default=[36mNone[m,[34;22H [36mhelp[m=[31m"Output file for modulated samples"[m)[36;4H transmit_path.add_options(parser, expert_grp)
    uhd_transmitter.add_options(parser)[39;4H [33mfor[m mod [33min[m mods.values():[40;8H mod.add_options(expert_grp)[42;4H (options, args) = parser.parse_args ()[44;4H [33mif[m [36mlen[m(args) != [31m0[m:[45;8H parser.print_help()[46;8H sys.exit([31m1[m)[47;68H110,9[9C59%[46;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[34m# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter

[35mimport[m time, struct, sys

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, modulator, options):[23;8H gr.top_block.__init__(self)[25;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[26;12H [34m# Work-around to get the modulation's bits_per_symbol[m[27;12H args = modulator.extract_kwargs_from_options(options)[28;12H symbol_rate = options.bitrate / modulator(**args).bits_per_symbol()[30;12H self.sink = uhd_transmitter(options.args, symbol_rate,[31;40H options.samples_per_symbol,[32;40H options.tx_freq, options.tx_gain,[33;40H options.spec, options.antenna,[34;40H options.verbose)[35;12H options.samples_per_symbol = self.sink._sps[37;8H [33melif[m(options.to_file [33mis[m [33mnot[m [36mNone[m):[38;12H sys.stderr.write(([31m"Saving samples to '%s'.[m[35m\n\n[m[31m"[m % (options.to_file)))[39;12H self.sink = gr.file_sink(gr.sizeof_gr_complex, options.to_file)[40;8H [33melse[m:[41;12H sys.stderr.write([31m"No sink defined, dumping samples to null sink.[m[35m\n\n[m[31m"[m)[42;12H self.sink = gr.null_sink(gr.sizeof_gr_complex)[44;8H [34m# do this after for any adjustments to the options that may[m[45;8H [34m# occur in the sinks (specifically the UHD sink)[m[46;8H self.txpath = transmit_path(modulator, options)[47;68H66,9[10C18%[46;9H[?12l[?25h[?25l[1;46r[1;1H[20L[1;47r[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.[m[47;68H[K[47;68H22,0-1[8CTop[22;1H[?12l[?25h[?25l[27m[m[H[2J[1;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[2;12H [34m# Work-around to get the modulation's bits_per_symbol[m[3;12H args = modulator.extract_kwargs_from_options(options)[4;12H symbol_rate = options.bitrate / modulator(**args).bits_per_symbol()[6;12H self.sink = uhd_transmitter(options.args, symbol_rate,[7;40H options.samples_per_symbol,[8;40H options.tx_freq, options.tx_gain,[9;40H options.spec, options.antenna,[10;40H options.verbose)[11;12H options.samples_per_symbol = self.sink._sps[13;8H [33melif[m(options.to_file [33mis[m [33mnot[m [36mNone[m):[14;12H sys.stderr.write(([31m"Saving samples to '%s'.[m[35m\n\n[m[31m"[m % (options.to_file)))[15;12H self.sink = gr.file_sink(gr.sizeof_gr_complex, options.to_file)[16;8H [33melse[m:[17;12H sys.stderr.write([31m"No sink defined, dumping samples to null sink.[m[35m\n\n[m[31m"[m)[18;12H self.sink = gr.null_sink(gr.sizeof_gr_complex)[20;8H [34m# do this after for any adjustments to the options that may[m[21;8H [34m# occur in the sinks (specifically the UHD sink)[m[22;8H self.txpath = transmit_path(modulator, options)[24;8H self.connect(self.txpath, self.sink)

[34m# /////////////////////////////////////////////////////////////////////////////
#                                   main
# /////////////////////////////////////////////////////////////////////////////[m

[33mdef[m [36mmain[m():[32;4H [33mdef[m [36msend_pkt[m(payload=[31m''[m, eof=[36mFalse[m):[33;8H [33mreturn[m tb.txpath.send_pkt(payload, eof)[35;4H mods = digital.modulation_utils.type_1_mods()[37;4H parser = OptionParser(option_class=eng_option, conflict_handler=[31m"resolve"[m)
    expert_grp = parser.add_option_group([31m"Expert"[m)[40;4H parser.add_option([31m"-m"[m, [31m"--modulation"[m, [36mtype[m=[31m"choice"[m, choices=mods.keys(),[41;22H default=[31m'psk'[m,[42;22H [36mhelp[m=[31m"Select modulation from: %s [default=%%default]"[m[43;28H % ([31m', '[m.join(mods.keys()),))[45;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[46;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)[47;68H45,9[10C40%[1;9H[?12l[?25h[?25l[27m[m[H[2J[1;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[2;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)
    parser.add_option([31m"-M"[m, [31m"--megabytes"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1.0[m,[4;22H [36mhelp[m=[31m"set megabytes to transmit [default=%default]"[m)
    parser.add_option([31m""[m,[31m"--discontinuous"[m, action=[31m"store_true"[m, default=[36mFalse[m,[6;22H [36mhelp[m=[31m"enable discontinous transmission (bursts of 5 packets)"[m)
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[8;22H [36mhelp[m=[31m"use intput file for packet contents"[m)
    parser.add_option([31m""[m,[31m"--to-file"[m, default=[36mNone[m,[10;22H [36mhelp[m=[31m"Output file for modulated samples"[m)[12;4H transmit_path.add_options(parser, expert_grp)
    uhd_transmitter.add_options(parser)[15;4H [33mfor[m mod [33min[m mods.values():[16;8H mod.add_options(expert_grp)[18;4H (options, args) = parser.parse_args ()[20;4H [33mif[m [36mlen[m(args) != [31m0[m:[21;8H parser.print_help()[22;8H sys.exit([31m1[m)[24;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[25;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[27;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[30;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[32;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[34;4H tb.start()[22C [34m# start flow graph[m[36;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[42;4H [33mwhile[m n < nbytes:[43;8H [33mif[m options.from_file [33mis[m [36mNone[m:[44;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[45;8H [33melse[m:[46;12H data = source_file.read(pkt_size - [31m2[m)[47;68H89,5[10C81%[1;5H[?12l[?25h[?25l[27m[m[H[2J[1;8H [33melse[m:[2;12H data = source_file.read(pkt_size - [31m2[m)[3;12H [33mif[m data == [31m''[m:[4;16H [33mbreak[m;[6;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[7;8H send_pkt(payload)[8;8H n += [36mlen[m(payload)[9;8H sys.stderr.write([31m'.'[m)[10;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[11;12H time.sleep([31m1[m)[12;8H pktno += [31m1[m[14;4H send_pkt(eof=[36mTrue[m)[16;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[20;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[22;8H [33mpass[m
[1m[34m~                                                                                    [24;1H~                                                                                    [25;1H~                                                                                    [26;1H~                                                                                    [27;1H~                                                                                    [28;1H~                                                                                    [29;1H~                                                                                    [30;1H~                                                                                    [31;1H~                                                                                    [32;1H~                                                                                    [33;1H~                                                                                    [34;1H~                                                                                    [35;1H~                                                                                    [36;1H~                                                                                    [37;1H~                                                                                    [38;1H~                                                                                    [39;1H~                                                                                    [40;1H~                                                                                    [41;1H~                                                                                    [42;1H~                                                                                    [43;1H~                                                                                    [44;1H~                                                                                    [45;1H~                                                                                    [46;1H~                                                                                    [m[47;68H133,9[9CBot[1;9H[?12l[?25h[?25l[27m[m[H[2J[1;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[2;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)
    parser.add_option([31m"-M"[m, [31m"--megabytes"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1.0[m,[4;22H [36mhelp[m=[31m"set megabytes to transmit [default=%default]"[m)
    parser.add_option([31m""[m,[31m"--discontinuous"[m, action=[31m"store_true"[m, default=[36mFalse[m,[6;22H [36mhelp[m=[31m"enable discontinous transmission (bursts of 5 packets)"[m)
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[8;22H [36mhelp[m=[31m"use intput file for packet contents"[m)
    parser.add_option([31m""[m,[31m"--to-file"[m, default=[36mNone[m,[10;22H [36mhelp[m=[31m"Output file for modulated samples"[m)[12;4H transmit_path.add_options(parser, expert_grp)
    uhd_transmitter.add_options(parser)[15;4H [33mfor[m mod [33min[m mods.values():[16;8H mod.add_options(expert_grp)[18;4H (options, args) = parser.parse_args ()[20;4H [33mif[m [36mlen[m(args) != [31m0[m:[21;8H parser.print_help()[22;8H sys.exit([31m1[m)[24;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[25;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[27;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[30;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[32;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[34;4H tb.start()[22C [34m# start flow graph[m[36;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[42;4H [33mwhile[m n < nbytes:[43;8H [33mif[m options.from_file [33mis[m [36mNone[m:[44;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[45;8H [33melse[m:[46;12H data = source_file.read(pkt_size - [31m2[m)[47;68H134,13[8C81%[46;13H[?12l[?25h[?25l[27m[m[H[2J[1;8H [33melse[m:[2;12H data = source_file.read(pkt_size - [31m2[m)[3;12H [33mif[m data == [31m''[m:[4;16H [33mbreak[m;[6;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[7;8H send_pkt(payload)[8;8H n += [36mlen[m(payload)[9;8H sys.stderr.write([31m'.'[m)[10;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[11;12H time.sleep([31m1[m)[12;8H pktno += [31m1[m[14;4H send_pkt(eof=[36mTrue[m)[16;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[20;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[22;8H [33mpass[m
[1m[34m~                                                                                    [24;1H~                                                                                    [25;1H~                                                                                    [26;1H~                                                                                    [27;1H~                                                                                    [28;1H~                                                                                    [29;1H~                                                                                    [30;1H~                                                                                    [31;1H~                                                                                    [32;1H~                                                                                    [33;1H~                                                                                    [34;1H~                                                                                    [35;1H~                                                                                    [36;1H~                                                                                    [37;1H~                                                                                    [38;1H~                                                                                    [39;1H~                                                                                    [40;1H~                                                                                    [41;1H~                                                                                    [42;1H~                                                                                    [43;1H~                                                                                    [44;1H~                                                                                    [45;1H~                                                                                    [46;1H~                                                                                    [m[47;68H133,9[9CBot[1;9H[?12l[?25h[?25l[27m[m[H[2J[1;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[2;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)
    parser.add_option([31m"-M"[m, [31m"--megabytes"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1.0[m,[4;22H [36mhelp[m=[31m"set megabytes to transmit [default=%default]"[m)
    parser.add_option([31m""[m,[31m"--discontinuous"[m, action=[31m"store_true"[m, default=[36mFalse[m,[6;22H [36mhelp[m=[31m"enable discontinous transmission (bursts of 5 packets)"[m)
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[8;22H [36mhelp[m=[31m"use intput file for packet contents"[m)
    parser.add_option([31m""[m,[31m"--to-file"[m, default=[36mNone[m,[10;22H [36mhelp[m=[31m"Output file for modulated samples"[m)[12;4H transmit_path.add_options(parser, expert_grp)
    uhd_transmitter.add_options(parser)[15;4H [33mfor[m mod [33min[m mods.values():[16;8H mod.add_options(expert_grp)[18;4H (options, args) = parser.parse_args ()[20;4H [33mif[m [36mlen[m(args) != [31m0[m:[21;8H parser.print_help()[22;8H sys.exit([31m1[m)[24;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[25;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[27;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[30;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[32;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[34;4H tb.start()[22C [34m# start flow graph[m[36;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[42;4H [33mwhile[m n < nbytes:[43;8H [33mif[m options.from_file [33mis[m [36mNone[m:[44;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[45;8H [33melse[m:[46;12H data = source_file.read(pkt_size - [31m2[m)[47;68H134,13[8C81%[46;13H[?12l[?25h[?25l[27m[m[H[2J[1;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[2;12H [34m# Work-around to get the modulation's bits_per_symbol[m[3;12H args = modulator.extract_kwargs_from_options(options)[4;12H symbol_rate = options.bitrate / modulator(**args).bits_per_symbol()[6;12H self.sink = uhd_transmitter(options.args, symbol_rate,[7;40H options.samples_per_symbol,[8;40H options.tx_freq, options.tx_gain,[9;40H options.spec, options.antenna,[10;40H options.verbose)[11;12H options.samples_per_symbol = self.sink._sps[13;8H [33melif[m(options.to_file [33mis[m [33mnot[m [36mNone[m):[14;12H sys.stderr.write(([31m"Saving samples to '%s'.[m[35m\n\n[m[31m"[m % (options.to_file)))[15;12H self.sink = gr.file_sink(gr.sizeof_gr_complex, options.to_file)[16;8H [33melse[m:[17;12H sys.stderr.write([31m"No sink defined, dumping samples to null sink.[m[35m\n\n[m[31m"[m)[18;12H self.sink = gr.null_sink(gr.sizeof_gr_complex)[20;8H [34m# do this after for any adjustments to the options that may[m[21;8H [34m# occur in the sinks (specifically the UHD sink)[m[22;8H self.txpath = transmit_path(modulator, options)[24;8H self.connect(self.txpath, self.sink)

[34m# /////////////////////////////////////////////////////////////////////////////
#                                   main
# /////////////////////////////////////////////////////////////////////////////[m

[33mdef[m [36mmain[m():[32;4H [33mdef[m [36msend_pkt[m(payload=[31m''[m, eof=[36mFalse[m):[33;8H [33mreturn[m tb.txpath.send_pkt(payload, eof)[35;4H mods = digital.modulation_utils.type_1_mods()[37;4H parser = OptionParser(option_class=eng_option, conflict_handler=[31m"resolve"[m)
    expert_grp = parser.add_option_group([31m"Expert"[m)[40;4H parser.add_option([31m"-m"[m, [31m"--modulation"[m, [36mtype[m=[31m"choice"[m, choices=mods.keys(),[41;22H default=[31m'psk'[m,[42;22H [36mhelp[m=[31m"Select modulation from: %s [default=%%default]"[m[43;28H % ([31m', '[m.join(mods.keys()),))[45;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[46;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)[47;68H90,23[9C40%[46;23H[?12l[?25h[?25l[27m[m[H[2J[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter

[35mimport[m time, struct, sys

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, modulator, options):[43;8H gr.top_block.__init__(self)[45;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[46;12H [34m# Work-around to get the modulation's bits_per_symbol[m[47;68H46,13[9CTop[46;13H[?12l[?25h[?25l[27m[m[H[2J[1;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[2;12H [34m# Work-around to get the modulation's bits_per_symbol[m[3;12H args = modulator.extract_kwargs_from_options(options)[4;12H symbol_rate = options.bitrate / modulator(**args).bits_per_symbol()[6;12H self.sink = uhd_transmitter(options.args, symbol_rate,[7;40H options.samples_per_symbol,[8;40H options.tx_freq, options.tx_gain,[9;40H options.spec, options.antenna,[10;40H options.verbose)[11;12H options.samples_per_symbol = self.sink._sps[13;8H [33melif[m(options.to_file [33mis[m [33mnot[m [36mNone[m):[14;12H sys.stderr.write(([31m"Saving samples to '%s'.[m[35m\n\n[m[31m"[m % (options.to_file)))[15;12H self.sink = gr.file_sink(gr.sizeof_gr_complex, options.to_file)[16;8H [33melse[m:[17;12H sys.stderr.write([31m"No sink defined, dumping samples to null sink.[m[35m\n\n[m[31m"[m)[18;12H self.sink = gr.null_sink(gr.sizeof_gr_complex)[20;8H [34m# do this after for any adjustments to the options that may[m[21;8H [34m# occur in the sinks (specifically the UHD sink)[m[22;8H self.txpath = transmit_path(modulator, options)[24;8H self.connect(self.txpath, self.sink)

[34m# /////////////////////////////////////////////////////////////////////////////
#                                   main
# /////////////////////////////////////////////////////////////////////////////[m

[33mdef[m [36mmain[m():[32;4H [33mdef[m [36msend_pkt[m(payload=[31m''[m, eof=[36mFalse[m):[33;8H [33mreturn[m tb.txpath.send_pkt(payload, eof)[35;4H mods = digital.modulation_utils.type_1_mods()[37;4H parser = OptionParser(option_class=eng_option, conflict_handler=[31m"resolve"[m)
    expert_grp = parser.add_option_group([31m"Expert"[m)[40;4H parser.add_option([31m"-m"[m, [31m"--modulation"[m, [36mtype[m=[31m"choice"[m, choices=mods.keys(),[41;22H default=[31m'psk'[m,[42;22H [36mhelp[m=[31m"Select modulation from: %s [default=%%default]"[m[43;28H % ([31m', '[m.join(mods.keys()),))[45;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[46;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)[47;68H45,9[10C40%[1;9H[?12l[?25h[?25l[27m[m[H[2J[1;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[2;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)
    parser.add_option([31m"-M"[m, [31m"--megabytes"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1.0[m,[4;22H [36mhelp[m=[31m"set megabytes to transmit [default=%default]"[m)
    parser.add_option([31m""[m,[31m"--discontinuous"[m, action=[31m"store_true"[m, default=[36mFalse[m,[6;22H [36mhelp[m=[31m"enable discontinous transmission (bursts of 5 packets)"[m)
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[8;22H [36mhelp[m=[31m"use intput file for packet contents"[m)
    parser.add_option([31m""[m,[31m"--to-file"[m, default=[36mNone[m,[10;22H [36mhelp[m=[31m"Output file for modulated samples"[m)[12;4H transmit_path.add_options(parser, expert_grp)
    uhd_transmitter.add_options(parser)[15;4H [33mfor[m mod [33min[m mods.values():[16;8H mod.add_options(expert_grp)[18;4H (options, args) = parser.parse_args ()[20;4H [33mif[m [36mlen[m(args) != [31m0[m:[21;8H parser.print_help()[22;8H sys.exit([31m1[m)[24;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[25;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[27;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[30;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[32;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[34;4H tb.start()[22C [34m# start flow graph[m[36;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[42;4H [33mwhile[m n < nbytes:[43;8H [33mif[m options.from_file [33mis[m [36mNone[m:[44;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[45;8H [33melse[m:[46;12H data = source_file.read(pkt_size - [31m2[m)[47;68H89,5[10C81%[1;5H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim ~/.bashrc
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"~/.bashrc" 102L, 3162C[>c[1;1H[34m# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything[m
[33m[[m [33m-z[m [33m"[m[35m$PS1[m[33m"[m [33m][m && [33mreturn[m

[34m# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace[m
[36mHISTCONTROL[m=ignoredups:ignorespace

[34m# append to the history file, don't overwrite it[m
[33mshopt[m [35m-s[m histappend

[34m# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)[m
[36mHISTSIZE[m=[31m1000[m
[36mHISTFILESIZE[m=[31m2000[m

[34m# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.[m
[33mshopt[m [35m-s[m checkwinsize

[34m# make less more friendly for non-text input files, see lesspipe(1)[m
[33m[[m [33m-x[m /usr/bin/lesspipe [33m][m && [33meval[m [33m"[m[35m$(SHELL[m[33m=[m[35m/bin/sh lesspipe)[m[33m"[m

[34m# set variable identifying the chroot you work in (used in the prompt below)[m
[33mif [[m [33m-z[m [33m"[m[35m$debian_chroot[m[33m"[m [33m][m [33m&&[m [33m[[m [33m-r[m /etc/debian_chroot [33m];[m [33mthen[m
    [36mdebian_chroot[m=[35m$(cat /etc/debian_chroot)[m
[33mfi[m

[34m# set a fancy prompt (non-color, unless we know we "want" color)[m
[33mcase[m [33m"[m[35m$TERM[m[33m"[m [33min[m
    xterm-color[33m)[m [36mcolor_prompt[m=yes[33m;;
esac[m

[34m# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes[m

[33mif [[m [33m-n[m [33m"[m[35m$force_color_prompt[m[33m"[m [33m];[m [33mthen[m
    [33mif [[m [33m-x[m /usr/bin/tput [33m][m [33m&&[m tput setaf [31m1[m [33m>&[m/dev/null[33m;[m [33mthen[m[43;8H [34m# We have color support; assume it's compliant with Ecma-48[m[44;8H [34m# (ISO/IEC-6429). (Lack of such support is extremely rare, and such[m[45;8H [34m# a case would tend to support setf rather than setaf.)[m[46;8H [36mcolor_prompt[m=yes[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[2;1H[34m# If this is an xterm set the title to user@host:dir[m
[33mcase[m [33m"[m[35m$TERM[m[33m"[m [33min[m
xterm*[33m|[mrxvt*[33m)[m
    [35mPS1[m[33m="[m[31m\[[m[35m\e[m[31m]0;[m[35m${debian_chroot[m[33m:+[m([35m$debian_chroot[m)[35m}[m[31m\u@\h: \w[m[35m\a[m[31m\][m[35m$PS1[m[33m"[m
    [33m;;[m
*[33m)[m
    [33m;;
esac[m

[34m# enable color support of ls and also add handy aliases[m
[33mif [[m [33m-x[m /usr/bin/dircolors [33m];[m [33mthen[m
    [33mtest[m [33m-r[m ~/.dircolors [33m&&[m [33meval[m [33m"[m[35m$(dircolors -b ~/.dircolors)[m[33m"[m [33m||[m [33meval[m [33m"[m[35m$(dircolors  [14;1H-b)[m[33m"[m
    [33malias [m[36mls[m[33m='[m[31mls --color=auto[m[33m'[m
    [34m#alias dir='dir --color=auto'[m
    [34m#alias vdir='vdir --color=auto'[m[19;4H [33malias [m[36mgrep[m[33m='[m[31mgrep --color=auto[m[33m'[m
    [33malias [m[36mfgrep[m[33m='[m[31mfgrep --color=auto[m[33m'[m
    [33malias [m[36megrep[m[33m='[m[31megrep --color=auto[m[33m'
fi[m

[34m# some more ls aliases[m
[33malias [m[36mll[m[33m='[m[31mls -alF[m[33m'
alias [m[36mla[m[33m='[m[31mls -A[m[33m'
alias[m [36ml[m=[33m'[m[31mls -CF[m[33m'[m

[34m# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.[m

[33mif [[m [33m-f[m ~/.bash_aliases [33m];[m [33mthen
[m   [33m . [m~/.bash_aliases
[33mfi[m

[34m# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
#if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
#    . /etc/bash_completion
#fi[m


[33mexport[m[36m PYTHONPATH=[m/root/gnuradio/build/gr-filter/swig[47;68H102,1[9CBot[46;1H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim ~/.bashrcbenchmark_tx.py
\[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx.py" 154L, 5415C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter

[35mimport[m time, struct, sys

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, modulator, options):[43;8H gr.top_block.__init__(self)[45;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[46;12H [34m# Work-around to get the modulation's bits_per_symbol[m[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[47;68H2[2;1H[?12l[?25h[?25l[47;68H3[3;1H[?12l[?25h[?25l[27m[m[H[2J[1;8H parser.print_help()[2;8H sys.exit([31m1[m)[4;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[5;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[7;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[10;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[12;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[14;4H tb.start()[22C [34m# start flow graph[m[16;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[22;4H [33mwhile[m n < nbytes:[23;8H [33mif[m options.from_file [33mis[m [36mNone[m:[24;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[25;8H [33melse[m:[26;12H data = source_file.read(pkt_size - [31m2[m)[27;12H [33mif[m data == [31m''[m:[28;16H [33mbreak[m;[30;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[31;8H send_pkt(payload)[32;8H n += [36mlen[m(payload)[33;8H sys.stderr.write([31m'.'[m)[34;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[35;12H time.sleep([31m1[m)[36;8H pktno += [31m1[m[38;4H send_pkt(eof=[36mTrue[m)[40;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[44;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[46;8H [33mpass[m[47;68H154,9[9CBot[46;9H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25he[?25l[?12l[?25h[?25l [?12l[?25ht[?25l[?12l[?25hr[?25l[?12l[?25ha[?25l[?12l[?25hn[?25l[?12l[?25hs[?25l[?12l[?25hm[?25l[?12l[?25h...[?25lit_path.py[?12l[?25h[?25l"transmit_path.py" 126L, 4800C[1;1H[34m#[m[1;9H[K[2;1H[34m# Copyright 2005-2007,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio[m[4;33H[K[5;1H[34m# [m[5;9H[K[6;1H[34m# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# [m[10;5H[K[11;1H[34m# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.[m[14;47H[K[15;1H[34m# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m[20;5H[K[22;1H[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation[23;34H[K[24;1H[35mfrom[m gnuradio [35mimport[m digital[24;30H[K[25;9H[K[26;1H[35mimport[m copy[26;13H[K[27;1H[35mimport[m sys[27;13H[K[28;17H[K[29;1H[34m# /////////////////////////////////////////////////////////////////////////////
#                              transmit path[m[30;45H[K[31;1H[34m# /////////////////////////////////////////////////////////////////////////////[m[32;9H[K[33;1H[33mclass[m [36mtransmit_path[m(gr.hier_block2):
    [33mdef[m [36m__init__[m(self, modulator_class, options):[34;51H[K[35;8H [31m'''[m[35;13H[K[36;1H[31m        See below for what options should hold
        '''[m
        gr.hier_block2.__init__(self, [31m"transmit_path"[m,[39;32H gr.io_signature([31m0[m,[31m0[m,[31m0[m),
             [18C gr.io_signature([31m1[m,[31m1[m,gr.sizeof_gr_complex))

        options = copy.copy(options)    [34m# make a copy so we can destructively modify[m[43;5H[K[44;8H self._verbose      = options.verbose
        self._tx_amplitude = options.tx_amplitude   [34m# digital amplitude sent to USRP[m[46;8H self._bitrate      = options.bitrate[7C [34m# desired bit rate[m[47;68H1,1[11CTop[1;1H[?12l[?25h[?25l[27m[m[H[2J[1;8H [33mreturn[m self.packet_transmitter.send_pkt(payload, eof)[3;4H [33mdef[m [36mbitrate[m(self):[4;8H [33mreturn[m self._bitrate[6;4H [33mdef[m [36msamples_per_symbol[m(self):[7;8H [33mreturn[m self.modulator._samples_per_symbol[9;4H [33mdef[m [36mdifferential[m(self):[10;8H [33mreturn[m self.modulator._differential[12;4H [33mdef[m [36madd_options[m(normal, expert):[13;8H [31m"""
        Adds transmitter-specific options to the Options Parser
        """[m[16;8H [33mif[m [33mnot[m normal.has_option([31m'--bitrate'[m):[17;12H normal.add_option([31m"-r"[m, [31m"--bitrate"[m, [36mtype[m=[31m"eng_float"[m,[18;30H default=[31m2500e3[m,[19;30H [36mhelp[m=[31m"specify bitrate [default=%default]."[m)[20;8H normal.add_option([31m""[m, [31m"--tx-amplitude"[m, [36mtype[m=[31m"eng_float"[m,[21;26H default=[31m0.50[m, metavar=[31m"AMPL"[m,[22;26H [36mhelp[m=[31m"set transmitter digital amplitude: 0 <= AMPL < 1 [deff[23;1Hault=%default]"[m)[24;8H normal.add_option([31m"-v"[m, [31m"--verbose"[m, action=[31m"store_true"[m,[25;26H default=[36mFalse[m)[27;8H expert.add_option([31m"-S"[m, [31m"--samples-per-symbol"[m, [36mtype[m=[31m"float"[m,[28;26H default=[31m2[m,[29;26H [36mhelp[m=[31m"set samples/symbol [default=%default]"[m)[30;8H expert.add_option([31m""[m, [31m"--log"[m, action=[31m"store_true"[m,[31;26H default=[36mFalse[m,[32;26H [36mhelp[m=[31m"Log all parts of flow graph to file (CAUTION: lots off[33;1H data)"[m)[35;4H [34m# Make a static method to call before instantiation[m
    add_options = [36mstaticmethod[m(add_options)[38;4H [33mdef[m [36m_print_verbage[m(self):[39;8H [31m"""
        Prints information about the transmit path
        """[m[42;8H [36mprint[m [31m"Tx amplitude     %s"[m    % (self._tx_amplitude)[43;8H [36mprint[m [31m"modulation:      %s"[m    % (self._modulator_class.__name__)[44;8H [36mprint[m [31m"bitrate:         %sb/s"[m % (eng_notation.num_to_str(self._bitrate))[45;8H [36mprint[m [31m"samples/symbol:  %.4f"[m  % (self.samples_per_symbol())[46;8H [36mprint[m [31m"Differential:    %s"[m    % (self.differential())[47;68H126,9[9CBot[46;9H[?12l[?25h[?25l[27m[m[H[2J[1;32H gr.io_signature([31m1[m,[31m1[m,gr.sizeof_gr_complex))[3;8H options = copy.copy(options)    [34m# make a copy so we can destructively modify[m[5;8H self._verbose      = options.verbose[6;8H self._tx_amplitude = options.tx_amplitude   [34m# digital amplitude sent to USRP[m[7;8H self._bitrate      = options.bitrate[7C [34m# desired bit rate[m[8;8H self._modulator_class = modulator_class     [34m# the modulator_class we are usinn[9;1Hg[m[11;8H [34m# Get mod_kwargs[m[12;8H mod_kwargs = self._modulator_class.extract_kwargs_from_options(options)[14;8H [34m# transmitter[m[15;8H self.modulator = self._modulator_class(**mod_kwargs)[17;8H self.packet_transmitter = [35m\[m[18;12H digital.mod_pkts(self.modulator,[19;29H access_code=[36mNone[m,[20;29H msgq_limit=[31m4[m,[21;29H pad_for_usrp=[36mTrue[m)[23;8H self.amp = gr.multiply_const_cc([31m1[m)[24;8H self.set_tx_amplitude(self._tx_amplitude)[26;8H [34m# Display some information about the setup[m[27;8H [33mif[m self._verbose:[28;12H self._print_verbage()[30;8H [34m# Connect components in the flowgraph[m[31;8H self.connect(self.packet_transmitter, self.amp, self)[33;4H [33mdef[m [36mset_tx_amplitude[m(self, ampl):[34;8H [31m"""
        Sets the transmit amplitude sent to the USRP in volts
        @param: ampl 0 <= ampl < 1.
        """[m[38;8H self._tx_amplitude = [36mmax[m([31m0.0[m, [36mmin[m(ampl, [31m1[m))[39;8H self.amp.set_k(self._tx_amplitude)[41;4H [33mdef[m [36msend_pkt[m(self, payload=[31m''[m, eof=[36mFalse[m):[42;8H [31m"""
        Calls the transmitter method to send a packet
        """[m[45;8H [33mreturn[m self.packet_transmitter.send_pkt(payload, eof)[47;68H84,8[10C48%[46;8H[?12l[?25h[?25l[1;46r[1;1H[39L[1;47r[1;1H[34m#
# Copyright 2005-2007,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio [35mimport[m digital

[35mimport[m copy
[35mimport[m sys

[34m# /////////////////////////////////////////////////////////////////////////////
#                              transmit path
# /////////////////////////////////////////////////////////////////////////////[m

[33mclass[m [36mtransmit_path[m(gr.hier_block2):
    [33mdef[m [36m__init__[m(self, modulator_class, options):[35;8H [31m'''
        See below for what options should hold
        '''[m[38;8H gr.hier_block2.__init__(self, [31m"transmit_path"[m,[39;32H gr.io_signature([31m0[m,[31m0[m,[31m0[m),[47;68H[K[47;68H41,8[10CTop[41;8H[?12l[?25h[?25l[27m[m[H[2J[1;8H self._tx_amplitude = options.tx_amplitude   [34m# digital amplitude sent to USRP[m[2;8H self._bitrate      = options.bitrate[7C [34m# desired bit rate[m[3;8H self._modulator_class = modulator_class     [34m# the modulator_class we are usinn[4;1Hg[m[6;8H [34m# Get mod_kwargs[m[7;8H mod_kwargs = self._modulator_class.extract_kwargs_from_options(options)[9;8H [34m# transmitter[m[10;8H self.modulator = self._modulator_class(**mod_kwargs)[12;8H self.packet_transmitter = [35m\[m[13;12H digital.mod_pkts(self.modulator,[14;29H access_code=[36mNone[m,[15;29H msgq_limit=[31m4[m,[16;29H pad_for_usrp=[36mTrue[m)[18;8H self.amp = gr.multiply_const_cc([31m1[m)[19;8H self.set_tx_amplitude(self._tx_amplitude)[21;8H [34m# Display some information about the setup[m[22;8H [33mif[m self._verbose:[23;12H self._print_verbage()[25;8H [34m# Connect components in the flowgraph[m[26;8H self.connect(self.packet_transmitter, self.amp, self)[28;4H [33mdef[m [36mset_tx_amplitude[m(self, ampl):[29;8H [31m"""
        Sets the transmit amplitude sent to the USRP in volts
        @param: ampl 0 <= ampl < 1.
        """[m[33;8H self._tx_amplitude = [36mmax[m([31m0.0[m, [36mmin[m(ampl, [31m1[m))[34;8H self.amp.set_k(self._tx_amplitude)[36;4H [33mdef[m [36msend_pkt[m(self, payload=[31m''[m, eof=[36mFalse[m):[37;8H [31m"""
        Calls the transmitter method to send a packet
        """[m[40;8H [33mreturn[m self.packet_transmitter.send_pkt(payload, eof)[42;4H [33mdef[m [36mbitrate[m(self):[43;8H [33mreturn[m self._bitrate[45;4H [33mdef[m [36msamples_per_symbol[m(self):[46;8H [33mreturn[m self.modulator._samples_per_symbol[47;68H45,9[10C54%[1;9H[?12l[?25h[?25l[27m[m[H[2J[1;4H [33mdef[m [36msamples_per_symbol[m(self):[2;8H [33mreturn[m self.modulator._samples_per_symbol[4;4H [33mdef[m [36mdifferential[m(self):[5;8H [33mreturn[m self.modulator._differential[7;4H [33mdef[m [36madd_options[m(normal, expert):[8;8H [31m"""
        Adds transmitter-specific options to the Options Parser
        """[m[11;8H [33mif[m [33mnot[m normal.has_option([31m'--bitrate'[m):[12;12H normal.add_option([31m"-r"[m, [31m"--bitrate"[m, [36mtype[m=[31m"eng_float"[m,[13;30H default=[31m2500e3[m,[14;30H [36mhelp[m=[31m"specify bitrate [default=%default]."[m)[15;8H normal.add_option([31m""[m, [31m"--tx-amplitude"[m, [36mtype[m=[31m"eng_float"[m,[16;26H default=[31m0.50[m, metavar=[31m"AMPL"[m,[17;26H [36mhelp[m=[31m"set transmitter digital amplitude: 0 <= AMPL < 1 [deff[18;1Hault=%default]"[m)[19;8H normal.add_option([31m"-v"[m, [31m"--verbose"[m, action=[31m"store_true"[m,[20;26H default=[36mFalse[m)[22;8H expert.add_option([31m"-S"[m, [31m"--samples-per-symbol"[m, [36mtype[m=[31m"float"[m,[23;26H default=[31m2[m,[24;26H [36mhelp[m=[31m"set samples/symbol [default=%default]"[m)[25;8H expert.add_option([31m""[m, [31m"--log"[m, action=[31m"store_true"[m,[26;26H default=[36mFalse[m,[27;26H [36mhelp[m=[31m"Log all parts of flow graph to file (CAUTION: lots off[28;1H data)"[m)[30;4H [34m# Make a static method to call before instantiation[m
    add_options = [36mstaticmethod[m(add_options)[33;4H [33mdef[m [36m_print_verbage[m(self):[34;8H [31m"""
        Prints information about the transmit path
        """[m[37;8H [36mprint[m [31m"Tx amplitude     %s"[m    % (self._tx_amplitude)[38;8H [36mprint[m [31m"modulation:      %s"[m    % (self._modulator_class.__name__)[39;8H [36mprint[m [31m"bitrate:         %sb/s"[m % (eng_notation.num_to_str(self._bitrate))[40;8H [36mprint[m [31m"samples/symbol:  %.4f"[m  % (self.samples_per_symbol())[41;8H [36mprint[m [31m"Differential:    %s"[m    % (self.differential())
[1m[34m~                                                                                    [43;1H~                                                                                    [44;1H~                                                                                    [45;1H~                                                                                    [46;1H~                                                                                    [m[47;68H88,5[10CBot[1;5H[?12l[?25h[?25l[27m[m[H[2J[1;8H self._tx_amplitude = options.tx_amplitude   [34m# digital amplitude sent to USRP[m[2;8H self._bitrate      = options.bitrate[7C [34m# desired bit rate[m[3;8H self._modulator_class = modulator_class     [34m# the modulator_class we are usinn[4;1Hg[m[6;8H [34m# Get mod_kwargs[m[7;8H mod_kwargs = self._modulator_class.extract_kwargs_from_options(options)[9;8H [34m# transmitter[m[10;8H self.modulator = self._modulator_class(**mod_kwargs)[12;8H self.packet_transmitter = [35m\[m[13;12H digital.mod_pkts(self.modulator,[14;29H access_code=[36mNone[m,[15;29H msgq_limit=[31m4[m,[16;29H pad_for_usrp=[36mTrue[m)[18;8H self.amp = gr.multiply_const_cc([31m1[m)[19;8H self.set_tx_amplitude(self._tx_amplitude)[21;8H [34m# Display some information about the setup[m[22;8H [33mif[m self._verbose:[23;12H self._print_verbage()[25;8H [34m# Connect components in the flowgraph[m[26;8H self.connect(self.packet_transmitter, self.amp, self)[28;4H [33mdef[m [36mset_tx_amplitude[m(self, ampl):[29;8H [31m"""
        Sets the transmit amplitude sent to the USRP in volts
        @param: ampl 0 <= ampl < 1.
        """[m[33;8H self._tx_amplitude = [36mmax[m([31m0.0[m, [36mmin[m(ampl, [31m1[m))[34;8H self.amp.set_k(self._tx_amplitude)[36;4H [33mdef[m [36msend_pkt[m(self, payload=[31m''[m, eof=[36mFalse[m):[37;8H [31m"""
        Calls the transmitter method to send a packet
        """[m[40;8H [33mreturn[m self.packet_transmitter.send_pkt(payload, eof)[42;4H [33mdef[m [36mbitrate[m(self):[43;8H [33mreturn[m self._bitrate[45;4H [33mdef[m [36msamples_per_symbol[m(self):[46;8H [33mreturn[m self.modulator._samples_per_symbol[47;68H89,9[10C54%[46;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[34m#
# Copyright 2005-2007,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio [35mimport[m digital

[35mimport[m copy
[35mimport[m sys

[34m# /////////////////////////////////////////////////////////////////////////////
#                              transmit path
# /////////////////////////////////////////////////////////////////////////////[m

[33mclass[m [36mtransmit_path[m(gr.hier_block2):
    [33mdef[m [36m__init__[m(self, modulator_class, options):[35;8H [31m'''
        See below for what options should hold
        '''[m[38;8H gr.hier_block2.__init__(self, [31m"transmit_path"[m,[39;32H gr.io_signature([31m0[m,[31m0[m,[31m0[m),[40;32H gr.io_signature([31m1[m,[31m1[m,gr.sizeof_gr_complex))[42;8H options = copy.copy(options)    [34m# make a copy so we can destructively modify[m[44;8H self._verbose      = options.verbose[45;8H self._tx_amplitude = options.tx_amplitude   [34m# digital amplitude sent to USRP[m[46;8H self._bitrate      = options.bitrate[7C [34m# desired bit rate[m[47;68H46,9[10CTop[46;9H[?12l[?25h[?25l[27m[m[H[2J[1;8H self._tx_amplitude = options.tx_amplitude   [34m# digital amplitude sent to USRP[m[2;8H self._bitrate      = options.bitrate[7C [34m# desired bit rate[m[3;8H self._modulator_class = modulator_class     [34m# the modulator_class we are usinn[4;1Hg[m[6;8H [34m# Get mod_kwargs[m[7;8H mod_kwargs = self._modulator_class.extract_kwargs_from_options(options)[9;8H [34m# transmitter[m[10;8H self.modulator = self._modulator_class(**mod_kwargs)[12;8H self.packet_transmitter = [35m\[m[13;12H digital.mod_pkts(self.modulator,[14;29H access_code=[36mNone[m,[15;29H msgq_limit=[31m4[m,[16;29H pad_for_usrp=[36mTrue[m)[18;8H self.amp = gr.multiply_const_cc([31m1[m)[19;8H self.set_tx_amplitude(self._tx_amplitude)[21;8H [34m# Display some information about the setup[m[22;8H [33mif[m self._verbose:[23;12H self._print_verbage()[25;8H [34m# Connect components in the flowgraph[m[26;8H self.connect(self.packet_transmitter, self.amp, self)[28;4H [33mdef[m [36mset_tx_amplitude[m(self, ampl):[29;8H [31m"""
        Sets the transmit amplitude sent to the USRP in volts
        @param: ampl 0 <= ampl < 1.
        """[m[33;8H self._tx_amplitude = [36mmax[m([31m0.0[m, [36mmin[m(ampl, [31m1[m))[34;8H self.amp.set_k(self._tx_amplitude)[36;4H [33mdef[m [36msend_pkt[m(self, payload=[31m''[m, eof=[36mFalse[m):[37;8H [31m"""
        Calls the transmitter method to send a packet
        """[m[40;8H [33mreturn[m self.packet_transmitter.send_pkt(payload, eof)[42;4H [33mdef[m [36mbitrate[m(self):[43;8H [33mreturn[m self._bitrate[45;4H [33mdef[m [36msamples_per_symbol[m(self):[46;8H [33mreturn[m self.modulator._samples_per_symbol[47;68H45,9[10C54%[1;9H[?12l[?25h[?25l[27m[m[H[2J[1;4H [33mdef[m [36msamples_per_symbol[m(self):[2;8H [33mreturn[m self.modulator._samples_per_symbol[4;4H [33mdef[m [36mdifferential[m(self):[5;8H [33mreturn[m self.modulator._differential[7;4H [33mdef[m [36madd_options[m(normal, expert):[8;8H [31m"""
        Adds transmitter-specific options to the Options Parser
        """[m[11;8H [33mif[m [33mnot[m normal.has_option([31m'--bitrate'[m):[12;12H normal.add_option([31m"-r"[m, [31m"--bitrate"[m, [36mtype[m=[31m"eng_float"[m,[13;30H default=[31m2500e3[m,[14;30H [36mhelp[m=[31m"specify bitrate [default=%default]."[m)[15;8H normal.add_option([31m""[m, [31m"--tx-amplitude"[m, [36mtype[m=[31m"eng_float"[m,[16;26H default=[31m0.50[m, metavar=[31m"AMPL"[m,[17;26H [36mhelp[m=[31m"set transmitter digital amplitude: 0 <= AMPL < 1 [deff[18;1Hault=%default]"[m)[19;8H normal.add_option([31m"-v"[m, [31m"--verbose"[m, action=[31m"store_true"[m,[20;26H default=[36mFalse[m)[22;8H expert.add_option([31m"-S"[m, [31m"--samples-per-symbol"[m, [36mtype[m=[31m"float"[m,[23;26H default=[31m2[m,[24;26H [36mhelp[m=[31m"set samples/symbol [default=%default]"[m)[25;8H expert.add_option([31m""[m, [31m"--log"[m, action=[31m"store_true"[m,[26;26H default=[36mFalse[m,[27;26H [36mhelp[m=[31m"Log all parts of flow graph to file (CAUTION: lots off[28;1H data)"[m)[30;4H [34m# Make a static method to call before instantiation[m
    add_options = [36mstaticmethod[m(add_options)[33;4H [33mdef[m [36m_print_verbage[m(self):[34;8H [31m"""
        Prints information about the transmit path
        """[m[37;8H [36mprint[m [31m"Tx amplitude     %s"[m    % (self._tx_amplitude)[38;8H [36mprint[m [31m"modulation:      %s"[m    % (self._modulator_class.__name__)[39;8H [36mprint[m [31m"bitrate:         %sb/s"[m % (eng_notation.num_to_str(self._bitrate))[40;8H [36mprint[m [31m"samples/symbol:  %.4f"[m  % (self.samples_per_symbol())[41;8H [36mprint[m [31m"Differential:    %s"[m    % (self.differential())
[1m[34m~                                                                                    [43;1H~                                                                                    [44;1H~                                                                                    [45;1H~                                                                                    [46;1H~                                                                                    [m[47;68H88,5[10CBot[1;5H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim benchmark_tx.py[6P~/.bashrcbenchmark_tx.py./benchmark_tx3.py -f 1.35e9 ---bitrate 1000k500k2000k1500k000k[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [10Pvim benchmark_tx.py
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K3.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx3.py" 319L, 10069C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m time, struct, sys, socket
[35mimport[m filter_swig [33mas[m [36mfilter[m
[35mimport[m copy

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mfilter_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, options):[46;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.250[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[19;12H [33mif[m low_sum > high_sum * [31m1.5[m:[20;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m1.5[m:[23;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[47;70H8,1  [45;1H[?12l[?25h[?25l[47;70H7[44;1H[?12l[?25h[?25l[47;70H6[43;1H[?12l[?25h[?25l[47;70H5[42;1H[?12l[?25h[?25l[47;70H4[41;1H[?12l[?25h[?25l[47;70H3,0-1[40;1H[?12l[?25h[?25l[47;70H2,1  [39;1H[?12l[?25h[?25l[47;70H1,0-1[38;1H[?12l[?25h[?25l[47;70H0,1  [37;1H[?12l[?25h[?25l[47;69H09[36;1H[?12l[?25h[?25l[47;70H8[35;1H[?12l[?25h[?25l[47;70H7[34;1H[?12l[?25h[?25l[47;70H6[33;1H[?12l[?25h[?25l[47;70H5[32;1H[?12l[?25h[?25l[47;70H4,0-1[31;1H[?12l[?25h[?25l[47;70H3,1  [30;1H[?12l[?25h[?25l[47;70H2[29;1H[?12l[?25h[?25l[47;70H1[28;1H[?12l[?25h[?25l[47;70H0,0-1[27;1H[?12l[?25h[?25l[47;68H299,1  [26;1H[?12l[?25h[?25l[47;70H8,0-1[25;1H[?12l[?25h[?25l[47;70H7,1  [24;1H[?12l[?25h[?25l[47;70H6[23;1H[?12l[?25h[?25l[47;70H5[22;1H[?12l[?25h[?25l[47;70H4[21;1H[?12l[?25h[?25l[47;70H3[20;1H[?12l[?25h[?25l[47;70H2[19;1H[?12l[?25h[?25l[47;70H1,0-1[18;1H[?12l[?25h[?25l[47;70H0,1  [17;1H[?12l[?25h[?25l[47;69H89[16;1H[?12l[?25h[?25l[47;70H8[15;1H[?12l[?25h[?25l[47;70H7[14;1H[?12l[?25h[?25l[47;70H6[13;1H[?12l[?25h[?25l[47;70H5[12;1H[?12l[?25h[?25l[47;70H4[11;1H[?12l[?25h[?25l[47;70H3[10;1H[?12l[?25h[?25l[47;70H2[9;1H[?12l[?25h[?25l[47;70H1[8;1H[?12l[?25h[?25l[47;70H0[7;1H[?12l[?25h[?25l[47;69H79[6;1H[?12l[?25h[?25l[47;70H8[5;1H[?12l[?25h[?25l[47;70H7,0-1[4;1H[?12l[?25h[?25l[47;70H8,9  [5;9H[?12l[?25h[?25l[47;70H9[6;9H[?12l[?25h[?25l[47;72H13[6;13H[?12l[?25h[?25l[47;73H5[6;15H[?12l[?25h[?25l[47;70H8[5;15H[?12l[?25h[?25l[47;73H8[5;18H[?12l[?25h[?25l[47;72H20[5;20H[?12l[?25h[?25l[47;73H1[5;21H[?12l[?25h[?25l[31m20[?12l[?25h[?25l[m[47;73H2[5;22H[?12l[?25h[?25l[47;73H3[5;23H[?12l[?25h[?25l[47;73H6[5;26H[?12l[?25h[?25l[47;73H7[5;27H[?12l[?25h[?25l[31m20[?12l[?25h[?25l[m[47;68H[K[47;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10069C written[28C278,27[8CBot[47;68H[K[47;68H278,27[8CBot[5;27H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !.
./benchmark_tx3.py -f 1.35e9 --bitrate 1000k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
U^CSetting frequency to 1350625000

....................U
 low=0.315384
high=0.201876

Setting frequency to 1350625000

....................U
 low=0.106257
high=0.450323

Setting frequency to 1349375000

....................U
 low=0.606954
high=0.102962

Setting frequency to 1350625000

....................U
 low=0.100336
high=0.263291

Setting frequency to 1349375000

....................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9 ---bitrate 1000k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
U^CSetting frequency to 1350625000

....................U
 low=0.261143
high=0.189629

....................U
 low=0.331587
high=0.273179

....................U
 low=0.336552
high=0.306986

....................U
 low=0.240577
high=0.120078

Setting frequency to 1350625000

....................U
 low=0.119715
high=0.224383

Setting frequency to 1349375000

....................U
 low=0.633307
high=0.142233

Setting frequency to 1350625000

....................U
 low=0.166083
high=0.243773

....................U
 low=0.394070
high=0.160143

Setting frequency to 1350625000

....................U
 low=0.267287
high=0.211822

....................U
 low=0.338082
high=0.341413

....................U
 low=0.052290
high=0.301224

Setting frequency to 1349375000

....................U
 low=0.200890
high=0.284682

....................U
 low=0.613082
high=0.074997

Setting frequency to 1350625000

....................U
 low=0.217422
high=0.093125

Setting frequency to 1350625000

....................U
 low=0.752749
high=0.145265

Setting frequency to 1350625000

....................U
 low=0.478325
high=0.223925

Setting frequency to 1350625000

....................U
 low=0.129320
high=0.037167

Setting frequency to 1350625000

....................U
 low=0.086583
high=0.144938

Setting frequency to 1349375000

....................U
 low=0.293408
high=0.103447

Setting frequency to 1350625000

....................U
 low=0.076500
high=0.305545

Setting frequency to 1349375000

....................U
 low=0.173823
high=0.175697

....................U
 low=0.769077
high=0.044223

Setting frequency to 1350625000

....................U
 low=0.258545
high=0.111676

Setting frequency to 1350625000

....................U
 low=0.309191
high=0.133967

Setting frequency to 1350625000

....................U
 low=0.142445
high=0.256233

Setting frequency to 1349375000

....................U
 low=0.193615
high=0.071424

Setting frequency to 1350625000

....................U
 low=0.145639
high=0.158392

....................U
 low=0.224321
high=0.191905

....................U
 low=0.109601
high=0.114674

....................U
 low=0.332107
high=0.162282

Setting frequency to 1350625000

....................U
 low=0.232103
high=0.174218

....................U
 low=0.174102
high=0.257077

....................U
 low=0.114319
high=0.433383

Setting frequency to 1349375000

....................U
 low=0.333053
high=0.045892

Setting frequency to 1350625000

....................U
 low=0.139120
high=0.332948

Setting frequency to 1349375000

....................U
 low=0.122025
high=0.105873

....................U
 low=0.370535
high=0.185519

Setting frequency to 1350625000

....................U
 low=0.310279
high=0.337632

....................U
 low=0.137750
high=0.258759

Setting frequency to 1349375000

....................U
 low=0.116680
high=0.064302

Setting frequency to 1350625000

....................U
 low=0.243826
high=0.342504

....................U
 low=0.257970
high=0.284317

....................U
 low=0.050455
high=0.457837

Setting frequency to 1349375000

....................U
 low=0.449107
high=0.080848

Setting frequency to 1350625000

....................U
 low=0.315958
high=0.262696

....................U
 low=0.101095
high=0.209042

Setting frequency to 1349375000

....................U
 low=0.445453
high=0.057513

Setting frequency to 1350625000

....................U
 low=0.305439
high=0.251113

....................U
 low=0.088064
high=0.151147

Setting frequency to 1349375000

....................U
 low=0.439879
high=0.192651

Setting frequency to 1350625000

....................U
 low=0.226823
high=0.128443

Setting frequency to 1350625000

....................U
 low=0.096826
high=0.250269

Setting frequency to 1349375000

....................U
 low=0.405766
high=0.244894

Setting frequency to 1350625000

....................U
 low=0.170586
high=0.031851

Setting frequency to 1350625000

....................U
 low=0.105738
high=0.049000

Setting frequency to 1350625000

....................U
 low=0.098417
high=0.079470

....................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py --tx-ampli tude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 2500k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

....................U
 low=0.029375
high=0.399957

Setting frequency to 1349375000

....................U
 low=0.171183
high=0.357966

Setting frequency to 1349375000

....................U
 low=0.139120
high=0.113484

....................U
 low=0.223345
high=0.152475

....................U
 low=0.345975
high=0.131468

Setting frequency to 1350625000

....................U
 low=0.208296
high=0.093511

Setting frequency to 1350625000

....................U
 low=0.085491
high=0.071914

....................U
 low=0.125438
high=0.285237

Setting frequency to 1349375000

....................U
 low=0.634418
high=0.134870

Setting frequency to 1350625000

....................U
 low=0.079890
high=0.399611

Setting frequency to 1349375000

....................UU
 low=0.139003
high=0.095536

....U.U...............U
 low=0.331373
high=0.129793

Setting frequency to 1350625000

....................U
 low=0.180781
high=0.259799

....................U
 low=0.139431
high=0.222578

Setting frequency to 1349375000

....................U
 low=0.485728
high=0.162491

Setting frequency to 1350625000

....................U
 low=0.466633
high=0.167098

Setting frequency to 1350625000

....................U
 low=0.100393
high=0.200280

Setting frequency to 1349375000

....................U
 low=0.327808
high=0.049945

Setting frequency to 1350625000

....................U
 low=0.196207
high=0.179694

....................^CU]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py --tx-amplittude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 2500k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
UINFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

....................U
 low=0.111951
high=0.131067

....................U
 low=0.040397
high=0.430232

Setting frequency to 1349375000

....................U
 low=0.435812
high=0.191129

Setting frequency to 1350625000

....................U
 low=0.200169
high=0.104840

Setting frequency to 1350625000

....................U
 low=0.202033
high=0.104531

Setting frequency to 1350625000

....................U
 low=0.265268
high=0.238680

....................U
 low=0.152316
high=0.267065

Setting frequency to 1349375000

....................U
 low=0.568432
high=0.095500

Setting frequency to 1350625000

....................U
 low=0.130494
high=0.243057

Setting frequency to 1349375000

....................U
 low=0.292227
high=0.074292

Setting frequency to 1350625000

....................U
 low=0.117901
high=0.418898

Setting frequency to 1349375000

....................U
 low=0.138737
high=0.155774

....................U
 low=0.581899
high=0.335008

Setting frequency to 1350625000

....................U
 low=0.091797
high=0.318242

Setting frequency to 1349375000

....................U
 low=0.105181
high=0.189429

Setting frequency to 1349375000

....................U
 low=0.327622
high=0.288535

....................U
 low=0.419241
high=0.036017

Setting frequency to 1350625000

....................U
 low=0.088341
high=0.156526

Setting frequency to 1349375000

....................U
 low=0.441801
high=0.084693

Setting frequency to 1350625000

....................U
 low=0.050889
high=0.220565

Setting frequency to 1349375000

....................U
 low=0.170507
high=0.151556

...U...U..............U
 low=0.101937
high=0.079609

....................U
 low=0.357467
high=0.230031

Setting frequency to 1350625000

....................U
 low=0.247506
high=0.137836

Setting frequency to 1350625000

....................U
 low=0.131864
high=0.059297

Setting frequency to 1350625000

....U................U
 low=0.071312
high=0.402505

Setting frequency to 1349375000

....................U
 low=0.570640
high=0.086178

Setting frequency to 1350625000

....................U
 low=0.087819
high=0.207304

Setting frequency to 1349375000

....................U
 low=0.207175
high=0.181266

....................U
 low=0.348846
high=0.095263

Setting frequency to 1350625000

....U................U
 low=0.084236
high=0.305305

Setting frequency to 1349375000

....................UU
 low=0.084470
high=0.033050

Setting frequency to 1350625000

....................U
 low=0.032981
high=0.316222

Setting frequency to 1349375000

........U.U...U........UUUUUUUUUUUU
 low=0.252479
high=0.092601

Setting frequency to 1350625000

....U.U..U.U..U..U........UUUUUUUUUUUUU
 low=0.532949
high=0.175603

Setting frequency to 1350625000

....................U
 low=0.020201
high=0.080328

Setting frequency to 1349375000

....U................UUU
 low=0.178785
high=0.036241

Setting frequency to 1350625000

....U.U...............U
 low=0.159417
high=0.351647

Setting frequency to 1349375000

...U..U..U.U.U...........UUUUUU
 low=0.445925
high=0.116821

Setting frequency to 1350625000

....................U
 low=0.199783
high=0.277806

....U................U
 low=0.306915
high=0.235889

....................U
 low=0.144371
high=0.129736

....................U
 low=0.124434
high=0.333614

Setting frequency to 1349375000

....................U
 low=0.119192
high=0.051481

Setting frequency to 1350625000

....................U
 low=0.267493
high=0.447799

Setting frequency to 1349375000

....................U
 low=0.204653
high=0.109656

Setting frequency to 1350625000

....................U
 low=0.287531
high=0.236490

....................U
 low=0.229606
high=0.430644

Setting frequency to 1349375000

....................U
 low=0.178234
high=0.147218

....................U
 low=0.637422
high=0.109629

Setting frequency to 1350625000

....................U
 low=0.223265
high=0.105009

Setting frequency to 1350625000

....................U
 low=0.074025
high=0.069562

....................U
 low=0.300106
high=0.160865

Setting frequency to 1350625000

....................U
 low=0.154428
high=0.182978

....................U
 low=0.077453
high=0.072205

....................U
 low=0.074552
high=0.274374

Setting frequency to 1349375000

....U................U
 low=0.188694
high=0.041385

Setting frequency to 1350625000

....................U
 low=0.124715
high=0.061190

Setting frequency to 1350625000

....................U
 low=0.313262
high=0.103691

Setting frequency to 1350625000

....................U
 low=0.131469
high=0.107237

....................U
 low=0.136742
high=0.180553

....................U
 low=0.117697
high=0.231401

Setting frequency to 1349375000

....................U
 low=0.168020
high=0.207307

....................U
 low=0.123587
high=0.203795

Setting frequency to 1349375000

....................U
 low=0.130982
high=0.122974

....................U
 low=0.287009
high=0.112525

Setting frequency to 1350625000

....................U
 low=0.091234
high=0.116753

....................U
 low=0.065466
high=0.063668

....................U
 low=0.063148
high=0.186156

Setting frequency to 1349375000

....................U
 low=0.252172
high=0.124752

Setting frequency to 1350625000

....................U
 low=0.103430
high=0.186554

Setting frequency to 1349375000

....................U
 low=0.234195
high=0.054624

Setting frequency to 1350625000

....................U
 low=0.105445
high=0.192947

Setting frequency to 1349375000

....................U
 low=0.195140
high=0.089338

Setting frequency to 1350625000

....................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !vim
vim benchmark_tx3.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx3.py" 319L, 10069C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m time, struct, sys, socket
[35mimport[m filter_swig [33mas[m [36mfilter[m
[35mimport[m copy

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mfilter_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, options):[46;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m20[m == [31m20[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.250[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[19;12H [33mif[m low_sum > high_sum * [31m1.5[m:[20;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m1.5[m:[23;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[47;70H8,1  [45;1H[?12l[?25h[?25l[47;70H7[44;1H[?12l[?25h[?25l[47;70H6[43;1H[?12l[?25h[?25l[47;70H5[42;1H[?12l[?25h[?25l[47;70H4[41;1H[?12l[?25h[?25l[47;70H3,0-1[40;1H[?12l[?25h[?25l[47;70H2,1  [39;1H[?12l[?25h[?25l[47;70H1,0-1[38;1H[?12l[?25h[?25l[27m[m[H[2J[1;4H [33mtry[m:[2;7H s.connect((TCP_IP, TCP_PORT))
    [33mexcept[m socket.timeout:[4;7H [36mprint[m[31m"Connection timed out, try again later"[m[5;7H [33mreturn[m
    [33mexcept[m socket.error:[7;7H [36mprint[m[31m"Connection error"[m[8;7H [33mreturn[m[10;4H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)
    tb.sink.set_freq(options.tx_freq+[31m625000[m)[13;4H n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m([31m1442[m)
    MESSAGE = struct.pack([31m'!l'[m,pkt_size-[31m2[m)[18;4H [33mwhile[m [31m1[m: [34m#n < nbytes:[m[19;8H [33mif[m options.from_file [33mis[m [36mNone[m:[20;12H [33mtry[m:[21;15H s.send(MESSAGE)[22;15H data=s.recv(pkt_size-[31m2[m)[23;12H [33mexcept[m socket.timeout:[24;15H [36mprint[m[31m"Connection timed out, try again later"[m[25;15H [33mreturn[m[26;12H [33mexcept[m socket.error:[27;15H [36mprint[m[31m"Connection closed"[m[28;15H [33mreturn[m[29;12H [33mif[m data.__len__() < [31m8[m:[30;15H [36mprint[m [31m"Connection timed out, try again later"[m[31;15H [33mbreak[m[32;12H [33mif[m options.verbose:[33;16H [34m# First 4 bytes are checksum followed by the 4 byte sequence number[m[34;19H crc,sn = struct.unpack([31m'!LL'[m,data[:[31m8[m])[35;19H [36mprint[m [31m"Seq #:"[m, sn, [31m" with CRC ["[m, [36mhex[m(crc), [31m"]"[m[37;8H [33melse[m:[38;12H data = source_file.read(pkt_size - [31m2[m)[39;12H [33mif[m data == [31m''[m:[40;16H [33mbreak[m;[42;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[43;8H send_pkt(payload)[44;8H n += [36mlen[m(payload)[45;8H sys.stderr.write([31m'.'[m)[46;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[47;68H275,9[9C83%[46;9H[?12l[?25h[?25l[47;68H[K[47;1H/[?12l[?25h2[?25l[?12l[?25h0[?25l[?12l[?25h[?25l[1;46r[1;1H[3M[1;47r[44;12H time.sleep([31m1[m)[46;8H [33mif[m pktno % [31m20[m == [31m20[m-[31m1[m:[47;1H[K[47;68H278,20[8C84%[46;20H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H tb.sink.set_gain(-[31m60[m)[47;68H[K[47;68H279,20[8C85%[46;20H[?12l[?25h[?25l[47;70H8[45;20H[?12l[?25h[?25l[47;73H1[45;21H[?12l[?25h[?25l[31m25[?12l[?25h[?25l[m[47;73H3[45;23H[?12l[?25h[?25l[47;73H6[45;26H[?12l[?25h[?25l[47;73H7[45;27H[?12l[?25h[?25l[31m25[?12l[?25h[?25l[m[47;68H[K[47;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10069C written[28C278,27[8C85%[47;68H[K[47;68H278,27[8C85%[45;27H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim benchmark_tx3.py./benchmark_tx3.py --tx-amplittude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 2500k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
UINFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

.........................U
 low=0.069761
high=0.106119

Setting frequency to 1349375000

.........................U
 low=0.183852
high=0.229744

.........................U
 low=0.217737
high=0.069458

Setting frequency to 1350625000

.........................U
 low=0.066800
high=0.243375

Setting frequency to 1349375000

.........................U
 low=0.358047
high=0.137408

Setting frequency to 1350625000

.........................U
 low=0.242242
high=0.158398

Setting frequency to 1350625000

.........................U
 low=0.069430
high=0.039061

Setting frequency to 1350625000

.........................U
 low=0.247467
high=0.382765

Setting frequency to 1349375000

.........................U
 low=0.197085
high=0.150237

.........................U
 low=0.295249
high=0.122807

Setting frequency to 1350625000

.........................U
 low=0.304197
high=0.295819

.........................U
 low=0.093054
high=0.190068

Setting frequency to 1349375000

.........................U
 low=0.196542
high=0.073248

Setting frequency to 1350625000

.........................U
 low=0.109417
high=0.106096

.........................U
 low=0.225348
high=0.112703

Setting frequency to 1350625000

.........................U
 low=0.223362
high=0.055823

Setting frequency to 1350625000

.........................U
 low=0.250568
high=0.070802

Setting frequency to 1350625000

.........................U
 low=0.152853
high=0.129697

.........................U
 low=0.095667
high=0.170714

Setting frequency to 1349375000

.........................U
 low=0.188219
high=0.058043

Setting frequency to 1350625000

.........................U
 low=0.180886
high=0.392982

Setting frequency to 1349375000

.........................U
 low=0.207154
high=0.077109

Setting frequency to 1350625000

.........................U
 low=0.040635
high=0.214088

Setting frequency to 1349375000

.........................U
 low=0.375141
high=0.137636

Setting frequency to 1350625000

.........................U
 low=0.088818
high=0.057761

Setting frequency to 1350625000

.........................U
 low=0.092859
high=0.192601

Setting frequency to 1349375000

.........................U
 low=0.289757
high=0.128507

Setting frequency to 1350625000

.........................U
 low=0.045341
high=0.095079

Setting frequency to 1349375000

.........................U
 low=0.152340
high=0.435442

Setting frequency to 1349375000

.........................U
 low=0.121212
high=0.280037

Setting frequency to 1349375000

.........................U
 low=0.154090
high=0.190878

.........................U
 low=0.288184
high=0.118294

Setting frequency to 1350625000

.........................U
 low=0.126582
high=0.074902

Setting frequency to 1350625000

.........................U
 low=0.431812
high=0.131795

Setting frequency to 1350625000

.........................U
 low=0.387220
high=0.142543

Setting frequency to 1350625000

.........................U
 low=0.179234
high=0.107759

Setting frequency to 1350625000

.........................U
 low=0.236057
high=0.095108

Setting frequency to 1350625000

.........................U
 low=0.167000
high=0.091469

Setting frequency to 1350625000

.........................U
 low=0.173602
high=0.163015

.........................U
 low=0.104436
high=0.116080

.........................U
 low=0.206056
high=0.092313

Setting frequency to 1350625000

.........................U
 low=0.145090
high=0.131502

.........................U
 low=0.175728
high=0.143068

.........................U
 low=0.197458
high=0.308457

Setting frequency to 1349375000

.........................U
 low=0.433853
high=0.060666

Setting frequency to 1350625000

.........................U
 low=0.119152
high=0.138192

.........................U
 low=0.188923
high=0.132299

.........................U
 low=0.143391
high=0.099939

.........................U
 low=0.074848
high=0.172391

Setting frequency to 1349375000

.........................U
 low=0.141696
high=0.234316

Setting frequency to 1349375000

.........................U
 low=0.252844
high=0.267107

.........................U
 low=0.115266
high=0.069512

Setting frequency to 1350625000

.........................U
 low=0.334047
high=0.102984

Setting frequency to 1350625000

.........................U
 low=0.229450
high=0.239733

.........................U
 low=0.094746
high=0.094179

.........................U
 low=0.287192
high=0.158296

Setting frequency to 1350625000

.........................U
 low=0.366751
high=0.083719

Setting frequency to 1350625000

.........................U
 low=0.223969
high=0.305450

.........................U
 low=0.090439
high=0.176818

Setting frequency to 1349375000

.........................U
 low=0.417851
high=0.066926

Setting frequency to 1350625000

.........................U
 low=0.069613
high=0.274805

Setting frequency to 1349375000

.........................U
 low=0.182207
high=0.137664

.........................U
 low=0.292832
high=0.168063

Setting frequency to 1350625000

.........................U
 low=0.104728
high=0.253670

Setting frequency to 1349375000

.........................U
 low=0.172871
high=0.240874

.........................U
 low=0.172850
high=0.391148

Setting frequency to 1349375000

.........................U
 low=0.177017
high=0.113397

Setting frequency to 1350625000

.........................U
 low=0.189517
high=0.193810

.........................U
 low=0.111549
high=0.167530

Setting frequency to 1349375000

.........................U
 low=0.520064
high=0.132687

Setting frequency to 1350625000

.........................U
 low=0.083378
high=0.188474

Setting frequency to 1349375000

.........................U
 low=0.184589
high=0.194078

.........................U
 low=0.286378
high=0.054139

Setting frequency to 1350625000

.........................U
 low=0.226858
high=0.376340

Setting frequency to 1349375000

.........................U
 low=0.201467
high=0.137914

.........................U
 low=0.135909
high=0.346875

Setting frequency to 1349375000

.........................U
 low=0.308759
high=0.378302

.........................U
 low=0.269780
high=0.119446

Setting frequency to 1350625000

.........................U
 low=0.167984
high=0.193753

.........................U
 low=0.067824
high=0.157522

Setting frequency to 1349375000

.........................U
 low=0.157216
high=0.227576

.........................U
 low=0.144030
high=0.050833

Setting frequency to 1350625000

.........................U
 low=0.081096
high=0.186350

Setting frequency to 1349375000

.........................U
 low=0.112281
high=0.074172

Setting frequency to 1350625000

.........................U
 low=0.140616
high=0.127080

.........................U
 low=0.173888
high=0.073742

Setting frequency to 1350625000

.........................U
 low=0.397485
high=0.072974

Setting frequency to 1350625000

.........................U
 low=0.071770
high=0.219735

Setting frequency to 1349375000

.........................U
 low=0.399353
high=0.117555

Setting frequency to 1350625000

.........................U
 low=0.120815
high=0.102996

.........................U
 low=0.070156
high=0.252145

Setting frequency to 1349375000

.........................U
 low=0.296778
high=0.096333

Setting frequency to 1350625000

.........................U
 low=0.254558
high=0.278855

.........................U
 low=0.068402
high=0.331623

Setting frequency to 1349375000

.........................U
 low=0.242605
high=0.222700

.........................U
 low=0.482955
high=0.054491

Setting frequency to 1350625000

.........................U
 low=0.078717
high=0.108773

.........................U
 low=0.107735
high=0.141797

.........................U
 low=0.041678
high=0.080186

Setting frequency to 1349375000

.........................U
 low=0.082639
high=0.100419

.........................U
 low=0.135009
high=0.096529

.........................U
 low=0.175181
high=0.198686

.........................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py --tx-amplittude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 2500k[1P00k[C[C0k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

.........................U
 low=0.130430
high=0.171682

.........................U
 low=0.233144
high=0.130428

Setting frequency to 1350625000

.........................U
 low=0.200138
high=0.075697

Setting frequency to 1350625000

.........................U
 low=0.195503
high=0.515057

Setting frequency to 1349375000

.........................U
 low=0.195956
high=0.244687

.........................U
 low=0.445893
high=0.033236

Setting frequency to 1350625000

.........................U
 low=0.143672
high=0.301934

Setting frequency to 1349375000

.........................U
 low=0.170865
high=0.058467

Setting frequency to 1350625000

.........................U
 low=0.140080
high=0.350318

Setting frequency to 1349375000

.........................U
 low=0.116738
high=0.169269

.........................U
 low=0.269225
high=0.332771

.........................U
 low=0.160698
high=0.050101

Setting frequency to 1350625000

.........................U
 low=0.101236
high=0.355422

Setting frequency to 1349375000

.........................U
 low=0.391095
high=0.034513

Setting frequency to 1350625000

.........................U
 low=0.174351
high=0.092201

Setting frequency to 1350625000

.........................U
 low=0.095597
high=0.320512

Setting frequency to 1349375000

.........................U
 low=0.186748
high=0.093401

Setting frequency to 1350625000

.........................U
 low=0.129181
high=0.098645

.........................U
 low=0.255336
high=0.298251

.........................U
 low=0.167161
high=0.075147

Setting frequency to 1350625000

.........................U
 low=0.086107
high=0.187363

Setting frequency to 1349375000

.........................U
 low=0.206625
high=0.024850

Setting frequency to 1350625000

.........................U
 low=0.179637
high=0.145215

.........................U
 low=0.133626
high=0.302112

Setting frequency to 1349375000

.........................U
 low=0.093395
high=0.041285

Setting frequency to 1350625000

.........................U
 low=0.055616
high=0.212210

Setting frequency to 1349375000

.........................U
 low=0.215691
high=0.283577

.........................U
 low=0.285248
high=0.106234

Setting frequency to 1350625000

.........................U
 low=0.176381
high=0.263425

.........................U
 low=0.283072
high=0.107856

Setting frequency to 1350625000

.........................U
 low=0.074286
high=0.156357

Setting frequency to 1349375000

.........................U
 low=0.131658
high=0.197546

Setting frequency to 1349375000

.........................U
 low=0.227850
high=0.185080

.........................U
 low=0.243892
high=0.248433

.........................U
 low=0.156900
high=0.055137

Setting frequency to 1350625000

.........................U
 low=0.243786
high=0.202159

.........................U
 low=0.136189
high=0.074686

Setting frequency to 1350625000

.........................U
 low=0.082854
high=0.167284

Setting frequency to 1349375000

.........................U
 low=0.215667
high=0.136224

Setting frequency to 1350625000

.........................U
 low=0.083393
high=0.151487

Setting frequency to 1349375000

.........................U
 low=0.100941
high=0.161260

Setting frequency to 1349375000

.........................U
 low=0.233651
high=0.041424

Setting frequency to 1350625000

.........................U
 low=0.169358
high=0.059420

Setting frequency to 1350625000

.........................U
 low=0.135284
high=0.241425

Setting frequency to 1349375000

.........................U
 low=0.161652
high=0.062514

Setting frequency to 1350625000

.........................U
 low=0.114541
high=0.381203

Setting frequency to 1349375000

.........................U
 low=0.103903
high=0.093867

.........................U
 low=0.148151
high=0.187944

.........................U
 low=0.183349
high=0.112291

Setting frequency to 1350625000

.........................U
 low=0.058435
high=0.361573

Setting frequency to 1349375000

.........................U
 low=0.146041
high=0.118801

.........................U
 low=0.316672
high=0.112114

Setting frequency to 1350625000

.........................U
 low=0.161632
high=0.085902

Setting frequency to 1350625000

.........................U
 low=0.092043
high=0.117650

.........................U
 low=0.186954
high=0.171203

.........................U
 low=0.065575
high=0.137741

Setting frequency to 1349375000

.........................U
 low=0.284033
high=0.162288

Setting frequency to 1350625000

.........................U
 low=0.054163
high=0.176058

Setting frequency to 1349375000

.........................U
 low=0.273076
high=0.217437

.........................U
 low=0.078282
high=0.158615

Setting frequency to 1349375000

.........................U
 low=0.191293
high=0.127796

.........................U
 low=0.135883
high=0.063713

Setting frequency to 1350625000

.........................U
 low=0.054352
high=0.100207

Setting frequency to 1349375000

.........................U
 low=0.246340
high=0.351259

.........................U
 low=0.168979
high=0.149094

.........................U
 low=0.219915
high=0.091726

Setting frequency to 1350625000

.........................U
 low=0.150952
high=0.175988

.........................U
 low=0.327101
high=0.109187

Setting frequency to 1350625000

.........................U
 low=0.129829
high=0.059481

Setting frequency to 1350625000

.........................U
 low=0.163404
high=0.098472

Setting frequency to 1350625000

.........................U
 low=0.189825
high=0.166703

.........................U
 low=0.215535
high=0.133881

Setting frequency to 1350625000

.........................U
 low=0.150820
high=0.112699

.........................U
 low=0.167187
high=0.288132

Setting frequency to 1349375000

.........................U
 low=0.265995
high=0.173498

Setting frequency to 1350625000

.........................U
 low=0.117753
high=0.091903

.........................U
 low=0.030184
high=0.154973

Setting frequency to 1349375000

.........................U
 low=0.178768
high=0.158977

.........................U
 low=0.195870
high=0.104942

Setting frequency to 1350625000

.........................U
 low=0.106681
high=0.100462

.........................U
 low=0.061191
high=0.148180

Setting frequency to 1349375000

.........................U
 low=0.220058
high=0.199067

.........................U
 low=0.430323
high=0.113132

Setting frequency to 1350625000

...................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py --tx-amplittude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 2000k[1P000k1000k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

.........................
 low=25868.303070
high=70619.203933

Setting frequency to 1349375000

.........................
 low=8390.807237
high=57118.703658

Setting frequency to 1349375000

.........................
 low=14729.721889
high=78275.517592

Setting frequency to 1349375000

.........................
 low=47800.302900
high=90649.824097

Setting frequency to 1349375000

.........................
 low=17128.342591
high=94918.310605

Setting frequency to 1349375000

.........................
 low=62645.513889
high=90998.979264

.........................
 low=60930.479189
high=81290.565851

.........................
 low=8476.738914
high=51553.502313

Setting frequency to 1349375000

.........................
 low=22214.259410
high=64487.231227

Setting frequency to 1349375000

.........................
 low=47476.161069
high=132084.303571

Setting frequency to 1349375000

.........................
 low=11174.330000
high=62448.539519

Setting frequency to 1349375000

.........................
 low=23813.543348
high=60544.779013

Setting frequency to 1349375000

.........................
 low=20251.898366
high=38587.250815

Setting frequency to 1349375000

.........................
 low=17909.788437
high=73978.021483

Setting frequency to 1349375000

.........................
 low=52063.623790
high=57943.527674

.........................
 low=38216.070669
high=50029.362700

.........................
 low=67913.933966
high=43193.520479

Setting frequency to 1350625000

.........................
 low=49456.380807
high=31383.786152

Setting frequency to 1350625000

.........................
 low=45111.349556
high=57130.937662

.........................
 low=54804.097381
high=14062.408116

Setting frequency to 1350625000

.........................
 low=68809.770769
high=39595.190469

Setting frequency to 1350625000

.........................
 low=53625.962285
high=32114.243246

Setting frequency to 1350625000

.........................
 low=92730.798614
high=40629.816333

Setting frequency to 1350625000

.........................
 low=110147.730528
high=17300.886586

Setting frequency to 1350625000

.........................
 low=67400.969741
high=50590.796449

.........................
 low=23038.815440
high=54758.636233

Setting frequency to 1349375000

.........................
 low=20733.429047
high=47665.667615

Setting frequency to 1349375000

.........................
 low=52326.221639
high=85805.440684

Setting frequency to 1349375000

.........................
 low=32578.829385
high=34167.156672

.........................
 low=16907.372530
high=68872.424174

Setting frequency to 1349375000

.........................
 low=24919.622974
high=51661.529487

Setting frequency to 1349375000

.........................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !vim
vim benchmark_tx3.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx3.py" 319L, 10069C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m time, struct, sys, socket
[35mimport[m filter_swig [33mas[m [36mfilter[m
[35mimport[m copy

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mfilter_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, options):[46;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.250[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[19;12H [33mif[m low_sum > high_sum * [31m1.5[m:[20;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m1.5[m:[23;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[27m[m[H[2J[1;4H [33mtry[m:[2;7H s.connect((TCP_IP, TCP_PORT))
    [33mexcept[m socket.timeout:[4;7H [36mprint[m[31m"Connection timed out, try again later"[m[5;7H [33mreturn[m
    [33mexcept[m socket.error:[7;7H [36mprint[m[31m"Connection error"[m[8;7H [33mreturn[m[10;4H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)
    tb.sink.set_freq(options.tx_freq+[31m625000[m)[13;4H n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m([31m1442[m)
    MESSAGE = struct.pack([31m'!l'[m,pkt_size-[31m2[m)[18;4H [33mwhile[m [31m1[m: [34m#n < nbytes:[m[19;8H [33mif[m options.from_file [33mis[m [36mNone[m:[20;12H [33mtry[m:[21;15H s.send(MESSAGE)[22;15H data=s.recv(pkt_size-[31m2[m)[23;12H [33mexcept[m socket.timeout:[24;15H [36mprint[m[31m"Connection timed out, try again later"[m[25;15H [33mreturn[m[26;12H [33mexcept[m socket.error:[27;15H [36mprint[m[31m"Connection closed"[m[28;15H [33mreturn[m[29;12H [33mif[m data.__len__() < [31m8[m:[30;15H [36mprint[m [31m"Connection timed out, try again later"[m[31;15H [33mbreak[m[32;12H [33mif[m options.verbose:[33;16H [34m# First 4 bytes are checksum followed by the 4 byte sequence number[m[34;19H crc,sn = struct.unpack([31m'!LL'[m,data[:[31m8[m])[35;19H [36mprint[m [31m"Seq #:"[m, sn, [31m" with CRC ["[m, [36mhex[m(crc), [31m"]"[m[37;8H [33melse[m:[38;12H data = source_file.read(pkt_size - [31m2[m)[39;12H [33mif[m data == [31m''[m:[40;16H [33mbreak[m;[42;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[43;8H send_pkt(payload)[44;8H n += [36mlen[m(payload)[45;8H sys.stderr.write([31m'.'[m)[46;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[47;68H275,9[9C83%[46;9H[?12l[?25h[?25l[47;70H4[45;9H[?12l[?25h[?25l[47;70H3[44;9H[?12l[?25h[?25l[47;70H2[43;9H[?12l[?25h[?25l[47;68H[K[47;1H?[?12l[?25h2[?25l[?12l[?25h5[?25l[?12l[?25h[?25l[67C240,39[8C83%[11;39H[?12l[?25h[?25l[47;70H1,3 [12;3H[?12l[?25h[?25l[47;70H0,39[11;39H[?12l[?25h[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.250[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[19;12H [33mif[m low_sum > high_sum * [31m1.5[m:[20;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m1.5[m:[23;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[47;68H[K[47;1H?[?12l[?25h[?25l?25[67C303,48[8CBot[30;48H[?12l[?25h[?25l[47;68H[K[47;1H[67C302,68[8CBot[29;68H[?12l[?25h[?25l[47;68H[K[47;1H[67C297,51[8CBot[24;51H[?12l[?25h[?25l[47;68H[K[47;1H[67C296,71[8CBot[23;71H[?12l[?25h[?25l[47;70H5,42[22;42H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hs[?25l[?12l[?25he[?25l[?12l[?25ht[?25l[?12l[?25h[?25l [?12l[?25hn[?25l[?12l[?25hu[?25l[?12l[?25h[?25l[1;1H[33m274 [m        sys.stderr.write([31m'.'[m)
[33m275 [m        [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:
[33m276 [m[7C     time.sleep([31m1[m)
[33m277 
278 [m        [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:
[33m279 [m[7C     tb.sink.set_gain(-[31m60[m)
[33m280 [m[7C     time.sleep([31m0.250[m)
[33m281 [m[7C     low_sum = ftb.probe_lp.level()
[33m282 [m[7C     high_sum = ftb.probe_hp.level()
[33m283 
284 [m[7C     [34m#while 1:[m
[33m285 [m[11C     [34m#time.sleep(0.1)[m
[33m286 [m[11C     [34m#low_sum = ftb.probe_lp.level()[m
[33m287 [m[11C     [34m#high_sum = ftb.probe_hp.level()[m
[33m288 [m[11C     [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m
[33m289 
290 [m[7C     [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)
[33m291 
292 [m[7C     [33mif[m low_sum > high_sum * [31m1.5[m:
[33m293 [m[11C     [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)
[33m294 [m[11C     tb.sink.set_freq(options.tx_freq+[31m625000[m)
[33m295 [m[7C     [33melif[m high_sum > low_sum * [31m1.5[m:
[33m296 [m[11C     [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)
[33m297 [m[11C     tb.sink.set_freq(options.tx_freq-[31m625000[m)
[33m298 
299 [m[7C     tb.sink.set_gain([31m30[m)
[33m300 
301 [m        [34m#if pktno % 50 == 50-1:[m
[33m302 [m        [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m
[33m303 [m[7C     [34m#tb.sink.set_freq(options.tx_freq+625000)[m
[33m304 
305 [m        pktno += [31m1[m
[33m306 
307 [m    [33mif[m options.from_file [33mis[m [36mNone[m:
[33m308 [m        s.close()
[33m309 [m    time.sleep([31m5[m)
[33m310 [m    send_pkt(eof=[36mTrue[m)
[33m311 
312 [m    tb.wait()[18C     [34m# wait for it to finish[m
[33m313 
314 if[m __name__ == [31m'__main__'[m:
[33m315 [m    [33mtry[m:
[33m316 [m        main()
[33m317 [m    [33mexcept[m [32mKeyboardInterrupt[m:
[33m318 [m        [33mpass
319 [m[47;68H295,42[8CBot[22;46H[?12l[?25h[?25l[47;69H78,9 [5;13H[?12l[?25h[?25l[47;72H12[5;16H[?12l[?25h[?25l[47;73H8[5;22H[?12l[?25h[?25l[47;72H20[5;24H[?12l[?25h[?25l[47;73H3[5;27H[?12l[?25h[?25l[47;73H0[5;24H[?12l[?25h[?25l[47;73H1[5;25H[?12l[?25h[?25l[31m20[?12l[?25h[?25l[m[47;73H2[5;26H[?12l[?25h[?25l[47;73H3[5;27H[?12l[?25h[?25l[47;73H4[5;28H[?12l[?25h[?25l[47;73H5[5;29H[?12l[?25h[?25l[47;73H6[5;30H[?12l[?25h[?25l[47;73H7[5;31H[?12l[?25h[?25l[31m20[?12l[?25h[?25l[m[47;1H[K[47;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10069C written
[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !.
./benchmark_tx3.py --tx-amplitude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 1000k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

U....................U
 low=0.123176
high=0.226769

Setting frequency to 1349375000

....................U
 low=0.304389
high=0.101958

Setting frequency to 1350625000

....................U
 low=0.081765
high=0.120201

....................U
 low=0.116297
high=0.051130

Setting frequency to 1350625000

....................U
 low=0.209412
high=0.233343

....................U
 low=0.331648
high=0.205714

Setting frequency to 1350625000

....................U
 low=0.348469
high=0.535327

Setting frequency to 1349375000

....................U
 low=0.396209
high=0.146992

Setting frequency to 1350625000

....................U
 low=0.195030
high=0.094506

Setting frequency to 1350625000

....................U
 low=0.299995
high=0.056002

Setting frequency to 1350625000

....................U
 low=0.226050
high=0.389559

Setting frequency to 1349375000

....................U
 low=0.263065
high=0.227573

....................U
 low=0.120411
high=0.124843

....................U
 low=0.308639
high=0.114145

Setting frequency to 1350625000

....................U
 low=0.252760
high=0.099850

Setting frequency to 1350625000

....................U
 low=0.104652
high=0.214879

Setting frequency to 1349375000

....................U
 low=0.578736
high=0.082361

Setting frequency to 1350625000

....................U
 low=0.127976
high=0.065209

Setting frequency to 1350625000

....................U
 low=0.045859
high=0.188514

Setting frequency to 1349375000

....................U
 low=0.549323
high=0.102298

Setting frequency to 1350625000

....................U
 low=0.193533
high=0.173152

....................U
 low=0.360103
high=0.092568

Setting frequency to 1350625000

....................U
 low=0.337620
high=0.475413

....................U
 low=0.229091
high=0.238380

....................U
 low=0.242674
high=0.337238

....................U
 low=0.178029
high=0.137035

....................U
 low=0.161761
high=0.194751

....................U
 low=0.483728
high=0.146779

Setting frequency to 1350625000

....................U
 low=0.196097
high=0.251783

....................U
 low=0.147295
high=0.129123

....................U
 low=0.119761
high=0.382397

Setting frequency to 1349375000

....................U
 low=0.493814
high=0.117878

Setting frequency to 1350625000

....................U
 low=0.126442
high=0.187883

....................U
 low=0.132294
high=0.147425

....................U
 low=0.262446
high=0.075906

Setting frequency to 1350625000

....................U
 low=0.134152
high=0.505154

Setting frequency to 1349375000

....................U
 low=0.414573
high=0.053090

Setting frequency to 1350625000

....................U
 low=0.497423
high=0.156685

Setting frequency to 1350625000

....................U
 low=0.093898
high=0.070239

....................U
 low=0.182083
high=0.223547

....................U
 low=0.332425
high=0.094059

Setting frequency to 1350625000

................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py --tx-amplittude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 1000k[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.py --tx-amplitu[1P[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C2.py --tx-amplit[1@u[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C^C

]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# grep TCP_ *.py
[35m[Kbenchmark_rx2.py[m[K[36m[K:[m[K    [01;31m[KTCP_[m[KIP='10.10.0.51'
[35m[Kbenchmark_rx2.py[m[K[36m[K:[m[K    [01;31m[KTCP_[m[KPORT=5125
[35m[Kbenchmark_rx2.py[m[K[36m[K:[m[K       s.connect(([01;31m[KTCP_[m[KIP, [01;31m[KTCP_[m[KPORT))
[35m[Kbenchmark_rx3.py[m[K[36m[K:[m[K    [01;31m[KTCP_[m[KIP='idb2'
[35m[Kbenchmark_rx3.py[m[K[36m[K:[m[K    [01;31m[KTCP_[m[KPORT=5102
[35m[Kbenchmark_rx3.py[m[K[36m[K:[m[K       s.connect(([01;31m[KTCP_[m[KIP, [01;31m[KTCP_[m[KPORT))
[35m[Kbenchmark_tx2.py[m[K[36m[K:[m[K    [01;31m[KTCP_[m[KIP='10.10.0.51'
[35m[Kbenchmark_tx2.py[m[K[36m[K:[m[K    [01;31m[KTCP_[m[KPORT=5123    
[35m[Kbenchmark_tx2.py[m[K[36m[K:[m[K       s.connect(([01;31m[KTCP_[m[KIP, [01;31m[KTCP_[m[KPORT))
[35m[Kbenchmark_tx3.py[m[K[36m[K:[m[K    [01;31m[KTCP_[m[KIP='idb2'
[35m[Kbenchmark_tx3.py[m[K[36m[K:[m[K    [01;31m[KTCP_[m[KPORT=5100    
[35m[Kbenchmark_tx3.py[m[K[36m[K:[m[K       s.connect(([01;31m[KTCP_[m[KIP, [01;31m[KTCP_[m[KPORT))
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim benchmark_tx2.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx2.py" 202L, 6954C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter

[35mimport[m time, struct, sys, socket

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, modulator, options):[43;8H gr.top_block.__init__(self)[45;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[46;12H [34m# Work-around to get the modulation's bits_per_symbol[m[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[47;1H[K[47;1H/[?12l[?25hT[?25l[?12l[?25hC[?25l[?12l[?25hP[?25l[?12l[?25h_[?25l[?12l[?25h[?25l[27m[m[H[2J[1;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[3;4H tb.start()[22C [34m# start flow graph[m[5;4H [34m# log parameter to OML[m
    cmd1 = [31m"/root/OML/omlcli --out h2_benchmark --line [m[35m\"[m[31m"[m
    cmd1 = cmd1 + [31m" tx-freq="[m + [36mstr[m(options.tx_freq)
    cmd1 = cmd1 + [31m" modulation="[m + [36mstr[m(options.modulation)
    cmd1 = cmd1 + [31m" tx-gain="[m + [36mstr[m(options.tx_gain)
    cmd1 = cmd1 + [31m" bitrate="[m + [36mstr[m(options.bitrate)
    cmd1 = cmd1 + [31m" sps="[m + [36mstr[m(options.samples_per_symbol)
    cmd1 = cmd1 + [31m" hostname="[m + socket.gethostname()
    cmd1 = cmd1 + [31m"[m[35m\"[m[31m"[m[15;4H [35mfrom[m subprocess [35mimport[m os
    os.system(cmd1)[19;4H [34m# Fetch packets from server[m[21;4H s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout([31m10[m)
    TCP_IP=[31m'10.10.0.51'[m
    TCP_PORT=[31m5123[m
    [33mtry[m:[26;7H s.connect((TCP_IP, TCP_PORT))
    [33mexcept[m socket.timeout:[28;7H [36mprint[m[31m"Connection timed out, try again later"[m[29;7H [33mreturn[m
    [33mexcept[m socket.error:[31;7H [36mprint[m[31m"Connection error"[m[32;7H [33mreturn[m[35;4H n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m([31m1442[m)
    MESSAGE = struct.pack([31m'!l'[m,pkt_size-[31m2[m)[40;4H [33mwhile[m [31m1[m: [34m#n < nbytes:[m[41;8H [33mif[m options.from_file [33mis[m [36mNone[m:[42;12H [33mtry[m:[43;15H s.send(MESSAGE)[44;15H data=s.recv(pkt_size-[31m2[m)[45;12H [33mexcept[m socket.timeout:[46;15H [36mprint[m[31m"Connection timed out, try again later"[m[47;68H142,5[9C76%[23;5H[?12l[?25h[?25l[47;72H11[23;11H[?12l[?25h[?25l[47;73H3[23;13H[?12l[?25h[?25l[47;70H3[24;13H[?12l[?25h[?25l[47;73H4[24;14H[?12l[?25h[?25l[47;73H5[24;15H[?12l[?25h[?25l[47;73H6[24;16H[?12l[?25h[?25l[31m10[?12l[?25h[?25l[m[47;73H7[24;17H[?12l[?25h[?25l[31m00[?12l[?25h[?25l[m[47;70H2[23;17H[?12l[?25h[?25l[47;73H6[23;16H[?12l[?25h[?25l[47;73H5[23;15H[?12l[?25h[?25l[47;73H3[23;13H[?12l[?25h[?25l[23;13H[K[24;1H[31m    TCP_PORT=5100    
    try:
       s.connect((TCP_IP, TCP_PORT))
    except socket.timeout: 
       print
       return
    except socket.error:
       print
       return

   
    n = 
    pktno = 
    pkt_size = int(1442)
    MESSAGE = struct.pack([m[1C!l[1C[31m,pkt_size-2)

    while 1: #n < nbytes:
        if options.from_file is None:
            try:
               s.send(MESSAGE)
               data=s.recv(pkt_size-2)
            except socket.timeout: 
               print[m[47;73H2[23;12H[?12l[?25h[?25l[47;1H[1m-- INSERT --[m[47;68H[K[47;68H142,13[8C76%[23;13H[?12l[?25h[?25l[31m'idb2[m[47;73H7[23;17H[?12l[?25h[?25l[31m2'[m
    TCP_PORT=[4C    
    [33mtry[m:
       s.connect((TCP_IP, TCP_PORT))
    [33mexcept[m socket.timeout: 
       [36mprint[m
       [33mreturn[m
    [33mexcept[m socket.error:
       [36mprint[m
       [33mreturn[m

   
    n = 
    pktno = 
    pkt_size = [36mint[m([4C)
    MESSAGE = struct.pack([1C[31m!l[m[1C,pkt_size-[1C)

    [33mwhile[m [1C: [34m#n < nbytes:[m
        [33mif[m options.from_file [33mis[m [36mNone[m:
            [33mtry[m:
               s.send(MESSAGE)
               data=s.recv(pkt_size-[1C)
            [33mexcept[m socket.timeout: 
               [36mprint[m[47;73H8[23;18H[?12l[?25h[47;1H[K[23;17H[?25l[47;68H142,17[8C76%[23;17H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"benchmark_tx2.py" 202L, 6948C written[29C142,17[8C76%[47;68H[K[47;68H142,17[8C76%[23;17H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !.!.[K[K
./benchmark_tx3.py --tx-amplitude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 1000k
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

U....................U
 low=0.089706
high=0.161451

Setting frequency to 1349375000

....................U
 low=0.098980
high=0.144478

....................U
 low=0.560522
high=0.213668

Setting frequency to 1350625000

....................U
 low=0.272874
high=0.160323

Setting frequency to 1350625000

....................U
 low=0.153434
high=0.249160

Setting frequency to 1349375000

....................U
 low=0.166318
high=0.031205

Setting frequency to 1350625000

....................U
 low=0.192458
high=0.182658

....................U
 low=0.226095
high=0.119826

Setting frequency to 1350625000

....................U
 low=0.220229
high=0.192351

....................U
 low=0.092108
high=0.172227

Setting frequency to 1349375000

....................U
 low=0.106939
high=0.064578

Setting frequency to 1350625000

....................U
 low=0.201057
high=0.061355

Setting frequency to 1350625000

....................U
 low=0.057575
high=0.075675

....................U
 low=0.085229
high=0.082952

....................U
 low=0.207807
high=0.116520

Setting frequency to 1350625000

....................U
 low=0.221202
high=0.218439

....................U
 low=0.125244
high=0.617786

Setting frequency to 1349375000

....................U
 low=0.194721
high=0.155335

....................U
 low=0.399692
high=0.025475

Setting frequency to 1350625000

....................U
 low=0.274976
high=0.044218

Setting frequency to 1350625000

....................U
 low=0.247749
high=0.064836

Setting frequency to 1350625000

....................U
 low=0.143650
high=0.045705

Setting frequency to 1350625000

....................U
 low=0.185380
high=0.132141

....................U
 low=0.242646
high=0.067400

Setting frequency to 1350625000

....................U
 low=0.175325
high=0.331510

Setting frequency to 1349375000

....................U
 low=0.448222
high=0.100242

Setting frequency to 1350625000

....................U
 low=0.167416
high=0.103573

Setting frequency to 1350625000

....................U
 low=0.117525
high=0.100336

....................U
 low=0.199312
high=0.279674

....................U
 low=0.589766
high=0.324955

Setting frequency to 1350625000

....................U
 low=0.205700
high=0.140374

....................U
 low=0.404784
high=0.145503

Setting frequency to 1350625000

....................U
 low=0.185264
high=0.120419

Setting frequency to 1350625000

....................U
 low=0.196200
high=0.290863

....................U
 low=0.124371
high=0.114955

....................U
 low=0.407398
high=0.203532

Setting frequency to 1350625000

....................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py --tx-amplittude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 1000k[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.py --tx-amplitu[1P[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C2.py --tx-amplit[1@u[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes

UHD Transmitter:
Args:     
Freq:        1.35GHz
Gain:        30.000000 dB
Sample Rate: 1Msps
Antenna:     None
Subdev Sec:  None
Using Volk machine: sse4_2_32
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
U.......................................................................................................................................................................................................................................................................................................................................................................................................................................................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx2.py --tx-amplittude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 1000k[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.py --tx-amplitu[1P[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C3.py --tx-amplit[1@u[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

....................U
 low=0.312245
high=0.220632

....................U
 low=0.144419
high=0.103895

....................U
 low=0.202220
high=0.208185

....................U
 low=0.214518
high=0.140812

Setting frequency to 1350625000

....................U
 low=0.071830
high=0.450966

Setting frequency to 1349375000

....................U
 low=0.238505
high=0.100637

Setting frequency to 1350625000

....................U
 low=0.073637
high=0.105304

....................U
 low=0.202881
high=0.131968

Setting frequency to 1350625000

....................U
 low=0.304255
high=0.232855

....................U
 low=0.335315
high=0.389267

....................U
 low=0.224868
high=0.139659

Setting frequency to 1350625000

....................U
 low=0.168180
high=0.098237

Setting frequency to 1350625000

....................U
 low=0.279346
high=0.076775

Setting frequency to 1350625000

....................U
 low=0.323101
high=0.063048

Setting frequency to 1350625000

....................U
 low=0.139418
high=0.106013

....................U
 low=0.216544
high=0.106261

Setting frequency to 1350625000

....................U
 low=0.108060
high=0.230697

Setting frequency to 1349375000

....................U
 low=0.129436
high=0.150125

....................U
 low=0.235766
high=0.098677

Setting frequency to 1350625000

....................U
 low=0.110750
high=0.205124

Setting frequency to 1349375000

....................U
 low=0.406053
high=0.113804

Setting frequency to 1350625000

....................U
 low=0.102411
high=0.199037

Setting frequency to 1349375000

....................U
 low=0.272808
high=0.116686

Setting frequency to 1350625000

....................U
 low=0.498969
high=0.079215

Setting frequency to 1350625000

....................U
 low=0.077599
high=0.148343

Setting frequency to 1349375000

....................U
 low=0.059991
high=0.110289

Setting frequency to 1349375000

....................U
 low=0.301127
high=0.079497

Setting frequency to 1350625000

....................U
 low=0.225643
high=0.043316

Setting frequency to 1350625000

....................U
 low=0.069380
high=0.268172

Setting frequency to 1349375000

....................U
 low=0.325017
high=0.036540

Setting frequency to 1350625000

....................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py --tx-amplittude=0.5 -f 1.35e9 -m dqpsk --tx-gain 30 --bitrate 1000k[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[1P[1P[1P[1P[1P[1P[1P[1P[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -[1P[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -f[1P 1.35e9[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -f [1P1.35e9[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -f 1[1P.35e9[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -f 1.[1P35e9[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -f 1.3[1P5e9[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -f 1.35[1Pe9[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -f 1.35e[1P9[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -f 1.35e9[K[A]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C -f 1.35e9 [K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

....................U
 low=0.236631
high=0.067526

Setting frequency to 1350625000

....................U
 low=0.225575
high=0.243816

....................U
 low=0.035142
high=0.204042

Setting frequency to 1349375000

....................U
 low=0.239397
high=0.094092

Setting frequency to 1350625000

....................U
 low=0.221804
high=0.076923

Setting frequency to 1350625000

....................U
 low=0.055085
high=0.201970

Setting frequency to 1349375000

....................U
 low=0.366873
high=0.253958

....................U
 low=0.226010
high=0.166885

....................U
 low=0.160237
high=0.085596

Setting frequency to 1350625000

....................U
 low=0.089279
high=0.147481

Setting frequency to 1349375000

....................U
 low=0.103104
high=0.211672

Setting frequency to 1349375000

....................U
 low=0.314850
high=0.292585

....................U
 low=0.183899
high=0.076265

Setting frequency to 1350625000

....................U
 low=0.108622
high=0.185893

Setting frequency to 1349375000

....................U
 low=0.329896
high=0.125784

Setting frequency to 1350625000

....................U
 low=0.063207
high=0.070321

....................U
 low=0.153839
high=0.212867

....................U
 low=0.126394
high=0.229590

Setting frequency to 1349375000

....................U
 low=0.128796
high=0.075555

Setting frequency to 1350625000

....................U
 low=0.119749
high=0.138432

....................U
 low=0.083049
high=0.179321

Setting frequency to 1349375000

....................U
 low=0.148226
high=0.142187

....................U
 low=0.073095
high=0.142753

Setting frequency to 1349375000

....................U
 low=0.091251
high=0.170693

Setting frequency to 1349375000

....................U
 low=0.080757
high=0.095307

....................U
 low=0.505579
high=0.244484

Setting frequency to 1350625000

....................U
 low=0.193406
high=0.077563

Setting frequency to 1350625000

....................U
 low=0.124490
high=0.250968

Setting frequency to 1349375000

....................U
 low=0.101774
high=0.233450

Setting frequency to 1349375000

....................U
 low=0.089993
high=0.060091

....................U
 low=0.438931
high=0.040371

Setting frequency to 1350625000

....................U
 low=0.078554
high=0.064646

....................U
 low=0.052845
high=0.178481

Setting frequency to 1349375000

....................U
 low=0.147411
high=0.086511

Setting frequency to 1350625000

....................U
 low=0.132041
high=0.230195

Setting frequency to 1349375000

....................U
 low=0.203599
high=0.082292

Setting frequency to 1350625000

....................U
 low=0.132018
high=0.366482

Setting frequency to 1349375000

....................U
 low=0.105443
high=0.057059

Setting frequency to 1350625000

....................U
 low=0.568586
high=0.225882

Setting frequency to 1350625000

....................U
 low=0.166943
high=0.130140

....................U
 low=0.117332
high=0.260177

Setting frequency to 1349375000

....................U
 low=0.374261
high=0.461251

....................U
 low=0.441812
high=0.111163

Setting frequency to 1350625000

....................U
 low=0.282769
high=0.128190

Setting frequency to 1350625000

....................U
 low=0.239317
high=0.213728

....................U
 low=0.059510
high=0.433531

Setting frequency to 1349375000

....................U
 low=0.420962
high=0.105821

Setting frequency to 1350625000

....................U
 low=0.035538
high=0.343358

Setting frequency to 1349375000

....................U
 low=0.105468
high=0.094900

....................U
 low=0.071174
high=0.058842

....................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9[K^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

U....................U
 low=0.127169
high=0.426218

Setting frequency to 1349375000

....................U
 low=0.521701
high=0.048730

Setting frequency to 1350625000

....................U
 low=0.196839
high=0.331638

Setting frequency to 1349375000

....................U
 low=0.224543
high=0.154328

....................U
 low=0.186129
high=0.127904

....................U
 low=0.177762
high=0.067269

Setting frequency to 1350625000

....................U
 low=0.162419
high=0.042360

Setting frequency to 1350625000

....................U
 low=0.134198
high=0.158983

....................U
 low=0.215124
high=0.462332

Setting frequency to 1349375000

....................U
 low=0.205617
high=0.169662

....................U
 low=0.254702
high=0.075511

Setting frequency to 1350625000

....................U
 low=0.079496
high=0.584852

Setting frequency to 1349375000

....................U
 low=0.225976
high=0.157715

....................U
 low=0.211390
high=0.042372

Setting frequency to 1350625000

....................U
 low=0.180137
high=0.330963

Setting frequency to 1349375000

....................U
 low=0.293052
high=0.086493

Setting frequency to 1350625000

....................U
 low=0.156015
high=0.246582

Setting frequency to 1349375000

....................U
 low=0.145937
high=0.094324

Setting frequency to 1350625000

....................U
 low=0.202481
high=0.155897

....................U
 low=0.191213
high=0.141778

....................U
 low=0.118365
high=0.276252

Setting frequency to 1349375000

.....U..U..U.U..U........UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU
 low=0.289372
high=0.230635

....................U
 low=0.178268
high=0.168753

....................U
 low=0.112115
high=0.227189

Setting frequency to 1349375000

....................U
 low=0.466741
high=0.282258

Setting frequency to 1350625000

....................U
 low=0.172306
high=0.213452

....................U
 low=0.037011
high=0.082332

Setting frequency to 1349375000

....................U
 low=0.117575
high=0.027455

Setting frequency to 1350625000

....................U
 low=0.047755
high=0.325488

Setting frequency to 1349375000

....................U
 low=0.437986
high=0.075699

Setting frequency to 1350625000

....................U
 low=0.128269
high=0.180872

....................U
 low=0.067876
high=0.391586

Setting frequency to 1349375000

....................U
 low=0.583106
high=0.158944

Setting frequency to 1350625000

....................U
 low=0.168160
high=0.102863

Setting frequency to 1350625000

....................U
 low=0.199747
high=0.142642

....................U
 low=0.305584
high=0.145264

Setting frequency to 1350625000

....................U
 low=0.054224
high=0.129538

Setting frequency to 1349375000

....................U
 low=0.147632
high=0.080831

Setting frequency to 1350625000

....................U
 low=0.102067
high=0.094871

....................U
 low=0.105246
high=0.320904

Setting frequency to 1349375000

....................U
 low=0.157371
high=0.152112

....................U
 low=0.175369
high=0.132493

....................U
 low=0.143025
high=0.089044

Setting frequency to 1350625000

....................U
 low=0.262848
high=0.068376

Setting frequency to 1350625000

....................U
 low=0.261429
high=0.250387

....................U
 low=0.131104
high=0.088172

....................U
 low=0.151007
high=0.199514

....................U
 low=0.030475
high=0.287573

Setting frequency to 1349375000

....................U
 low=0.188446
high=0.119809

Setting frequency to 1350625000

....................U
 low=0.075349
high=0.116086

Setting frequency to 1349375000

....................U
 low=0.412353
high=0.127332

Setting frequency to 1350625000

....................U
 low=0.115617
high=0.195285

Setting frequency to 1349375000

....................U
 low=0.221465
high=0.108797

Setting frequency to 1350625000

....................U
 low=0.240296
high=0.401404

Setting frequency to 1349375000

....................U
 low=0.196037
high=0.142173

....................U
 low=0.366226
high=0.083210

Setting frequency to 1350625000

....................U
 low=0.198250
high=0.069233

Setting frequency to 1350625000

....................U
 low=0.145288
high=0.067145

Setting frequency to 1350625000

....................U
 low=0.074911
high=0.308354

Setting frequency to 1349375000

....................U
 low=0.217460
high=0.073506

Setting frequency to 1350625000

....................U
 low=0.087786
high=0.095435

...U.................UU
 low=0.049766
high=0.146986

Setting frequency to 1349375000

....................U
 low=0.092346
high=0.064780

...U..U...............U
 low=0.095845
high=0.197132

Setting frequency to 1349375000

....................U
 low=0.328569
high=0.236419

....................U
 low=0.337268
high=0.109393

Setting frequency to 1350625000

....................U
 low=0.097119
high=0.131016

....................U
 low=0.124236
high=0.068718

Setting frequency to 1350625000

....................U
 low=0.100226
high=0.133778

....................U
 low=0.041280
high=0.243287

Setting frequency to 1349375000

....................U
 low=0.312370
high=0.098193

Setting frequency to 1350625000

....U.U...............U
 low=0.175613
high=0.206239

....................U
 low=0.060155
high=0.069582

....................U
 low=0.165937
high=0.236105

....................U
 low=0.127180
high=0.079086

Setting frequency to 1350625000

....................U
 low=0.357360
high=0.169735

Setting frequency to 1350625000

....................U
 low=0.069208
high=0.089866

.....U.U..U.U...U........U
 low=0.179013
high=0.188477

....................U
 low=0.133382
high=0.119788

....................U
 low=0.038968
high=0.087303

Setting frequency to 1349375000

....................U
 low=0.398158
high=0.141532

Setting frequency to 1350625000

....................U
 low=0.263693
high=0.383341

....U.U...U............UUU
 low=0.159144
high=0.574745

Setting frequency to 1349375000

....................U
 low=0.150057
high=0.117804

....................U
 low=0.300523
high=0.100225

Setting frequency to 1350625000

....................U
 low=0.041259
high=0.348377

Setting frequency to 1349375000

....................U
 low=0.259731
high=0.137101

Setting frequency to 1350625000

....................U
 low=0.271997
high=0.087362

Setting frequency to 1350625000

....................U
 low=0.130621
high=0.144959

....................U
 low=0.064602
high=0.244262

Setting frequency to 1349375000

....................U
 low=0.149133
high=0.100255

....................U
 low=0.345969
high=0.180374

Setting frequency to 1350625000

....................U
 low=0.218654
high=0.562524

Setting frequency to 1349375000

....................U
 low=0.080652
high=0.041920

Setting frequency to 1350625000

...U..U.U..U.U.U..U.U......U.UUUUU
 low=0.211090
high=0.235018

....................U
 low=0.037807
high=0.129940

Setting frequency to 1349375000

....U.U..U.............UU
 low=0.176373
high=0.037905

Setting frequency to 1350625000

....................U
 low=0.226780
high=0.609726

Setting frequency to 1349375000

....................U
 low=0.347783
high=0.252358

....................U
 low=0.133273
high=0.193534

....................U
 low=0.048392
high=0.098585

Setting frequency to 1349375000

....................U
 low=0.393556
high=0.070531

Setting frequency to 1350625000

....................U
 low=0.092393
high=0.188565

Setting frequency to 1349375000

....................U
 low=0.066064
high=0.131384

Setting frequency to 1349375000

....................U
 low=0.084415
high=0.050131

Setting frequency to 1350625000

....................U
 low=0.092274
high=0.049723

Setting frequency to 1350625000

....................U
 low=0.255689
high=0.064571

Setting frequency to 1350625000

....................U
 low=0.126292
high=0.103680

....................U
 low=0.070621
high=0.152788

Setting frequency to 1349375000

....................U
 low=0.160060
high=0.077181

Setting frequency to 1350625000

....................U
 low=0.157505
high=0.066766

Setting frequency to 1350625000

....................U
 low=0.253039
high=0.459606

Setting frequency to 1349375000

....................U
 low=0.178485
high=0.043479

Setting frequency to 1350625000

....................U
 low=0.196242
high=0.068962

Setting frequency to 1350625000

....................U
 low=0.219328
high=0.373389

Setting frequency to 1349375000

....................U
 low=0.144242
high=0.131297

....................U
 low=0.190114
high=0.474863

Setting frequency to 1349375000

....................U
 low=0.123002
high=0.080727

Setting frequency to 1350625000

....U................U
 low=0.166561
high=0.061599

Setting frequency to 1350625000

....................U
 low=0.149332
high=0.219461

..........^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9[Kvim ben[K[K[K[K[K[K[Kls
[0m[01;32mbenchmark_add_channel.py[0m  [01;32mbenchmark_tx.py[0m     receive_path.py    [01;32mtunnel.py[0m
[01;32mbenchmark_rx2.py[0m          [01;32mdigital_bert_rx.py[0m  receive_path.pyc   [01;32mtx_voice.py[0m
[01;32mbenchmark_rx3.py[0m          [01;32mdigital_bert_tx.py[0m  [01;32mrx_voice.py[0m        uhd_interface.py
[01;32mbenchmark_rx.py[0m           [01;34mfilter[0m              [01;32mtest.py[0m            uhd_interface.pyc
[01;32mbenchmark_tx2.py[0m          [01;34morig[0m                transmit_path.py
[01;32mbenchmark_tx3.py[0m          README              transmit_path.pyc
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim bencfhmark[K[K[K[K[K[Kch[K[Khmark_tx.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx.py" 154L, 5415C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter

[35mimport[m time, struct, sys

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, modulator, options):[43;8H gr.top_block.__init__(self)[45;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[46;12H [34m# Work-around to get the modulation's bits_per_symbol[m[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H parser.print_help()[2;8H sys.exit([31m1[m)[4;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[5;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[7;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[10;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[12;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[14;4H tb.start()[22C [34m# start flow graph[m[16;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[22;4H [33mwhile[m n < nbytes:[23;8H [33mif[m options.from_file [33mis[m [36mNone[m:[24;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[25;8H [33melse[m:[26;12H data = source_file.read(pkt_size - [31m2[m)[27;12H [33mif[m data == [31m''[m:[28;16H [33mbreak[m;[30;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[31;8H send_pkt(payload)[32;8H n += [36mlen[m(payload)[33;8H sys.stderr.write([31m'.'[m)[34;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[35;12H time.sleep([31m1[m)[36;8H pktno += [31m1[m[38;4H send_pkt(eof=[36mTrue[m)[40;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[44;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[46;8H [33mpass[m[47;68H154,9[9CBot[46;9H[?12l[?25h[?25l[27m[m[H[2J[1;8H [34m# occur in the sinks (specifically the UHD sink)[m[2;8H self.txpath = transmit_path(modulator, options)[4;8H self.connect(self.txpath, self.sink)

[34m# /////////////////////////////////////////////////////////////////////////////
#                                   main
# /////////////////////////////////////////////////////////////////////////////[m

[33mdef[m [36mmain[m():[12;4H [33mdef[m [36msend_pkt[m(payload=[31m''[m, eof=[36mFalse[m):[13;8H [33mreturn[m tb.txpath.send_pkt(payload, eof)[15;4H mods = digital.modulation_utils.type_1_mods()[17;4H parser = OptionParser(option_class=eng_option, conflict_handler=[31m"resolve"[m)
    expert_grp = parser.add_option_group([31m"Expert"[m)[20;4H parser.add_option([31m"-m"[m, [31m"--modulation"[m, [36mtype[m=[31m"choice"[m, choices=mods.keys(),[21;22H default=[31m'psk'[m,[22;22H [36mhelp[m=[31m"Select modulation from: %s [default=%%default]"[m[23;28H % ([31m', '[m.join(mods.keys()),))[25;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[26;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)
    parser.add_option([31m"-M"[m, [31m"--megabytes"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1.0[m,[28;22H [36mhelp[m=[31m"set megabytes to transmit [default=%default]"[m)
    parser.add_option([31m""[m,[31m"--discontinuous"[m, action=[31m"store_true"[m, default=[36mFalse[m,[30;22H [36mhelp[m=[31m"enable discontinous transmission (bursts of 5 packets)"[m)
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[32;22H [36mhelp[m=[31m"use intput file for packet contents"[m)
    parser.add_option([31m""[m,[31m"--to-file"[m, default=[36mNone[m,[34;22H [36mhelp[m=[31m"Output file for modulated samples"[m)[36;4H transmit_path.add_options(parser, expert_grp)
    uhd_transmitter.add_options(parser)[39;4H [33mfor[m mod [33min[m mods.values():[40;8H mod.add_options(expert_grp)[42;4H (options, args) = parser.parse_args ()[44;4H [33mif[m [36mlen[m(args) != [31m0[m:[45;8H parser.print_help()[46;8H sys.exit([31m1[m)[47;68H110,9[9C59%[46;9H[?12l[?25h[?25l[27m[m[H[2J[1;1H[34m# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter

[35mimport[m time, struct, sys

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, modulator, options):[23;8H gr.top_block.__init__(self)[25;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[26;12H [34m# Work-around to get the modulation's bits_per_symbol[m[27;12H args = modulator.extract_kwargs_from_options(options)[28;12H symbol_rate = options.bitrate / modulator(**args).bits_per_symbol()[30;12H self.sink = uhd_transmitter(options.args, symbol_rate,[31;40H options.samples_per_symbol,[32;40H options.tx_freq, options.tx_gain,[33;40H options.spec, options.antenna,[34;40H options.verbose)[35;12H options.samples_per_symbol = self.sink._sps[37;8H [33melif[m(options.to_file [33mis[m [33mnot[m [36mNone[m):[38;12H sys.stderr.write(([31m"Saving samples to '%s'.[m[35m\n\n[m[31m"[m % (options.to_file)))[39;12H self.sink = gr.file_sink(gr.sizeof_gr_complex, options.to_file)[40;8H [33melse[m:[41;12H sys.stderr.write([31m"No sink defined, dumping samples to null sink.[m[35m\n\n[m[31m"[m)[42;12H self.sink = gr.null_sink(gr.sizeof_gr_complex)[44;8H [34m# do this after for any adjustments to the options that may[m[45;8H [34m# occur in the sinks (specifically the UHD sink)[m[46;8H self.txpath = transmit_path(modulator, options)[47;68H66,9[10C18%[46;9H[?12l[?25h[?25l[27m[m[H[2J[1;8H [34m# occur in the sinks (specifically the UHD sink)[m[2;8H self.txpath = transmit_path(modulator, options)[4;8H self.connect(self.txpath, self.sink)

[34m# /////////////////////////////////////////////////////////////////////////////
#                                   main
# /////////////////////////////////////////////////////////////////////////////[m

[33mdef[m [36mmain[m():[12;4H [33mdef[m [36msend_pkt[m(payload=[31m''[m, eof=[36mFalse[m):[13;8H [33mreturn[m tb.txpath.send_pkt(payload, eof)[15;4H mods = digital.modulation_utils.type_1_mods()[17;4H parser = OptionParser(option_class=eng_option, conflict_handler=[31m"resolve"[m)
    expert_grp = parser.add_option_group([31m"Expert"[m)[20;4H parser.add_option([31m"-m"[m, [31m"--modulation"[m, [36mtype[m=[31m"choice"[m, choices=mods.keys(),[21;22H default=[31m'psk'[m,[22;22H [36mhelp[m=[31m"Select modulation from: %s [default=%%default]"[m[23;28H % ([31m', '[m.join(mods.keys()),))[25;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[26;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)
    parser.add_option([31m"-M"[m, [31m"--megabytes"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1.0[m,[28;22H [36mhelp[m=[31m"set megabytes to transmit [default=%default]"[m)
    parser.add_option([31m""[m,[31m"--discontinuous"[m, action=[31m"store_true"[m, default=[36mFalse[m,[30;22H [36mhelp[m=[31m"enable discontinous transmission (bursts of 5 packets)"[m)
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[32;22H [36mhelp[m=[31m"use intput file for packet contents"[m)
    parser.add_option([31m""[m,[31m"--to-file"[m, default=[36mNone[m,[34;22H [36mhelp[m=[31m"Output file for modulated samples"[m)[36;4H transmit_path.add_options(parser, expert_grp)
    uhd_transmitter.add_options(parser)[39;4H [33mfor[m mod [33min[m mods.values():[40;8H mod.add_options(expert_grp)[42;4H (options, args) = parser.parse_args ()[44;4H [33mif[m [36mlen[m(args) != [31m0[m:[45;8H parser.print_help()[46;8H sys.exit([31m1[m)[47;68H65,9[10C59%[1;9H[?12l[?25h[?25l[27m[m[H[2J[1;8H parser.print_help()[2;8H sys.exit([31m1[m)[4;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[5;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[7;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[10;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[12;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[14;4H tb.start()[22C [34m# start flow graph[m[16;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[22;4H [33mwhile[m n < nbytes:[23;8H [33mif[m options.from_file [33mis[m [36mNone[m:[24;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[25;8H [33melse[m:[26;12H data = source_file.read(pkt_size - [31m2[m)[27;12H [33mif[m data == [31m''[m:[28;16H [33mbreak[m;[30;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[31;8H send_pkt(payload)[32;8H n += [36mlen[m(payload)[33;8H sys.stderr.write([31m'.'[m)[34;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[35;12H time.sleep([31m1[m)[36;8H pktno += [31m1[m[38;4H send_pkt(eof=[36mTrue[m)[40;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[44;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[46;8H [33mpass[m[47;68H109,9[9CBot[1;9H[?12l[?25h[?25l[27m[m[H[2J[1;8H [33mpass[m
[1m[34m~                                                                                    [3;1H~                                                                                    [4;1H~                                                                                    [5;1H~                                                                                    [6;1H~                                                                                    [7;1H~                                                                                    [8;1H~                                                                                    [9;1H~                                                                                    [10;1H~                                                                                    [11;1H~                                                                                    [12;1H~                                                                                    [13;1H~                                                                                    [14;1H~                                                                                    [15;1H~                                                                                    [16;1H~                                                                                    [17;1H~                                                                                    [18;1H~                                                                                    [19;1H~                                                                                    [20;1H~                                                                                    [21;1H~                                                                                    [22;1H~                                                                                    [23;1H~                                                                                    [24;1H~                                                                                    [25;1H~                                                                                    [26;1H~                                                                                    [27;1H~                                                                                    [28;1H~                                                                                    [29;1H~                                                                                    [30;1H~                                                                                    [31;1H~                                                                                    [32;1H~                                                                                    [33;1H~                                                                                    [34;1H~                                                                                    [35;1H~                                                                                    [36;1H~                                                                                    [37;1H~                                                                                    [38;1H~                                                                                    [39;1H~                                                                                    [40;1H~                                                                                    [41;1H~                                                                                    [42;1H~                                                                                    [43;1H~                                                                                    [44;1H~                                                                                    [45;1H~                                                                                    [46;1H~                                                                                    [m[47;68H154,9[9CBot[1;9H[?12l[?25h[?25l[27m[m[H[2J[1;8H parser.print_help()[2;8H sys.exit([31m1[m)[4;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[5;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[7;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[10;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[12;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[14;4H tb.start()[22C [34m# start flow graph[m[16;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[22;4H [33mwhile[m n < nbytes:[23;8H [33mif[m options.from_file [33mis[m [36mNone[m:[24;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[25;8H [33melse[m:[26;12H data = source_file.read(pkt_size - [31m2[m)[27;12H [33mif[m data == [31m''[m:[28;16H [33mbreak[m;[30;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[31;8H send_pkt(payload)[32;8H n += [36mlen[m(payload)[33;8H sys.stderr.write([31m'.'[m)[34;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[35;12H time.sleep([31m1[m)[36;8H pktno += [31m1[m[38;4H send_pkt(eof=[36mTrue[m)[40;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[44;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[46;8H [33mpass[m[47;68H154,9[9CBot[46;9H[?12l[?25h[?25l
"benchmark_tx.py" 154 lines --100%--[47;68H[K[47;68H154,9[9CBot[46;9H[?12l[?25h[?25l[47;1H[K[47;1H:q[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim benchmark_tx.py3.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx3.py" 319L, 10069C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m time, struct, sys, socket
[35mimport[m filter_swig [33mas[m [36mfilter[m
[35mimport[m copy

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mfilter_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, options):[46;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m20[m == [31m20[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.250[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[19;12H [33mif[m low_sum > high_sum * [31m1.5[m:[20;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m1.5[m:[23;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[47;70H8,1  [45;1H[?12l[?25h[?25l[47;70H7[44;1H[?12l[?25h[?25l[47;70H6[43;1H[?12l[?25h[?25l[47;70H5[42;1H[?12l[?25h[?25l[47;70H4[41;1H[?12l[?25h[?25l[47;70H3,0-1[40;1H[?12l[?25h[?25l[47;70H2,1  [39;1H[?12l[?25h[?25l[47;70H1,0-1[38;1H[?12l[?25h[?25l[47;70H0,1  [37;1H[?12l[?25h[?25l[47;69H09[36;1H[?12l[?25h[?25l[47;70H8[35;1H[?12l[?25h[?25l[47;70H7[34;1H[?12l[?25h[?25l[47;70H6[33;1H[?12l[?25h[?25l[47;70H5[32;1H[?12l[?25h[?25l[47;70H4,0-1[31;1H[?12l[?25h[?25l[47;70H3,1  [30;1H[?12l[?25h[?25l[47;70H2[29;1H[?12l[?25h[?25l[47;70H1[28;1H[?12l[?25h[?25l[47;70H0,0-1[27;1H[?12l[?25h[?25l[47;68H299,1  [26;1H[?12l[?25h[?25l[47;70H8,0-1[25;1H[?12l[?25h[?25l[47;70H7,1  [24;1H[?12l[?25h[?25l[47;70H6[23;1H[?12l[?25h[?25l[47;70H5[22;1H[?12l[?25h[?25l[47;70H4[21;1H[?12l[?25h[?25l[47;70H3[20;1H[?12l[?25h[?25l[47;70H2[19;1H[?12l[?25h[?25l[47;70H1,0-1[18;1H[?12l[?25h[?25l[47;70H0,1  [17;1H[?12l[?25h[?25l[47;69H89[16;1H[?12l[?25h[?25l[47;70H8[15;1H[?12l[?25h[?25l[47;70H7[14;1H[?12l[?25h[?25l[47;70H6[13;1H[?12l[?25h[?25l[47;70H5[12;1H[?12l[?25h[?25l[47;70H4[11;1H[?12l[?25h[?25l[47;70H3[10;1H[?12l[?25h[?25l[47;70H2[9;1H[?12l[?25h[?25l[47;70H1[8;1H[?12l[?25h[?25l[47;70H0[7;1H[?12l[?25h[?25l[47;69H79[6;1H[?12l[?25h[?25l[47;70H8[5;1H[?12l[?25h[?25l[47;70H7,0-1[4;1H[?12l[?25h[?25l[47;70H6,1  [3;1H[?12l[?25h[?25l[47;70H7,0-1[4;1H[?12l[?25h[?25l[47;70H8,9  [5;9H[?12l[?25h[?25l[47;72H12[5;12H[?12l[?25h[?25l[47;70H9[6;12H[?12l[?25h[?25l[47;70H8[5;12H[?12l[?25h[?25l[47;73H8[5;18H[?12l[?25h[?25l[47;72H20[5;20H[?12l[?25h[?25l[47;73H3[5;23H[?12l[?25h[?25l[47;73H2[5;22H[?12l[?25h[?25l[47;73H1[5;21H[?12l[?25h[?25l[31m25[?12l[?25h[?25l[m[47;73H2[5;22H[?12l[?25h[?25l[47;73H3[5;23H[?12l[?25h[?25l[47;73H4[5;24H[?12l[?25h[?25l[47;73H5[5;25H[?12l[?25h[?25l[47;73H6[5;26H[?12l[?25h[?25l[47;73H7[5;27H[?12l[?25h[?25l[31m25[?12l[?25h[?25l[m[47;70H9[6;27H[?12l[?25h[?25l[47;69H80[7;27H[?12l[?25h[?25l[47;70H1[8;27H[?12l[?25h[?25l[47;70H0[7;27H[?12l[?25h[?25l[31m20[?12l[?25h[?25l[m[47;68H[K[47;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10069C written[28C280,27[8CBot[47;68H[K[47;68H280,27[8CBot[7;27H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim benchmark_tx3.py[1P.py3.py[1P.pyls[K./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
UINFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

.........................U
 low=0.476411
high=0.268214

Setting frequency to 1350625000

.........................U
 low=0.093285
high=0.380284

Setting frequency to 1349375000

.........................U
 low=0.148726
high=0.080136

Setting frequency to 1350625000

.........................U
 low=0.075504
high=0.159487

Setting frequency to 1349375000

.........................U
 low=0.219054
high=0.174665

.........................U
 low=0.172222
high=0.095753

Setting frequency to 1350625000

.........................U
 low=0.036878
high=0.161690

Setting frequency to 1349375000

.........................U
 low=0.141588
high=0.075592

Setting frequency to 1350625000

.........................U
 low=0.184268
high=0.200922

.........................U
 low=0.214444
high=0.121689

Setting frequency to 1350625000

.........................U
 low=0.150070
high=0.127080

.........................U
 low=0.146051
high=0.112290

.........................U
 low=0.172305
high=0.253413

.........................U
 low=0.280836
high=0.239351

.........................U
 low=0.130175
high=0.239230

Setting frequency to 1349375000

.........................U
 low=0.166558
high=0.062815

Setting frequency to 1350625000

.........................U
 low=0.090463
high=0.340822

Setting frequency to 1349375000

.........................U
 low=0.112875
high=0.118910

....U.....................U
 low=0.254623
high=0.067356

Setting frequency to 1350625000

.........................U
 low=0.130326
high=0.167121

.........................U
 low=0.231710
high=0.202372

.........................U
 low=0.205587
high=0.287234

.........................U
 low=0.074896
high=0.138816

Setting frequency to 1349375000

.........................U
 low=0.101478
high=0.112554

.........................U
 low=0.172459
high=0.284622

Setting frequency to 1349375000

.........................U
 low=0.227078
high=0.046418

Setting frequency to 1350625000

.........................U
 low=0.226625
high=0.190997

.........................U
 low=0.080838
high=0.082337

.........................U
 low=0.218436
high=0.178652

.........................U
 low=0.147508
high=0.235487

Setting frequency to 1349375000

.........................U
 low=0.305460
high=0.102793

Setting frequency to 1350625000

.........................U
 low=0.171833
high=0.188423

.........................U
 low=0.077498
high=0.080899

.........................U
 low=0.333212
high=0.058530

Setting frequency to 1350625000

.........................U
 low=0.129141
high=0.218961

Setting frequency to 1349375000

.........................U
 low=0.176827
high=0.158716

.........................U
 low=0.152751
high=0.074679

Setting frequency to 1350625000

.........................U
 low=0.220796
high=0.061970

Setting frequency to 1350625000

.........................U
 low=0.121058
high=0.152686

.........................U
 low=0.110278
high=0.061684

Setting frequency to 1350625000

.........................U
 low=0.152223
high=0.137220

.........................U
 low=0.194896
high=0.031827

Setting frequency to 1350625000

.........................U
 low=0.101798
high=0.293169

Setting frequency to 1349375000

.........................U
 low=0.245128
high=0.046751

Setting frequency to 1350625000

.........................U
 low=0.111880
high=0.118802

.........................U
 low=0.158775
high=0.127890

.........................U
 low=0.231275
high=0.211711

.........................U
 low=0.144864
high=0.231812

Setting frequency to 1349375000

.........................U
 low=0.120973
high=0.043340

Setting frequency to 1350625000

.........................U
 low=0.281114
high=0.247179

.........................U
 low=0.100731
high=0.058783

Setting frequency to 1350625000

.........................U
 low=0.288021
high=0.083844

Setting frequency to 1350625000

.........................U
 low=0.056842
high=0.129744

Setting frequency to 1349375000

.........................U
 low=0.227972
high=0.130539

Setting frequency to 1350625000

.........................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !vim
vim benchmark_tx3.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx3.py" 319L, 10069C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m time, struct, sys, socket
[35mimport[m filter_swig [33mas[m [36mfilter[m
[35mimport[m copy

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mfilter_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, options):[46;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.200[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[19;12H [33mif[m low_sum > high_sum * [31m1.5[m:[20;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m1.5[m:[23;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[27m[m[H[2J[1;4H [33mtry[m:[2;7H s.connect((TCP_IP, TCP_PORT))
    [33mexcept[m socket.timeout:[4;7H [36mprint[m[31m"Connection timed out, try again later"[m[5;7H [33mreturn[m
    [33mexcept[m socket.error:[7;7H [36mprint[m[31m"Connection error"[m[8;7H [33mreturn[m[10;4H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)
    tb.sink.set_freq(options.tx_freq+[31m625000[m)[13;4H n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m([31m1442[m)
    MESSAGE = struct.pack([31m'!l'[m,pkt_size-[31m2[m)[18;4H [33mwhile[m [31m1[m: [34m#n < nbytes:[m[19;8H [33mif[m options.from_file [33mis[m [36mNone[m:[20;12H [33mtry[m:[21;15H s.send(MESSAGE)[22;15H data=s.recv(pkt_size-[31m2[m)[23;12H [33mexcept[m socket.timeout:[24;15H [36mprint[m[31m"Connection timed out, try again later"[m[25;15H [33mreturn[m[26;12H [33mexcept[m socket.error:[27;15H [36mprint[m[31m"Connection closed"[m[28;15H [33mreturn[m[29;12H [33mif[m data.__len__() < [31m8[m:[30;15H [36mprint[m [31m"Connection timed out, try again later"[m[31;15H [33mbreak[m[32;12H [33mif[m options.verbose:[33;16H [34m# First 4 bytes are checksum followed by the 4 byte sequence number[m[34;19H crc,sn = struct.unpack([31m'!LL'[m,data[:[31m8[m])[35;19H [36mprint[m [31m"Seq #:"[m, sn, [31m" with CRC ["[m, [36mhex[m(crc), [31m"]"[m[37;8H [33melse[m:[38;12H data = source_file.read(pkt_size - [31m2[m)[39;12H [33mif[m data == [31m''[m:[40;16H [33mbreak[m;[42;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[43;8H send_pkt(payload)[44;8H n += [36mlen[m(payload)[45;8H sys.stderr.write([31m'.'[m)[46;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[47;68H275,9[9C83%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H time.sleep([31m1[m)[47;68H[K[47;68H276,9[9C84%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H277,0-1[7C84%[46;1H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[47;68H[K[47;68H278,9[9C84%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H tb.sink.set_gain(-[31m60[m)[47;68H[K[47;68H279,9[9C85%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H time.sleep([31m0.200[m)[47;68H[K[47;68H280,9[9C85%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H low_sum = ftb.probe_lp.level()[47;68H[K[47;68H281,9[9C86%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H high_sum = ftb.probe_hp.level()[47;68H[K[47;68H282,9[9C86%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H283,9[9C86%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H [34m#while 1:[m[47;68H[K[47;68H284,9[9C87%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [34m#time.sleep(0.1)[m[47;68H[K[47;68H285,9[9C87%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [34m#low_sum = ftb.probe_lp.level()[m[47;68H[K[47;68H286,9[9C87%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [34m#high_sum = ftb.probe_hp.level()[m[47;68H[K[47;68H287,9[9C88%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[47;68H[K[47;68H288,9[9C88%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H289,1[9C89%[46;1H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[47;68H[K[47;68H290,9[9C89%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H291,0-1[7C89%[46;1H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H [33mif[m low_sum > high_sum * [31m1.5[m:[47;68H[K[47;68H292,9[9C90%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[47;68H[K[47;68H293,9[9C90%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[47;68H[K[47;68H294,9[9C90%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H [33melif[m high_sum > low_sum * [31m1.5[m:[47;68H[K[47;68H295,9[9C91%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[47;68H[K[47;68H296,9[9C91%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[47;68H[K[47;68H297,9[9C91%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H298,0-1[7C92%[46;1H[?12l[?25h[?25l[47;70H7,9  [45;9H[?12l[?25h[?25l[47;70H6[44;9H[?12l[?25h[?25l[47;70H5[43;9H[?12l[?25h[?25l[47;70H4[42;9H[?12l[?25h[?25l[47;70H3[41;9H[?12l[?25h[?25l[47;70H2[40;9H[?12l[?25h[?25l[47;70H1,0-1[39;1H[?12l[?25h[?25l[47;70H0,9  [38;9H[?12l[?25h[?25l[47;69H89,1[37;1H[?12l[?25h[?25l[47;70H8,9[36;9H[?12l[?25h[?25l[47;70H7[35;9H[?12l[?25h[?25l[47;70H6[34;9H[?12l[?25h[?25l[47;70H5[33;9H[?12l[?25h[?25l[47;70H4[32;9H[?12l[?25h[?25l[47;70H3[31;9H[?12l[?25h[?25l[47;70H2[30;9H[?12l[?25h[?25l[47;70H1[29;9H[?12l[?25h[?25l[47;70H0[28;9H[?12l[?25h[?25l[47;72H13[28;13H[?12l[?25h[?25l[47;73H7[28;17H[?12l[?25h[?25l[47;73H8[28;18H[?12l[?25h[?25lsleep[46m([5C)[m[47;72H23[28;23H[?12l[?25h[?25l([5C)[47;73H4[28;24H[?12l[?25h[?25l[47;73H5[28;25H[?12l[?25h[?25l[47;73H6[28;26H[?12l[?25h[?25l[31m.1[?12l[?25h[?25l[m[47;68H[K[47;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10069C written[28C280,26[8C92%[47;68H[K[47;68H280,26[8C92%[28;26H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !.
./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

.........................U
 low=5.094487
high=0.105679

Setting frequency to 1350625000

.........................U
 low=128318.368290
high=726.877140

Setting frequency to 1350625000

.........................U
 low=98350.070127
high=40921.662966

Setting frequency to 1350625000

.........................U
 low=75776.807330
high=45121.444404

Setting frequency to 1350625000

.........................U
 low=75039.819094
high=43357.959391

Setting frequency to 1350625000

.........................U
 low=69927.050491
high=7042.694208

Setting frequency to 1350625000

.........................U
 low=75109.483865
high=47402.809454

Setting frequency to 1350625000

.........................U
 low=4021.812218
high=48.465925

Setting frequency to 1350625000

.........................U
 low=96713.040541
high=36327.317926

Setting frequency to 1350625000

.........................U
 low=128366.770507
high=4601.812356

Setting frequency to 1350625000

.........................U
 low=36450.121772
high=95069.166965

Setting frequency to 1349375000

.........................U
 low=49907.460250
high=46713.002750

.........................U
 low=42115.270162
high=107059.725050

Setting frequency to 1349375000

.........................U
 low=42824.999085
high=77510.229663

Setting frequency to 1349375000

.........................U
 low=64584.021042
high=35354.156537

Setting frequency to 1350625000

.........................U
 low=128182.681714
high=5798.792441

Setting frequency to 1350625000

.........................U
 low=7.758607
high=0.064901

Setting frequency to 1350625000

.........................U
 low=75199.571341
high=45292.510693

Setting frequency to 1350625000

.........................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !vim
vim benchmark_tx3.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx3.py" 319L, 10069C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m time, struct, sys, socket
[35mimport[m filter_swig [33mas[m [36mfilter[m
[35mimport[m copy

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mfilter_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, options):[46;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.100[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[19;12H [33mif[m low_sum > high_sum * [31m1.5[m:[20;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m1.5[m:[23;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[47;68H[K[47;1H?[?12l[?25h1[?25l[?12l[?25h[?25l[47;2H[K[47;2H[?12l[?25h.[?25l[?12l[?25h1[?25l[?12l[?25h0[?25l[?12l[?25h0[?25l[?12l[?25h[?25l[67C290,69[8CBot[17;69H[?12l[?25h[?25l[47;1H[K[47;1H?[?12l[?25h\[?25l[?12l[?25h.[?25l[?12l[?25h1[?25l[?12l[?25h0[?25l[?12l[?25h0[?25l[?12l[?25h[?25l[67C280,25[8CBot[7;25H[?12l[?25h[?25l[47;73H6[7;26H[?12l[?25h[?25l[47;73H7[7;27H[?12l[?25h[?25l[31m15[?12l[?25h[?25l[m[47;1H[K[47;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10069C written[28C280,27[8CBot[47;68H[K[47;68H280,27[8CBot[7;27H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !.
./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

U.........................U
 low=0.288499
high=0.195066

.........................U
 low=0.112749
high=0.050815

Setting frequency to 1350625000

.........................U
 low=0.149724
high=0.084987

Setting frequency to 1350625000

.........................U
 low=0.185049
high=0.237756

.........................U
 low=0.160453
high=0.156850

.........................U
 low=0.174199
high=0.120640

.........................U
 low=0.117342
high=0.317997

Setting frequency to 1349375000

.........................U
 low=0.154585
high=0.073272

Setting frequency to 1350625000

.........................U
 low=0.368709
high=0.264104

.........................U
 low=0.431792
high=0.246783

Setting frequency to 1350625000

.........................U
 low=0.205871
high=0.349442

Setting frequency to 1349375000

.........................U
 low=0.317153
high=0.126680

Setting frequency to 1350625000

.........................U
 low=0.206664
high=0.110838

Setting frequency to 1350625000

.........................U
 low=0.134603
high=0.179116

.........................U
 low=0.296128
high=0.215549

.........................U
 low=0.203789
high=0.329519

Setting frequency to 1349375000

.........................U
 low=0.288552
high=0.048606

Setting frequency to 1350625000

.........................U
 low=0.243216
high=0.095164

Setting frequency to 1350625000

.........................U
 low=0.085529
high=0.203337

Setting frequency to 1349375000

.........................U
 low=0.133742
high=0.109305

.........................U
 low=0.280506
high=0.117145

Setting frequency to 1350625000

.........................U
 low=0.042413
high=0.122866

Setting frequency to 1349375000

.........................U
 low=0.323205
high=0.435462

.........................U
 low=0.254843
high=0.184241

.........................U
 low=0.088888
high=0.149125

Setting frequency to 1349375000

.........................U
 low=0.380889
high=0.128773

Setting frequency to 1350625000

.........................U
 low=0.125667
high=0.177513

.........................U
 low=0.245450
high=0.347734

.........................U
 low=0.216381
high=0.108053

Setting frequency to 1350625000

.........................U
 low=0.183256
high=0.174859

.........................U
 low=0.116321
high=0.227561

Setting frequency to 1349375000

.........................U
 low=0.432521
high=0.181238

Setting frequency to 1350625000

.........................U
 low=0.199101
high=0.173361

.........................U
 low=0.066923
high=0.270312

Setting frequency to 1349375000

.....U....................U
 low=0.075355
high=0.098413

.........................U
 low=0.358523
high=0.094212

Setting frequency to 1350625000

.........................U
 low=0.058154
high=0.094719

Setting frequency to 1349375000

.........................U
 low=0.201610
high=0.198628

.........................U
 low=0.395818
high=0.281174

.........................U
 low=0.281298
high=0.206316

.........................U
 low=0.195131
high=0.141675

.........................U
 low=0.291520
high=0.218674

...U......................U
 low=0.448578
high=0.097094

Setting frequency to 1350625000

.........................U
 low=0.218794
high=0.110148

Setting frequency to 1350625000

.........................U
 low=0.135826
high=0.366896

Setting frequency to 1349375000

.........................U
 low=0.290737
high=0.095735

Setting frequency to 1350625000

.........................U
 low=0.229536
high=0.205781

.........................U
 low=0.169951
high=0.174123

.........................U
 low=0.089219
high=0.222553

Setting frequency to 1349375000

.........................U
 low=0.162441
high=0.098667

Setting frequency to 1350625000

.........................U
 low=0.343537
high=0.146501

Setting frequency to 1350625000

.........................U
 low=0.236885
high=0.158672

.........................U
 low=0.138481
high=0.314246

Setting frequency to 1349375000

.........................U
 low=0.249868
high=0.158710

Setting frequency to 1350625000

.........................U
 low=0.081736
high=0.271106

Setting frequency to 1349375000

.........................U
 low=0.278168
high=0.116915

Setting frequency to 1350625000

.........................U
 low=0.047013
high=0.073310

Setting frequency to 1349375000

.........................U
 low=0.169836
high=0.132682

.........................U
 low=0.287639
high=0.157773

Setting frequency to 1350625000

.........................U
 low=0.148472
high=0.109747

.........................U
 low=0.221022
high=0.195866

.........................U
 low=0.096909
high=0.195327

Setting frequency to 1349375000

.........................U
 low=0.295863
high=0.157251

Setting frequency to 1350625000

.........................U
 low=0.317717
high=0.450180

.........................U
 low=0.110178
high=0.186665

Setting frequency to 1349375000

.........................U
 low=0.199394
high=0.180696

.........................U
 low=0.201944
high=0.192913

.........................U
 low=0.290907
high=0.049524

Setting frequency to 1350625000

.........................U
 low=0.143173
high=0.167889

.........................U
 low=0.293064
high=0.216192

.........................U
 low=0.049920
high=0.106606

Setting frequency to 1349375000

.........................U
 low=0.233092
high=0.183119

.........................U
 low=0.293481
high=0.091407

Setting frequency to 1350625000

.........................U
 low=0.081406
high=0.201560

Setting frequency to 1349375000

.........................U
 low=0.156272
high=0.131509

.........................U
 low=0.173332
high=0.073357

Setting frequency to 1350625000

.........................U
 low=0.068612
high=0.306163

Setting frequency to 1349375000

.........................U
 low=0.331572
high=0.149979

Setting frequency to 1350625000

.........................U
 low=0.071882
high=0.187205

Setting frequency to 1349375000

.........................U
 low=0.377505
high=0.057662

Setting frequency to 1350625000

.........................U
 low=0.082658
high=0.186518

Setting frequency to 1349375000

.........................U
 low=0.165701
high=0.242956

.........................U
 low=0.195553
high=0.014742

Setting frequency to 1350625000

.........................U
 low=0.070825
high=0.133695

Setting frequency to 1349375000

.........................U
 low=0.205537
high=0.184364

.........................U
 low=0.165122
high=0.141491

.........................U
 low=0.281408
high=0.080001

Setting frequency to 1350625000

.........................U
 low=0.321590
high=0.188885

Setting frequency to 1350625000

.........................U
 low=0.101549
high=0.092096

.........................U
 low=0.115939
high=0.066174

Setting frequency to 1350625000

.........................U
 low=0.236216
high=0.210418

.........................U
 low=0.317419
high=0.162781

Setting frequency to 1350625000

.........................U
 low=0.343857
high=0.112992

Setting frequency to 1350625000

.........................U
 low=0.142348
high=0.151953

.........................U
 low=0.067655
high=0.086589

.........................U
 low=0.059043
high=0.203737

Setting frequency to 1349375000

.........................U
 low=0.221294
high=0.144157

Setting frequency to 1350625000

.........................U
 low=0.097229
high=0.254282

Setting frequency to 1349375000

.........................U
 low=0.132683
high=0.067119

Setting frequency to 1350625000

.........................U
 low=0.091449
high=0.096255

.........................U
 low=0.087276
high=0.301081

Setting frequency to 1349375000

.........................U
 low=0.147111
high=0.193236

.........................U
 low=0.181623
high=0.126957

.........................U
 low=0.257590
high=0.040801

Setting frequency to 1350625000

.........................U
 low=0.127153
high=0.514340

Setting frequency to 1349375000

.........................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !vim
vim benchmark_tx3.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx3.py" 319L, 10069C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m time, struct, sys, socket
[35mimport[m filter_swig [33mas[m [36mfilter[m
[35mimport[m copy

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mfilter_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, options):[46;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.150[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[19;12H [33mif[m low_sum > high_sum * [31m1.5[m:[20;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m1.5[m:[23;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[27m[m[H[2J[1;4H [33mtry[m:[2;7H s.connect((TCP_IP, TCP_PORT))
    [33mexcept[m socket.timeout:[4;7H [36mprint[m[31m"Connection timed out, try again later"[m[5;7H [33mreturn[m
    [33mexcept[m socket.error:[7;7H [36mprint[m[31m"Connection error"[m[8;7H [33mreturn[m[10;4H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)
    tb.sink.set_freq(options.tx_freq+[31m625000[m)[13;4H n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m([31m1442[m)
    MESSAGE = struct.pack([31m'!l'[m,pkt_size-[31m2[m)[18;4H [33mwhile[m [31m1[m: [34m#n < nbytes:[m[19;8H [33mif[m options.from_file [33mis[m [36mNone[m:[20;12H [33mtry[m:[21;15H s.send(MESSAGE)[22;15H data=s.recv(pkt_size-[31m2[m)[23;12H [33mexcept[m socket.timeout:[24;15H [36mprint[m[31m"Connection timed out, try again later"[m[25;15H [33mreturn[m[26;12H [33mexcept[m socket.error:[27;15H [36mprint[m[31m"Connection closed"[m[28;15H [33mreturn[m[29;12H [33mif[m data.__len__() < [31m8[m:[30;15H [36mprint[m [31m"Connection timed out, try again later"[m[31;15H [33mbreak[m[32;12H [33mif[m options.verbose:[33;16H [34m# First 4 bytes are checksum followed by the 4 byte sequence number[m[34;19H crc,sn = struct.unpack([31m'!LL'[m,data[:[31m8[m])[35;19H [36mprint[m [31m"Seq #:"[m, sn, [31m" with CRC ["[m, [36mhex[m(crc), [31m"]"[m[37;8H [33melse[m:[38;12H data = source_file.read(pkt_size - [31m2[m)[39;12H [33mif[m data == [31m''[m:[40;16H [33mbreak[m;[42;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[43;8H send_pkt(payload)[44;8H n += [36mlen[m(payload)[45;8H sys.stderr.write([31m'.'[m)[46;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[47;68H275,9[9C83%[46;9H[?12l[?25h[?25l[47;70H4[45;9H[?12l[?25h[?25l[47;70H5[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H time.sleep([31m1[m)[47;68H[K[47;68H276,9[9C84%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H277,0-1[7C84%[46;1H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[47;68H[K[47;68H278,9[9C84%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H tb.sink.set_gain(-[31m60[m)[47;68H[K[47;68H279,9[9C85%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H time.sleep([31m0.150[m)[47;68H[K[47;68H280,9[9C85%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H low_sum = ftb.probe_lp.level()[47;68H[K[47;68H281,9[9C86%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H high_sum = ftb.probe_hp.level()[47;68H[K[47;68H282,9[9C86%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H283,9[9C86%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H [34m#while 1:[m[47;68H[K[47;68H284,9[9C87%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [34m#time.sleep(0.1)[m[47;68H[K[47;68H285,9[9C87%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [34m#low_sum = ftb.probe_lp.level()[m[47;68H[K[47;68H286,9[9C87%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [34m#high_sum = ftb.probe_hp.level()[m[47;68H[K[47;68H287,9[9C88%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[47;68H[K[47;68H288,9[9C88%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H289,1[9C89%[46;1H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[47;68H[K[47;68H290,9[9C89%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H291,0-1[7C89%[46;1H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H [33mif[m low_sum > high_sum * [31m1.5[m:[47;68H[K[47;68H292,9[9C90%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[47;68H[K[47;68H293,9[9C90%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[47;68H[K[47;68H294,9[9C90%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H [33melif[m high_sum > low_sum * [31m1.5[m:[47;68H[K[47;68H295,9[9C91%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[47;68H[K[47;68H296,9[9C91%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[47;68H[K[47;68H297,9[9C91%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H298,0-1[7C92%[46;1H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H tb.sink.set_gain([31m30[m)[47;68H[K[47;68H299,9[9C92%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[47;68H[K[47;68H300,0-1[7C93%[46;1H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;8H [34m#if pktno % 50 == 50-1:[m[47;68H[K[47;68H301,9[9C93%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[47;68H[K[47;68H302,9[9C93%[46;9H[?12l[?25h[?25l[1;46r[46;1H
[1;47r[46;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[47;68H[K[47;68H303,9[9C94%[46;9H[?12l[?25h[?25l[47;70H2[45;9H[?12l[?25h[?25l[47;70H1[44;9H[?12l[?25h[?25l[47;70H0,0-1[43;1H[?12l[?25h[?25l[47;68H299,9  [42;9H[?12l[?25h[?25l[47;70H8,0-1[41;1H[?12l[?25h[?25l[47;70H7,9  [40;9H[?12l[?25h[?25l[47;70H6[39;9H[?12l[?25h[?25l[47;70H5[38;9H[?12l[?25h[?25l[47;70H4[37;9H[?12l[?25h[?25l[47;70H3[36;9H[?12l[?25h[?25l[47;70H2[35;9H[?12l[?25h[?25l[47;70H1,0-1[34;1H[?12l[?25h[?25l[47;70H2,9  [35;9H[?12l[?25h[?25l[47;72H40[35;40H[?12l[?25h[?25l[47;72H39[35;39H[?12l[?25h[?25l[47;73H8[35;38H[?12l[?25h[?25l[47;73H7[35;37H[?12l[?25h[?25l[35;37H[K[47;73H6[35;36H[?12l[?25h[?25l[47;1H[1m-- INSERT --[m[47;68H[K[47;68H292,37[8C94%[35;37H[?12l[?25h[?25l [31m3[m[47;73H8[35;38H[?12l[?25h[?25l[31m3[m:[47;73H9[35;39H[?12l[?25h[47;1H[K[35;38H[?25l[47;68H292,38[8C94%[35;38H[?12l[?25h[?25l[47;70H3[36;38H[?12l[?25h[?25l[47;70H4[37;38H[?12l[?25h[?25l[47;70H5[38;38H[?12l[?25h[?25l[47;73H9[38;39H[?12l[?25h[?25l[47;1H[1m-- INSERT --[m[47;68H[K[47;68H295,43[8C94%[47;1H[K[38;42H:[31m3[m:[47;68H295,44[8C94%[38;44H[?12l[?25h[?25l[47;73H3[38;43H[?12l[?25h[?25l[47;73H2[38;42H[?12l[?25h[?25l[47;73H1[38;41H[?12l[?25h[?25l[47;73H0[38;40H[?12l[?25h[?25l[31m15[m:[31m3[m:[38;44H[K[38;40H[?12l[?25h[?25l[47;72H39[38;39H[?12l[?25h[?25l [31m5[m:[31m3[m:[38;43H[K[38;39H[?12l[?25h[?25l :[31m3[m:[38;42H[K[38;39H[?12l[?25h[?25l [31m3[m:[38;41H[K[38;39H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10065C written[28C295,39[8C94%[47;68H[K[47;68H295,39[8C94%[38;39H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !.
./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

.........................U
 low=0.238334
high=0.080753

.........................U
 low=0.230464
high=0.070144

Setting frequency to 1350625000

.........................U
 low=0.365164
high=0.131207

.....U....................U
 low=0.109370
high=0.101063

...U......................U
 low=0.084914
high=0.132311

.........................U
 low=0.146246
high=0.051994

.........................U
 low=0.106403
high=0.195400

.........................U
 low=0.394009
high=0.089491

Setting frequency to 1350625000

....U.U....................U
 low=0.131380
high=0.184097

.........................U
 low=0.262365
high=0.076241

Setting frequency to 1350625000

.........................U
 low=0.029996
high=0.133716

Setting frequency to 1349375000

.........................U
 low=0.533098
high=0.276118

.....U....................U
 low=0.259470
high=0.109919

.........................U
 low=0.146193
high=0.045421

Setting frequency to 1350625000

.........................U
 low=0.117081
high=0.127655

.........................U
 low=0.075196
high=0.298221

Setting frequency to 1349375000

.........................U
 low=0.301800
high=0.194767

.........................U
 low=0.339085
high=0.171508

.........................U
 low=0.141767
high=0.236412

.........................U
 low=0.235950
high=0.090459

....U.....................U
 low=0.231691
high=0.100138

.........................U
 low=0.272281
high=0.037203

Setting frequency to 1350625000

.........................U
 low=0.169738
high=0.547557

Setting frequency to 1349375000

.........................U
 low=0.149765
high=0.059091

.........................U
 low=0.157449
high=0.096219

.........................U
 low=0.108110
high=0.176510

.........................U
 low=0.152589
high=0.309635

.........................U
 low=0.164440
high=0.108813

.........................U
 low=0.186828
high=0.034334

Setting frequency to 1350625000

.........................U
 low=0.104059
high=0.115357

.........................U
 low=0.261187
high=0.148100

.........................U
 low=0.073995
high=0.096590

.........................U
 low=0.250662
high=0.168350

.........................U
 low=0.242845
high=0.217150

.........................U
 low=0.319001
high=0.318059

.........................U
 low=0.113270
high=0.099962

.........................U
 low=0.097353
high=0.531154

Setting frequency to 1349375000

.........................U
 low=0.464623
high=0.055585

Setting frequency to 1350625000

.........................U
 low=0.440313
high=0.153053

.........................U
 low=0.077236
high=0.096614

.........................U
 low=0.095860
high=0.200248

.........................U
 low=0.172628
high=0.252640

.........................U
 low=0.140059
high=0.297128

.........................U
 low=0.192082
high=0.129214

.........................U
 low=0.173492
high=0.333752

.........................U
 low=0.192289
high=0.086738

.........................U
 low=0.326514
high=0.138928

.........................U
 low=0.166799
high=0.152478

.........................U
 low=0.122715
high=0.186508

.........................U
 low=0.277774
high=0.674150

.........................U
 low=0.030752
high=0.307197

Setting frequency to 1349375000

.........................U
 low=0.490216
high=0.133931

Setting frequency to 1350625000

.........................U
 low=0.205304
high=0.203689

.........................U
 low=0.090448
high=0.190281

.........................U
 low=0.080785
high=0.107862

.........................U
 low=0.138520
high=0.040031

Setting frequency to 1350625000

.........................U
 low=0.092637
high=0.141880

.........................U
 low=0.094195
high=0.145967

.........................U
 low=0.117139
high=0.361114

Setting frequency to 1349375000

.........................U
 low=0.240842
high=0.087368

.........................U
 low=0.270328
high=0.172203

.........................U
 low=0.266137
high=0.139877

.........................U
 low=0.235371
high=0.088756

.........................U
 low=0.196670
high=0.225686

.........................U
 low=0.143417
high=0.205727

.........................U
 low=0.187765
high=0.056543

Setting frequency to 1350625000

.........................U
 low=0.166447
high=0.128029

.........................U
 low=0.067915
high=0.146900

.........................U
 low=0.235717
high=0.200945

.........................U
 low=0.091391
high=0.245256

.........................U
 low=0.178803
high=0.105295

.........................U
 low=0.076864
high=0.160649

.........................U
 low=0.189572
high=0.207467

.........................U
 low=0.293116
high=0.088137

Setting frequency to 1350625000

.........................U
 low=0.208175
high=0.174220

.........................U
 low=0.291954
high=0.113122

.........................U
 low=0.175204
high=0.135935

.........................U
 low=0.134075
high=0.218940

.........................U
 low=0.206491
high=0.274280

.........................U
 low=0.144927
high=0.223735

.........................U
 low=0.290910
high=0.593705

.........................U
 low=0.225321
high=0.127504

.........................U
 low=0.116174
high=0.290989

.........................U
 low=0.050787
high=0.141580

.........................U
 low=0.185107
high=0.104767

.........................U
 low=0.205293
high=0.110589

.........................U
 low=0.105855
high=0.299605

.........................U
 low=0.172040
high=0.247141

.........................U
 low=0.199671
high=0.100232

.........................U
 low=0.198328
high=0.593019

.........................U
 low=0.184946
high=0.236336

.........................U
 low=0.186354
high=0.085358

.........................U
 low=0.291640
high=0.212293

.........................U
 low=0.173176
high=0.133250

.........................U
 low=0.185607
high=0.120853

.........................U
 low=0.334873
high=0.356601

.........................U
 low=0.204362
high=0.077443

.........................U
 low=0.108186
high=0.091674

.........................U
 low=0.182628
high=0.194298

.........................U
 low=0.109030
high=0.295312

.........................U
 low=0.260583
high=0.097730

.........................U
 low=0.101310
high=0.103063

.........................U
 low=0.167526
high=0.318462

.........................U
 low=0.121607
high=0.238510

.........................U
 low=0.162404
high=0.110080

.........................U
 low=0.087742
high=0.143075

.........................U
 low=0.132747
high=0.076992

.........................U
 low=0.175240
high=0.363217

.........................U
 low=0.030692
high=0.171238

Setting frequency to 1349375000

.........................U
 low=0.165900
high=0.083991

.........................U
 low=0.141608
high=0.104700

.........................U
 low=0.093103
high=0.133201

.........................U
 low=0.210378
high=0.079708

.........................U
 low=0.079662
high=0.144857

.........................U
 low=0.194839
high=0.060274

Setting frequency to 1350625000

.........................U
 low=0.052351
high=0.135763

.........................U
 low=0.072239
high=0.067920

.........................U
 low=0.074190
high=0.197752

.........................U
 low=0.284784
high=0.120762

.........................U
 low=0.233462
high=0.077478

Setting frequency to 1350625000

.........................U
 low=0.195657
high=0.295526

.........................U
 low=0.041014
high=0.118925

.........................U
 low=0.118979
high=0.065544

.........................U
 low=0.193353
high=0.124901

.........................U
 low=0.127763
high=0.064185

.........................U
 low=0.137148
high=0.147027

.........................U
 low=0.243869
high=0.409452

.........................U
 low=0.184466
high=0.172967

.........................U
 low=0.161766
high=0.238810

.........................U
 low=0.192022
high=0.066554

.........................U
 low=0.085686
high=0.130211

......................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

U.........................^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# ^C
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# A[K./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
Setting frequency to 1350625000

U.........................U
 low=0.117389
high=0.111913

.........................U
 low=0.108503
high=0.154287

........U.................U
 low=0.304254
high=0.181001

.........................U
 low=0.308106
high=0.126537

.........................U
 low=0.163233
high=0.210152

.........................U
 low=0.056113
high=0.226777

Setting frequency to 1349375000

.........................U
 low=0.329753
high=0.061844

Setting frequency to 1350625000

.........................U
 low=0.138621
high=0.257576

...U..U.U...................U
 low=0.189701
high=0.356812

.........................U
 low=0.122120
high=0.285646

.........................U
 low=0.055648
high=0.201019

Setting frequency to 1349375000

.........................U
 low=0.114660
high=0.155870

.........................U
 low=0.356892
high=0.245109

.........................U
 low=0.191962
high=0.133142

.........................U
 low=0.213496
high=0.155782

.........................U
 low=0.214544
high=0.118558

.........................U
 low=0.191164
high=0.126047

.........................U
 low=0.247676
high=0.045184

Setting frequency to 1350625000

.........................U
 low=0.062397
high=0.198033

Setting frequency to 1349375000

.........................U
 low=0.321368
high=0.139850

.........................U
 low=0.234075
high=0.052792

Setting frequency to 1350625000

.........................U
 low=0.123897
high=0.098800

.........................U
 low=0.152739
high=0.209261

.........................U
 low=0.114061
high=0.161949

.........................U
 low=0.210141
high=0.037048

Setting frequency to 1350625000

.........................U
 low=0.086928
high=0.261812

Setting frequency to 1349375000

.........................U
 low=0.154475
high=0.093083

.........................U
 low=0.266832
high=0.096180

.........................U
 low=0.387998
high=0.036169

Setting frequency to 1350625000

....U..U...................U
 low=0.106046
high=0.077813

.........................U
 low=0.187673
high=0.099757

.........................U
 low=0.099105
high=0.221742

.........................U
 low=0.100977
high=0.166852

.........................U
 low=0.170109
high=0.101742

.........................U
 low=0.109123
high=0.194330

....U.U....................U
 low=0.114168
high=0.299979

.........................U
 low=0.165280
high=0.270193

.........................U
 low=0.116668
high=0.081875

.........................U
 low=0.113954
high=0.233129

.........................U
 low=0.264927
high=0.213464

.........................U
 low=0.177181
high=0.196823

.........................U
 low=0.202312
high=0.196434

.........................U
 low=0.210671
high=0.060146

Setting frequency to 1350625000

.........................U
 low=0.154706
high=0.197633

...U..U....................U
 low=0.196267
high=0.249709

.........................U
 low=0.148157
high=0.156255

.........................U
 low=0.081718
high=0.144331

.........................U
 low=0.164585
high=0.315942

.........................U
 low=0.199511
high=0.523615

.........................U
 low=0.101026
high=0.105168

.........................U
 low=0.105053
high=0.277343

.........................U
 low=0.219152
high=0.156020

.........................U
 low=0.280359
high=0.259910

.........................U
 low=0.400682
high=0.114412

Setting frequency to 1350625000

.........................U
 low=0.054119
high=0.172108

Setting frequency to 1349375000

.........................U
 low=0.175166
high=0.137860

.........................U
 low=0.202324
high=0.077145

.........................U
 low=0.100269
high=0.390544

Setting frequency to 1349375000

.........................U
 low=0.274263
high=0.235140

.........................U
 low=0.208336
high=0.078687

.........................U
 low=0.237505
high=0.085629

.........................U
 low=0.165633
high=0.050266

Setting frequency to 1350625000

.........................U
 low=0.145031
high=0.216804

.........................U
 low=0.306739
high=0.152512

.........................U
 low=0.137489
high=0.122277

.........................U
 low=0.168937
high=0.190872

.........................U
 low=0.125653
high=0.131916

.........................U
 low=0.164551
high=0.148194

.........................U
 low=0.050727
high=0.229203

Setting frequency to 1349375000

.........................U
 low=0.159523
high=0.123617

.........................U
 low=0.071388
high=0.115802

.........................U
 low=0.364050
high=0.055281

Setting frequency to 1350625000

.........................U
 low=0.107949
high=0.108749

.........................U
 low=0.074051
high=0.167818

.........................U
 low=0.298307
high=0.146892

.........................U
 low=0.276941
high=0.383944

.........................U
 low=0.081481
high=0.116463

.........................U
 low=0.087995
high=0.149997

.........................U
 low=0.168459
high=0.242079

.........................U
 low=0.067626
high=0.127128

.........................U
 low=0.045838
high=0.332733

Setting frequency to 1349375000

.........................U
 low=0.471232
high=0.154804

Setting frequency to 1350625000

.........................U
 low=0.160678
high=0.183265

.........................U
 low=0.356602
high=0.114773

Setting frequency to 1350625000

.........................U
 low=0.163704
high=0.144440

.........................U
 low=0.228394
high=0.152954

.........................U
 low=0.238843
high=0.233182

.........................U
 low=0.099439
high=0.382385

Setting frequency to 1349375000

.........................U
 low=0.406346
high=0.094024

Setting frequency to 1350625000

.........................U
 low=0.292481
high=0.413558

.........................U
 low=0.168447
high=0.176070

.........................U
 low=0.270796
high=0.121509

.........................U
 low=0.101074
high=0.209402

.........................U
 low=0.164197
high=0.144009

.........................U
 low=0.040254
high=0.225055

Setting frequency to 1349375000

.........................U
 low=0.140481
high=0.061886

.........................U
 low=0.202755
high=0.136813

.........................U
 low=0.080351
high=0.086487

.........................U
 low=0.176600
high=0.128613

.........................U
 low=0.213502
high=0.032221

Setting frequency to 1350625000

.........................U
 low=0.158129
high=0.187229

.........................U
 low=0.149495
high=0.368428

.........................U
 low=0.073806
high=0.203916

.........................U
 low=0.363392
high=0.128407

.........................U
 low=0.219099
high=0.088201

.........................U
 low=0.185270
high=0.102802

.........................U
 low=0.145052
high=0.427545

.........................U
 low=0.037715
high=0.160218

Setting frequency to 1349375000

.........................U
 low=0.185909
high=0.256772

.........................U
 low=0.049908
high=0.126245

.........................U
 low=0.222521
high=0.334204

.........................U
 low=0.145669
high=0.152927

.........................U
 low=0.165331
high=0.213922

.........................U
 low=0.203110
high=0.185744

.........................U
 low=0.202694
high=0.071516

.........................U
 low=0.346722
high=0.220510

.........................U
 low=0.439586
high=0.031375

Setting frequency to 1350625000

.........................U
 low=0.066592
high=0.343664

Setting frequency to 1349375000

.........................U
 low=0.235604
high=0.024909

Setting frequency to 1350625000

.........................U
 low=0.024887
high=0.162356

Setting frequency to 1349375000

.........................U
 low=0.145613
high=0.157951

.........................U
 low=0.125210
high=0.043167

.........................U
 low=0.287493
high=0.355097

.........................U
 low=0.237806
high=0.057039

Setting frequency to 1350625000

.........................U
 low=0.121007
high=0.188113

.........................U
 low=0.068860
high=0.151415

.........................U
 low=0.304144
high=0.243534

.........................U
 low=0.092548
high=0.217595

.........................U
 low=0.110626
high=0.059675

.........................U
 low=0.094444
high=0.167467

.........................U
 low=0.347193
high=0.168466

.........................U
 low=0.527263
high=0.244558

.........................U
 low=0.253295
high=0.105136

.........................U
 low=0.084652
high=0.080792

.........................U
 low=0.105614
high=0.142502

.........................U
 low=0.167705
high=0.179622

.........................U
 low=0.351153
high=0.155956

.........................U
 low=0.093449
high=0.290737

Setting frequency to 1349375000

.........................U
 low=0.136257
high=0.080037

.........................U
 low=0.068328
high=0.153728

.........................U
 low=0.191647
high=0.115017

.........................U
 low=0.288175
high=0.059942

Setting frequency to 1350625000

.........................U
 low=0.067319
high=0.135101

.........................U
 low=0.140511
high=0.248882

.........................U
 low=0.060661
high=0.114003

.........................U
 low=0.122653
high=0.239641

.........................U
 low=0.132912
high=0.126286

.........................U
 low=0.149657
high=0.202124

.........................U
 low=0.087925
high=0.222284

.........................U
 low=0.167125
high=0.233882

.........................U
 low=0.177254
high=0.184962

.........................U
 low=0.217695
high=0.482200

.........................U
 low=0.091417
high=0.120658

.........................U
 low=0.270558
high=0.131885

.........................U
 low=0.056485
high=0.196416

Setting frequency to 1349375000

.........................U
 low=0.214695
high=0.138773

.........................U
 low=0.260467
high=0.099136

.........................U
 low=0.285507
high=0.107544

.........................U
 low=0.168502
high=0.100788

.........................U
 low=0.384833
high=0.073248

Setting frequency to 1350625000

.........................U
 low=0.144479
high=0.042720

Setting frequency to 1350625000

.........................U
 low=0.192220
high=0.228084

.........................U
 low=0.216172
high=0.101578

.........................U
 low=0.157279
high=0.068974

.........................U
 low=0.173761
high=0.265801

.........................U
 low=0.047010
high=0.139232

.........................U
 low=0.151021
high=0.197756

.........................U
 low=0.097935
high=0.155153

.........................U
 low=0.283869
high=0.071072

Setting frequency to 1350625000

.........................U
 low=0.141166
high=0.256648

.........................U
 low=0.557076
high=0.587950

.........................U
 low=0.128653
high=0.204272

.........................U
 low=0.060173
high=0.462372

Setting frequency to 1349375000

.........................U
 low=0.226484
high=0.172703

.........................U
 low=0.165994
high=0.160424

.........................U
 low=0.172199
high=0.178299

.........................U
 low=0.269822
high=0.165636

.........................U
 low=0.165684
high=0.078259

.........................U
 low=0.518181
high=0.166100

Setting frequency to 1350625000

.........................U
 low=0.572426
high=0.371526

.........................U
 low=0.184385
high=0.123458

.........................U
 low=0.031680
high=0.066098

.........................U
 low=0.200990
high=0.131957

.........................U
 low=0.149997
high=0.104609

.........................U
 low=0.142603
high=0.155496

.........................U
 low=0.256714
high=0.211109

.........................U
 low=0.148418
high=0.217351

.........................U
 low=0.248548
high=0.085769

.........................U
 low=0.080913
high=0.052837

.........................U
 low=0.251233
high=0.164844

.........................U
 low=0.101518
high=0.210147

.........................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim *x3.py
2 files to edit
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_rx3.py" 221L, 7360C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr, gru
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser
[35mimport[m time

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m receive_path [35mimport[m receive_path
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m struct
[35mimport[m sys, socket

[34m#import os
#print os.getpid()
#raw_input('Attach and press enter: ')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, demodulator, rx_callback, options):[45;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;4H cmd1 = cmd1 + [31m" sps="[m + [36mstr[m(options.samples_per_symbol)
    cmd1 = cmd1 + [31m"[m[35m\"[m[31m"[m[4;4H [35mfrom[m subprocess [35mimport[m os
    os.system(cmd1)[7;4H last_n_rcvd = n_rcvd
    cur_freq_offset = freq_offset
    tb.source.set_freq(options.rx_freq+cur_freq_offset)[11;4H tb.start()[7C [34m# start flow graph[m
   [34m# tb.wait()         # wait for it to finish[m[14;4H [33mwhile[m mstr_cnt < TIMEOUT*[31m1000[m:[15;7H [33mif[m stop_rcv == [31m1[m:[16;10H [33mbreak[m;[17;7H mstr_cnt = mstr_cnt + [31m1[m[18;7H time.sleep([31m0.001[m)[20;7H [33mif[m (mstr_cnt % per_wait == per_wait-[31m1[m):[21;11H [33mif[m last_n_rcvd == n_rcvd:[22;15H [33mif[m cur_freq_offset > [31m0[m:[23;19H cur_freq_offset = [31m0[m-freq_offset[24;15H [33melse[m:[25;19H cur_freq_offset = freq_offset[27;15H [36mprint[m [31m"Switching frequency to %d[m[35m\n[m[31m"[m % (options.rx_freq+cur_freq_offsett[28;1H)[29;15H tb.source.set_freq(options.rx_freq+cur_freq_offset)[31;11H [33melse[m:[32;15H [36mprint[m [31m"Not switching frequencies since we are still receiving[m[35m\n[m[31m"[m[33;15H last_n_rcvd = n_rcvd[35;4H [33mif[m stop_rcv == [31m0[m:[36;7H [36mprint[m [31m"Receiver timed out, received %d packets successfully in %d sec"[m %(n_rigg[37;1Hht, TIMEOUT)[39;4H s.close()

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H221,0-1[7CBot[46;1H[?12l[?25h[?25l[47;68H[K[47;1H?[?12l[?25hp[?25l[?12l[?25hr[?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25ht[?25l[?12l[?25h[?25l[67C212,8[9CBot[36;8H[?12l[?25h[?25l[47;68H[K[47;1H[67C208,16[8CBot[32;16H[?12l[?25h[?25l[47;1H[1m-- INSERT --[m[47;68H[K[47;68H208,16[8CBot[32;16H[?12l[?25h[?25l [34m#print "Not switching frequencies since we are still receiving\n"[m[47;73H7[32;17H[?12l[?25h[47;1H[K[32;16H[?25l[47;68H208,16[8CBot[32;16H[?12l[?25h[?25l[47;1H?print[47;68H[K[47;1H[67C204,16[8CBot[27;16H[?12l[?25h[?25l[47;1H[1m-- INSERT --[m[47;68H[K[47;68H204,16[8CBot[47;1H[K[27;15H [34m#print "Switching frequency to %d\n" % (options.rx_freq+cur_freq_offsee[28;1Ht)[m[47;68H204,16[8CBot[27;16H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"benchmark_rx3.py" 221L, 7362C written[29C204,16[8CBot[47;68H[K[47;68H204,16[8CBot[27;16H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hn[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10065C[1;1H[34m#!/usr/bin/env python[m[1;22H[K[2;1H[34m#[m[2;5H[K[3;1H[34m# Copyright 2010,2011 Free Software Foundation, Inc.
# [m[4;5H[K[5;1H[34m# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# [m[11;5H[K[12;1H[34m# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# [m[16;11H[K[17;1H[34m# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.[m[20;30H[K[21;1H[34m# [m[21;12H[K[22;16H[K[23;1H[35mfrom[m gnuradio [35mimport[m gr[23;24H[K[24;1H[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option[25;43H[K[26;1H[35mfrom[m optparse [35mimport[m OptionParser[27;16H[K[28;1H[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital[29;29H[K[31;1H[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path[32;40H[K[33;1H[35mfrom[m uhd_interface [35mimport[m uhd_transmitter
[35mfrom[m uhd_interface [35mimport[m uhd_receiver[35;5H[K[36;1H[35mimport[m time, struct, sys, socket[36;33H[K[37;1H[35mimport[m filter_swig [33mas[m [36mfilter[m
[35mimport[m copy[39;5H[K[40;1H[34m#import os 
#print os.getpid()[m[41;19H[K[42;1H[34m#raw_input('Attach and press enter')[m[43;9H[K[44;1H[33mclass[m [36mfilter_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, options):[46;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25h[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.150[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [36mprint[m [31m"[m[35m\n[m[31m low=%f[m[35m\n[m[31mhigh=%f[m[35m\n[m[31m"[m % (low_sum*[31m100000[m, high_sum*[31m100000[m)[19;12H [33mif[m low_sum > high_sum * [31m3[m:[20;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m3[m:[23;16H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq-[31m625000[m)[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[47;68H[K[47;1H?[?12l[?25h[?25l?print[67C302,14[8CBot[29;14H[?12l[?25h[?25l[47;68H[K[47;1H[67C296,17[8CBot[23;17H[?12l[?25h[?25l[47;1H[1m-- INSERT --[m[47;68H[K[47;68H296,17[8CBot[47;1H[K[23;16H [34m#print "Setting frequency to %d\n" % (options.tx_freq-625000)[m[47;68H296,17[8CBot[23;17H[?12l[?25h[?25l[47;1H?print[47;68H[K[47;1H[67C293,17[8CBot[20;17H[?12l[?25h[?25l[47;1H[1m-- INSERT --[m[47;68H[K[47;68H293,17[8CBot[47;1H[K[20;16H [34m#print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[47;68H293,17[8CBot[20;17H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25h[?25l[67C293,17[8CBot[20;17H[?12l[?25h[?25l[47;70H2[19;17H[?12l[?25h[?25l[47;70H1,0-1[18;1H[?12l[?25h[?25l[47;1H?print[47;68H[K[47;1H[67C290,13[8CBot[17;13H[?12l[?25h[?25l[47;1H[1m-- INSERT --[m[47;68H[K[47;68H290,13[8CBot[47;1H[K[17;12H [34m#print "\n low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[47;68H290,13[8CBot[17;13H[?12l[?25h[?25l[47;1H?print[47;68H[K[47;1H[67C288,18[8CBot[15;18H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hw[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10068C written[28C288,18[8CBot[47;68H[K[47;68H288,18[8CBot[15;18H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# !.
./benchmark_tx3.py -f 1.35e9
linux; GNU C++ version 4.6.3; Boost_104800; UHD_003.005.000-0-unknown

>>> gr_fir_ccf: using SSE
-- Opening a USRP2/N-Series device...
-- Current recv frame size: 1472 bytes
-- Current send frame size: 1472 bytes
Using Volk machine: sse4_2_32
1348750000.000000
INFO   OML Client V2.8.1 [Protocol V3] Copyright 2007-2012, NICTA
INFO   Net_stream: connecting to host tcp://idb2:3003
INFO   Waiting for buffered queue reader thread to drain...
INFO   Buffered queue reader thread finished OK...
Done!
USetting frequency to 1350625000

.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U......U...................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U.........................U^C]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim [K[K[K[Kg[Kvim bencham[K[Kmark_tx.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx.py" 154L, 5415C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter

[35mimport[m time, struct, sys

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, modulator, options):[43;8H gr.top_block.__init__(self)[45;8H [33mif[m(options.tx_freq [33mis[m [33mnot[m [36mNone[m):[46;12H [34m# Work-around to get the modulation's bits_per_symbol[m[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H parser.print_help()[2;8H sys.exit([31m1[m)[4;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[5;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[7;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[10;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[12;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[14;4H tb.start()[22C [34m# start flow graph[m[16;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[22;4H [33mwhile[m n < nbytes:[23;8H [33mif[m options.from_file [33mis[m [36mNone[m:[24;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[25;8H [33melse[m:[26;12H data = source_file.read(pkt_size - [31m2[m)[27;12H [33mif[m data == [31m''[m:[28;16H [33mbreak[m;[30;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[31;8H send_pkt(payload)[32;8H n += [36mlen[m(payload)[33;8H sys.stderr.write([31m'.'[m)[34;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[35;12H time.sleep([31m1[m)[36;8H pktno += [31m1[m[38;4H send_pkt(eof=[36mTrue[m)[40;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[44;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[46;8H [33mpass[m[47;68H154,9[9CBot[46;9H[?12l[?25h[?25l[47;70H3,12[45;12H[?12l[?25h[?25l

?print[47;68H[K[47;1H[67C120,9[9CBot[12;9H[?12l[?25h[?25l[27m[m[H[2J[1;8H [34m# occur in the sinks (specifically the UHD sink)[m[2;8H self.txpath = transmit_path(modulator, options)[4;8H self.connect(self.txpath, self.sink)

[34m# /////////////////////////////////////////////////////////////////////////////
#                                   main
# /////////////////////////////////////////////////////////////////////////////[m

[33mdef[m [36mmain[m():[12;4H [33mdef[m [36msend_pkt[m(payload=[31m''[m, eof=[36mFalse[m):[13;8H [33mreturn[m tb.txpath.send_pkt(payload, eof)[15;4H mods = digital.modulation_utils.type_1_mods()[17;4H parser = OptionParser(option_class=eng_option, conflict_handler=[31m"resolve"[m)
    expert_grp = parser.add_option_group([31m"Expert"[m)[20;4H parser.add_option([31m"-m"[m, [31m"--modulation"[m, [36mtype[m=[31m"choice"[m, choices=mods.keys(),[21;22H default=[31m'psk'[m,[22;22H [36mhelp[m=[31m"Select modulation from: %s [default=%%default]"[m[23;28H % ([31m', '[m.join(mods.keys()),))[25;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[26;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)
    parser.add_option([31m"-M"[m, [31m"--megabytes"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1.0[m,[28;22H [36mhelp[m=[31m"set megabytes to transmit [default=%default]"[m)
    parser.add_option([31m""[m,[31m"--discontinuous"[m, action=[31m"store_true"[m, default=[36mFalse[m,[30;22H [36mhelp[m=[31m"enable discontinous transmission (bursts of 5 packets)"[m)
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[32;22H [36mhelp[m=[31m"use intput file for packet contents"[m)
    parser.add_option([31m""[m,[31m"--to-file"[m, default=[36mNone[m,[34;22H [36mhelp[m=[31m"Output file for modulated samples"[m)[36;4H transmit_path.add_options(parser, expert_grp)
    uhd_transmitter.add_options(parser)[39;4H [33mfor[m mod [33min[m mods.values():[40;8H mod.add_options(expert_grp)[42;4H (options, args) = parser.parse_args ()[44;4H [33mif[m [36mlen[m(args) != [31m0[m:[45;8H parser.print_help()[46;8H sys.exit([31m1[m)[47;68H110,9[9C59%[46;9H[?12l[?25h[?25l[27m[m[H[2J[1;8H parser.print_help()[2;8H sys.exit([31m1[m)[4;4H [33mif[m options.from_file [33mis[m [33mnot[m [36mNone[m:[5;8H source_file = [36mopen[m(options.from_file, [31m'r'[m)[7;4H [34m# build the graph[m
    tb = my_top_block(mods[options.modulation], options)[10;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[12;8H [36mprint[m [31m"Warning: failed to enable realtime scheduling"[m[14;4H tb.start()[22C [34m# start flow graph[m[16;4H [34m# generate and send packets[m
    nbytes = [36mint[m([31m1e6[m * options.megabytes)
    n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m(options.size)[22;4H [33mwhile[m n < nbytes:[23;8H [33mif[m options.from_file [33mis[m [36mNone[m:[24;12H data = (pkt_size - [31m2[m) * [36mchr[m(pktno & [31m0xff[m)[25;8H [33melse[m:[26;12H data = source_file.read(pkt_size - [31m2[m)[27;12H [33mif[m data == [31m''[m:[28;16H [33mbreak[m;[30;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[31;8H send_pkt(payload)[32;8H n += [36mlen[m(payload)[33;8H sys.stderr.write([31m'.'[m)[34;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[35;12H time.sleep([31m1[m)[36;8H pktno += [31m1[m[38;4H send_pkt(eof=[36mTrue[m)[40;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[44;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[46;8H [33mpass[m[47;68H109,9[9CBot[1;9H[?12l[?25h[?25l[47;69H54[46;9H[?12l[?25h[?25l[47;68H[K[47;1H?[?12l[?25h[?25l?print[67C120,9[9CBot[12;9H[?12l[?25h[?25l[27m[m[H[2J[1;8H [34m# occur in the sinks (specifically the UHD sink)[m[2;8H self.txpath = transmit_path(modulator, options)[4;8H self.connect(self.txpath, self.sink)

[34m# /////////////////////////////////////////////////////////////////////////////
#                                   main
# /////////////////////////////////////////////////////////////////////////////[m

[33mdef[m [36mmain[m():[12;4H [33mdef[m [36msend_pkt[m(payload=[31m''[m, eof=[36mFalse[m):[13;8H [33mreturn[m tb.txpath.send_pkt(payload, eof)[15;4H mods = digital.modulation_utils.type_1_mods()[17;4H parser = OptionParser(option_class=eng_option, conflict_handler=[31m"resolve"[m)
    expert_grp = parser.add_option_group([31m"Expert"[m)[20;4H parser.add_option([31m"-m"[m, [31m"--modulation"[m, [36mtype[m=[31m"choice"[m, choices=mods.keys(),[21;22H default=[31m'psk'[m,[22;22H [36mhelp[m=[31m"Select modulation from: %s [default=%%default]"[m[23;28H % ([31m', '[m.join(mods.keys()),))[25;4H parser.add_option([31m"-s"[m, [31m"--size"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1500[m,[26;22H [36mhelp[m=[31m"set packet size [default=%default]"[m)
    parser.add_option([31m"-M"[m, [31m"--megabytes"[m, [36mtype[m=[31m"eng_float"[m, default=[31m1.0[m,[28;22H [36mhelp[m=[31m"set megabytes to transmit [default=%default]"[m)
    parser.add_option([31m""[m,[31m"--discontinuous"[m, action=[31m"store_true"[m, default=[36mFalse[m,[30;22H [36mhelp[m=[31m"enable discontinous transmission (bursts of 5 packets)"[m)
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[32;22H [36mhelp[m=[31m"use intput file for packet contents"[m)
    parser.add_option([31m""[m,[31m"--to-file"[m, default=[36mNone[m,[34;22H [36mhelp[m=[31m"Output file for modulated samples"[m)[36;4H transmit_path.add_options(parser, expert_grp)
    uhd_transmitter.add_options(parser)[39;4H [33mfor[m mod [33min[m mods.values():[40;8H mod.add_options(expert_grp)[42;4H (options, args) = parser.parse_args ()[44;4H [33mif[m [36mlen[m(args) != [31m0[m:[45;8H parser.print_help()[46;8H sys.exit([31m1[m)[47;68H110,9[9C59%[46;9H[?12l[?25h[?25l
"benchmark_tx.py" 154 lines --71%--[47;68H[K[47;68H110,9[9C59%[46;9H[?12l[?25h[?25l[47;1H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim benchmark_tx.py3.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_tx3.py" 319L, 10068C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m transmit_path [35mimport[m transmit_path
[35mfrom[m uhd_interface [35mimport[m uhd_transmitter
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m time, struct, sys, socket
[35mimport[m filter_swig [33mas[m [36mfilter[m
[35mimport[m copy

[34m#import os 
#print os.getpid()
#raw_input('Attach and press enter')[m

[33mclass[m [36mfilter_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, options):[46;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.150[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [34m#print "\n low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[19;12H [33mif[m low_sum > high_sum * [31m3[m:[20;16H [34m#print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m3[m:[23;16H [34m#print "Setting frequency to %d\n" % (options.tx_freq-625000)[m[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H319,0-1[7CBot[46;1H[?12l[?25h[?25l[27m[m[H[2J[1;4H [33mtry[m:[2;7H s.connect((TCP_IP, TCP_PORT))
    [33mexcept[m socket.timeout:[4;7H [36mprint[m[31m"Connection timed out, try again later"[m[5;7H [33mreturn[m
    [33mexcept[m socket.error:[7;7H [36mprint[m[31m"Connection error"[m[8;7H [33mreturn[m[10;4H [36mprint[m [31m"Setting frequency to %d[m[35m\n[m[31m"[m % (options.tx_freq+[31m625000[m)
    tb.sink.set_freq(options.tx_freq+[31m625000[m)[13;4H n = [31m0[m
    pktno = [31m0[m
    pkt_size = [36mint[m([31m1442[m)
    MESSAGE = struct.pack([31m'!l'[m,pkt_size-[31m2[m)[18;4H [33mwhile[m [31m1[m: [34m#n < nbytes:[m[19;8H [33mif[m options.from_file [33mis[m [36mNone[m:[20;12H [33mtry[m:[21;15H s.send(MESSAGE)[22;15H data=s.recv(pkt_size-[31m2[m)[23;12H [33mexcept[m socket.timeout:[24;15H [36mprint[m[31m"Connection timed out, try again later"[m[25;15H [33mreturn[m[26;12H [33mexcept[m socket.error:[27;15H [36mprint[m[31m"Connection closed"[m[28;15H [33mreturn[m[29;12H [33mif[m data.__len__() < [31m8[m:[30;15H [36mprint[m [31m"Connection timed out, try again later"[m[31;15H [33mbreak[m[32;12H [33mif[m options.verbose:[33;16H [34m# First 4 bytes are checksum followed by the 4 byte sequence number[m[34;19H crc,sn = struct.unpack([31m'!LL'[m,data[:[31m8[m])[35;19H [36mprint[m [31m"Seq #:"[m, sn, [31m" with CRC ["[m, [36mhex[m(crc), [31m"]"[m[37;8H [33melse[m:[38;12H data = source_file.read(pkt_size - [31m2[m)[39;12H [33mif[m data == [31m''[m:[40;16H [33mbreak[m;[42;8H payload = struct.pack([31m'!H'[m, pktno & [31m0xffff[m) + data[43;8H send_pkt(payload)[44;8H n += [36mlen[m(payload)[45;8H sys.stderr.write([31m'.'[m)[46;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[47;68H275,9[9C83%[46;9H[?12l[?25h[?25l[47;70H4[45;9H[?12l[?25h[?25l[47;70H3[44;9H[?12l[?25h[?25l[47;70H2[43;9H[?12l[?25h[?25l[47;70H1[42;9H[?12l[?25h[?25l[47;70H0,0-1[41;1H[?12l[?25h[?25l[47;69H69,9  [40;9H[?12l[?25h[?25l[47;70H8[39;9H[?12l[?25h[?25l[47;70H7[38;9H[?12l[?25h[?25l[47;70H6[37;9H[?12l[?25h[?25l[47;70H5[36;9H[?12l[?25h[?25l[47;70H4[35;9H[?12l[?25h[?25l[47;70H3[34;9H[?12l[?25h[?25l[47;70H2[33;9H[?12l[?25h[?25l[47;70H1[32;9H[?12l[?25h[?25l[47;70H0[31;9H[?12l[?25h[?25l[47;69H59[30;9H[?12l[?25h[?25l[47;70H8[29;9H[?12l[?25h[?25l[47;70H7[28;9H[?12l[?25h[?25l[47;70H6[27;9H[?12l[?25h[?25l[47;70H5[26;9H[?12l[?25h[?25l[47;70H4[25;9H[?12l[?25h[?25l[47;70H3[24;9H[?12l[?25h[?25l[47;70H2[23;9H[?12l[?25h[?25l[47;70H1[22;9H[?12l[?25h[?25l[47;70H0[21;9H[?12l[?25h[?25l[47;69H49[20;9H[?12l[?25h[?25l[47;70H8[19;9H[?12l[?25h[?25l[47;70H7[18;9H[?12l[?25h[?25l[47;70H6,0-1[17;1H[?12l[?25h[?25l[47;70H5,9  [16;9H[?12l[?25h[?25l[47;70H4[15;9H[?12l[?25h[?25l[47;70H3[14;9H[?12l[?25h[?25l[47;70H2[13;9H[?12l[?25h[?25l[47;70H1,3[12;3H[?12l[?25h[?25l[47;70H0,9[11;9H[?12l[?25h[?25l[47;69H39[10;9H[?12l[?25h[?25l[47;70H8,0-1[9;1H[?12l[?25h[?25l[47;70H9,9  [10;9H[?12l[?25h[?25l[47;72H1[10;1H[?12l[?25h[?25l[47;72H5[10;5H[?12l[?25h[?25l[47;1H[1m-- INSERT --[m[47;68H[K[47;68H239,5[9C83%[10;5H[?12l[?25h[?25l [34m#print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[47;72H6[10;6H[?12l[?25h[47;1H[K[10;5H[?25l[47;68H239,5[9C83%[10;5H[?12l[?25h[?25l[47;70H8,0-1[9;1H[?12l[?25h[?25l[27m[m[H[2J[1;8H sys.stderr.write([31m'.'[m)[2;8H [33mif[m options.discontinuous [33mand[m pktno % [31m5[m == [31m4[m:[3;12H time.sleep([31m1[m)[5;8H [33mif[m pktno % [31m25[m == [31m25[m-[31m1[m:[6;12H tb.sink.set_gain(-[31m60[m)[7;12H time.sleep([31m0.150[m)[8;12H low_sum = ftb.probe_lp.level()[9;12H high_sum = ftb.probe_hp.level()[11;12H [34m#while 1:[m[12;16H [34m#time.sleep(0.1)[m[13;16H [34m#low_sum = ftb.probe_lp.level()[m[14;16H [34m#high_sum = ftb.probe_hp.level()[m[15;16H [34m#print " low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[17;12H [34m#print "\n low=%f\nhigh=%f\n" % (low_sum*100000, high_sum*100000)[m[19;12H [33mif[m low_sum > high_sum * [31m3[m:[20;16H [34m#print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[21;16H tb.sink.set_freq(options.tx_freq+[31m625000[m)[22;12H [33melif[m high_sum > low_sum * [31m3[m:[23;16H [34m#print "Setting frequency to %d\n" % (options.tx_freq-625000)[m[24;16H tb.sink.set_freq(options.tx_freq-[31m625000[m)[26;12H tb.sink.set_gain([31m30[m)[28;8H [34m#if pktno % 50 == 50-1:[m[29;8H [34m#    print "Setting frequency to %d\n" % (options.tx_freq+625000)[m[30;12H [34m#tb.sink.set_freq(options.tx_freq+625000)[m[32;8H pktno += [31m1[m[34;4H [33mif[m options.from_file [33mis[m [36mNone[m:[35;8H s.close()
    time.sleep([31m5[m)
    send_pkt(eof=[36mTrue[m)[39;4H tb.wait()[22C [34m# wait for it to finish[m

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H274,9[9CBot[1;9H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"benchmark_tx3.py" 319L, 10069C written
[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# vim benchmark_tx3.py[1Px3.pyrx3.py
[?1049h[?1h=[1;47r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[47;1H"benchmark_rx3.py" 221L, 7362C[>c[1;1H[34m#!/usr/bin/env python
#
# Copyright 2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# [m

[35mfrom[m gnuradio [35mimport[m gr, gru
[35mfrom[m gnuradio [35mimport[m eng_notation
[35mfrom[m gnuradio.eng_option [35mimport[m eng_option
[35mfrom[m optparse [35mimport[m OptionParser
[35mimport[m time

[34m# From gr-digital[m
[35mfrom[m gnuradio [35mimport[m digital

[34m# from current dir[m
[35mfrom[m receive_path [35mimport[m receive_path
[35mfrom[m uhd_interface [35mimport[m uhd_receiver

[35mimport[m struct
[35mimport[m sys, socket

[34m#import os
#print os.getpid()
#raw_input('Attach and press enter: ')[m

[33mclass[m [36mmy_top_block[m(gr.top_block):
    [33mdef[m [36m__init__[m(self, demodulator, rx_callback, options):[45;8H gr.top_block.__init__(self)[47;68H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[27m[m[H[2J[1;4H cmd1 = cmd1 + [31m" sps="[m + [36mstr[m(options.samples_per_symbol)
    cmd1 = cmd1 + [31m"[m[35m\"[m[31m"[m[4;4H [35mfrom[m subprocess [35mimport[m os
    os.system(cmd1)[7;4H last_n_rcvd = n_rcvd
    cur_freq_offset = freq_offset
    tb.source.set_freq(options.rx_freq+cur_freq_offset)[11;4H tb.start()[7C [34m# start flow graph[m
   [34m# tb.wait()         # wait for it to finish[m[14;4H [33mwhile[m mstr_cnt < TIMEOUT*[31m1000[m:[15;7H [33mif[m stop_rcv == [31m1[m:[16;10H [33mbreak[m;[17;7H mstr_cnt = mstr_cnt + [31m1[m[18;7H time.sleep([31m0.001[m)[20;7H [33mif[m (mstr_cnt % per_wait == per_wait-[31m1[m):[21;11H [33mif[m last_n_rcvd == n_rcvd:[22;15H [33mif[m cur_freq_offset > [31m0[m:[23;19H cur_freq_offset = [31m0[m-freq_offset[24;15H [33melse[m:[25;19H cur_freq_offset = freq_offset[27;15H [34m#print "Switching frequency to %d\n" % (options.rx_freq+cur_freq_offsee[28;1Ht)[m[29;15H tb.source.set_freq(options.rx_freq+cur_freq_offset)[31;11H [33melse[m:[32;15H [34m#print "Not switching frequencies since we are still receiving\n"[m[33;15H last_n_rcvd = n_rcvd[35;4H [33mif[m stop_rcv == [31m0[m:[36;7H [36mprint[m [31m"Receiver timed out, received %d packets successfully in %d sec"[m %(n_rigg[37;1Hht, TIMEOUT)[39;4H s.close()

[33mif[m __name__ == [31m'__main__'[m:
    [33mtry[m:[43;8H main()
    [33mexcept[m [32mKeyboardInterrupt[m:[45;8H [33mpass[m[47;68H221,0-1[7CBot[46;1H[?12l[?25h[?25l[27m[m[H[2J[2;4H [34m# Create Options Parser:[m
    parser = OptionParser (option_class=eng_option, conflict_handler=[31m"resolve"[m)
    expert_grp = parser.add_option_group([31m"Expert"[m)[6;4H parser.add_option([31m"-m"[m, [31m"--modulation"[m, [36mtype[m=[31m"choice"[m, choices=demods.keys(),[7;22H default=[31m'dqpsk'[m,[8;22H [36mhelp[m=[31m"Select modulation from: %s [default=%%default]"[m[9;28H % ([31m', '[m.join(demods.keys()),))
    parser.add_option([31m""[m,[31m"--from-file"[m, default=[36mNone[m,[11;22H [36mhelp[m=[31m"input file of samples to demod"[m)[13;4H receive_path.add_options(parser, expert_grp)
    uhd_receiver.add_options(parser)[16;4H [33mfor[m mod [33min[m demods.values():[17;8H mod.add_options(expert_grp)[19;4H (options, args) = parser.parse_args ()[21;4H [33mif[m [36mlen[m(args) != [31m0[m:[22;8H parser.print_help(sys.stderr)[23;8H sys.exit([31m1[m)[25;4H [33mif[m options.from_file [33mis[m [36mNone[m:[26;8H [33mif[m options.rx_freq [33mis[m [36mNone[m:[27;12H sys.stderr.write([31m"You must specify -f FREQ or --freq FREQ[m[35m\n[m[31m"[m)[28;12H parser.print_help(sys.stderr)[29;12H sys.exit([31m1[m)[32;4H [34m# build the graph[m
    tb = my_top_block(demods[options.modulation], rx_callback, options)[35;4H r = gr.enable_realtime_scheduling()
    [33mif[m r != gr.RT_OK:[37;8H [36mprint[m [31m"Warning: Failed to enable realtime scheduling."[m[39;4H [34m# log parameters to OML[m
    cmd1 = [31m"/root/OML/omlcli --out h2_benchmark --line [m[35m\"[m[31m"[m
    cmd1 = cmd1 + [31m" rx-freq="[m + [36mstr[m(options.rx_freq)
    cmd1 = cmd1 + [31m" modulation="[m + [36mstr[m(options.modulation)
    cmd1 = cmd1 + [31m" rx-gain="[m + [36mstr[m(options.rx_gain)
    cmd1 = cmd1 + [31m" bitrate="[m + [36mstr[m(options.bitrate)
    cmd1 = cmd1 + [31m" sps="[m + [36mstr[m(options.samples_per_symbol)
    cmd1 = cmd1 + [31m"[m[35m\"[m[31m"[m[47;68H179,5[9C76%[46;5H[?12l[?25h[?25l[47;68H[K[47;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[47;1H[K[47;1H[?1l>[?12l[?25h[?1049l]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# 
]0;root@node5-5: ~/gnuradio/gr-digital/examples/narrowbandroot@node5-5:~/gnuradio/gr-digital/examples/narrowband# cd ~
]0;root@node5-5: ~root@node5-5:~# ls
[0m[01;32mclient.py[0m  [01;31mgnuradio-3.6.3.tar.gz[0m  [01;32mprepare.sh[0m                  [01;34muhd[0m
[01;34mgnuradio[0m   [01;34mOML[0m                    [01;31mrelease_003_005_000.tar.gz[0m
]0;root@node5-5: ~root@node5-5:~# ./prepare.sh 
0% [Working]            Ign http://us.archive.ubuntu.com precise InRelease
            8% [Connecting to security.ubuntu.com (91.189.92.200)] [Connecting to pkg.mytestbed.                                                                                    Ign http://us.archive.ubuntu.com precise-updates InRelease
14% [Connecting to security.ubuntu.com (91.189.92.200)] [Connecting to pkg.mytestbed                                                                                    Ign http://us.archive.ubuntu.com precise-backports InRelease
19% [Connecting to security.ubuntu.com (91.189.92.200)] [Connecting to pkg.mytestbed                                                                                    Hit http://us.archive.ubuntu.com precise Release.gpg
40% [Waiting for headers] [Connecting to security.ubuntu.com (91.189.92.200)] [Conne                                                                                    Get:1 http://us.archive.ubuntu.com precise-updates Release.gpg [198 B]
98% [1 Release.gpg 198 B/198 B 100%] [Connecting to security.ubuntu.com (91.189.92.298% [Connecting to security.ubuntu.com (91.189.92.200)] [Connecting to pkg.mytestbed                                                                                    Hit http://us.archive.ubuntu.com precise-backports Release.gpg
98% [Waiting for headers] [Connecting to security.ubuntu.com (91.189.92.200)] [Conne                                                                                    Hit http://us.archive.ubuntu.com precise Release
98% [Waiting for headers] [Connecting to security.ubuntu.com (91.189.92.200)] [Conne                                                                                    Get:2 http://us.archive.ubuntu.com precise-updates Release [49.6 kB]
22% [2 Release 10.8 kB/49.6 kB 22%] [Connecting to security.ubuntu.com (91.189.92.2022% [Release gpgv 49.6 kB] [2 Release 10.8 kB/49.6 kB 22%] [Connecting to security.u100% [Release gpgv 49.6 kB] [Waiting for headers] [Waiting for headers] [Connecting                                                                                     Hit http://us.archive.ubuntu.com precise-backports Release
100% [Release gpgv 49.6 kB] [Waiting for headers] [Connecting to pkg.mytestbed.net (                                                                                    Ign http://security.ubuntu.com precise-security InRelease
                                                                                    100% [Release gpgv 49.6 kB] [Connecting to pkg.mytestbed.net (221.199.219.147)]                                                                               100% [Waiting for headers] [Connecting to pkg.mytestbed.net (221.199.219.147)]                                                                              100% [2 Release gpgv 49.6 kB] [Waiting for headers] [Connecting to pkg.mytestbed.net100% [Waiting for headers] [Waiting for headers] [Connecting to pkg.mytestbed.net (2                                                                                    Hit http://us.archive.ubuntu.com precise/main Sources
                                                                                    100% [Waiting for headers] [Connecting to pkg.mytestbed.net (221.199.219.147)]                                                                              100% [Release gpgv 49.6 kB] [Waiting for headers] [Connecting to pkg.mytestbed.net (                                                                                    Hit http://us.archive.ubuntu.com precise/restricted Sources
100% [Release gpgv 49.6 kB] [Waiting for headers] [Connecting to pkg.mytestbed.net (                                                                                    Hit http://us.archive.ubuntu.com precise/universe Sources
100% [Release gpgv 49.6 kB] [Waiting for headers] [Connecting to pkg.mytestbed.net (                                                                                    Hit http://us.archive.ubuntu.com precise/multiverse Sources
                                                                                    Hit http://us.archive.ubuntu.com precise/main i386 Packages
                                                                                    Hit http://us.archive.ubuntu.com precise/restricted i386 Packages
                                                                                    Hit http://us.archive.ubuntu.com precise/universe i386 Packages
100% [Release gpgv 49.6 kB] [Waiting for headers] [Waiting for headers] [Connecting                                                                                     Hit http://us.archive.ubuntu.com precise/multiverse i386 Packages
                                                                                    Hit http://us.archive.ubuntu.com precise/main TranslationIndex
                                                                                    Hit http://us.archive.ubuntu.com precise/multiverse TranslationIndex
                                                                                    Hit http://us.archive.ubuntu.com precise/restricted TranslationIndex
100% [Release gpgv 49.6 kB] [Waiting for headers] [Waiting for headers] [Connecting                                                                                     Hit http://us.archive.ubuntu.com precise/universe TranslationIndex
                                                                                    Get:3 http://security.ubuntu.com precise-security Release.gpg [198 B]
100% [Release gpgv 49.6 kB] [Waiting for headers] [Connecting to pkg.mytestbed.net (                                                                                    Get:4 http://us.archive.ubuntu.com precise-updates/main Sources [368 kB]
14% [Release gpgv 49.6 kB] [4 Sources 9,102 B/368 kB 2%] [Waiting for headers] [Conn17% [4 Sources 20.4 kB/368 kB 6%] [Waiting for headers] [Connecting to pkg.mytestbed                                                                                    Get:5 http://security.ubuntu.com precise-security Release [49.6 kB]
67% [4 Sources 249 kB/368 kB 68%] [5 Release 13.5 kB/49.6 kB 27%] [Waiting for heade                                                                                    92% [5 Release 13.5 kB/49.6 kB 27%] [Waiting for headers]                                                         Get:6 http://us.archive.ubuntu.com precise-updates/restricted Sources [5,135 B]
                                                         Get:7 http://us.archive.ubuntu.com precise-updates/universe Sources [79.7 kB]
                                                         Get:8 http://us.archive.ubuntu.com precise-updates/multiverse Sources [4,729 B]
                                                         Get:9 http://us.archive.ubuntu.com precise-updates/main i386 Packages [594 kB]
                                                         49% [9 Packages 40.0 kB/594 kB 7%] [5 Release 13.5 kB/49.6 kB 27%] [Waiting for head49% [4 Sources bzip2 0 B] [9 Packages 40.0 kB/594 kB 7%] [5 Release 13.5 kB/49.6 kB                                                                                     98% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Get:10 http://us.archive.ubuntu.com precise-updates/restricted i386 Packages [9,503 B]
                                                                               98% [4 Sources bzip2 0 B] [10 Packages 4,081 B/9,503 B 43%] [5 Release 30.2 kB/49.6                                                                                     98% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Get:11 http://us.archive.ubuntu.com precise-updates/universe i386 Packages [184 kB]
                                                                               86% [4 Sources bzip2 0 B] [11 Packages 16.4 kB/184 kB 9%] [5 Release 30.2 kB/49.6 kB                                                                                    99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Get:12 http://us.archive.ubuntu.com precise-updates/multiverse i386 Packages [10.4 kB]
                                                                               98% [4 Sources bzip2 0 B] [12 Packages 6,268 B/10.4 kB 60%] [5 Release 30.2 kB/49.6                                                                                     99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Get:13 http://us.archive.ubuntu.com precise-updates/main TranslationIndex [3,564 B]
                                                                               99% [4 Sources bzip2 0 B] [13 TranslationIndex 3,564 B/3,564 B 100%] [5 Release 30.2                                                                                    99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Get:14 http://us.archive.ubuntu.com precise-updates/multiverse TranslationIndex [2,605 B]
                                                                               99% [4 Sources bzip2 0 B] [14 TranslationIndex 2,605 B/2,605 B 100%] [5 Release 30.2                                                                                    99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Get:15 http://us.archive.ubuntu.com precise-updates/restricted TranslationIndex [2,461 B]
                                                                               99% [4 Sources bzip2 0 B] [15 TranslationIndex 2,461 B/2,461 B 100%] [5 Release 30.2                                                                                    99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Get:16 http://us.archive.ubuntu.com precise-updates/universe TranslationIndex [2,850 B]
                                                                               99% [4 Sources bzip2 0 B] [16 TranslationIndex 2,850 B/2,850 B 100%] [5 Release 30.2                                                                                    99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Hit http://us.archive.ubuntu.com precise/main Translation-en
                                                                               Hit http://us.archive.ubuntu.com precise/multiverse Translation-en
                                                                               Hit http://us.archive.ubuntu.com precise/restricted Translation-en
                                                                               Hit http://us.archive.ubuntu.com precise/universe Translation-en
                                                                               99% [4 Sources bzip2 0 B] [Waiting for headers] [5 Release 30.2 kB/49.6 kB 61%] [Wai                                                                                    Hit http://us.archive.ubuntu.com precise-backports/main Sources
                                                                                    99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Hit http://us.archive.ubuntu.com precise-backports/restricted Sources
99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Hit http://us.archive.ubuntu.com precise-backports/universe Sources
99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Hit http://us.archive.ubuntu.com precise-backports/multiverse Sources
99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Hit http://us.archive.ubuntu.com precise-backports/main i386 Packages
99% [4 Sources bzip2 0 B] [5 Release 30.2 kB/49.6 kB 61%] [Waiting for headers]                                                                               Hit http://us.archive.ubuntu.com precise-backports/restricted i386 Packages
                                                                               99% [4 Sources bzip2 0 B] [Waiting for headers] [5 Release 31.6 kB/49.6 kB 64%] [Wai                                                                                    100% [4 Sources bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                      100% [4 Sources bzip2 0 B] [5 Release gpgv 49.6 kB] [Waiting for headers] [Waiting f                                                                                    100% [4 Sources bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                      Hit http://us.archive.ubuntu.com precise-backports/universe i386 Packages
                                                                      Hit http://us.archive.ubuntu.com precise-backports/multiverse i386 Packages
100% [4 Sources bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                      Hit http://us.archive.ubuntu.com precise-backports/main TranslationIndex
                                                                      Hit http://us.archive.ubuntu.com precise-backports/multiverse TranslationIndex
                                                                      Hit http://us.archive.ubuntu.com precise-backports/restricted TranslationIndex
100% [4 Sources bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                      Hit http://us.archive.ubuntu.com precise-backports/universe TranslationIndex
                                                                      Hit http://us.archive.ubuntu.com precise-updates/main Translation-en
                                                                      Hit http://us.archive.ubuntu.com precise-updates/multiverse Translation-en
                                                                      Hit http://us.archive.ubuntu.com precise-updates/restricted Translation-en
                                                                      Get:17 http://us.archive.ubuntu.com precise-updates/universe Translation-en [108 kB]
                                                                      97% [4 Sources bzip2 0 B] [17 Translation-en 64.9 kB/108 kB 60%] [Waiting for header                                                                                    100% [4 Sources bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                      Hit http://us.archive.ubuntu.com precise-backports/main Translation-en
                                                                      Hit http://us.archive.ubuntu.com precise-backports/multiverse Translation-en
100% [4 Sources bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                      Hit http://us.archive.ubuntu.com precise-backports/restricted Translation-en
                                                                      Hit http://us.archive.ubuntu.com precise-backports/universe Translation-en
100% [4 Sources bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                      Ign http://pkg.mytestbed.net precise/ InRelease
                                                                      100% [4 Sources bzip2 0 B] [Waiting for headers]100% [Waiting for headers] [Waiting for headers]                                                100% [6 Sources bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                      100% [Waiting for headers] [Waiting for headers]                                                100% [7 Sources bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                      Get:18 http://security.ubuntu.com precise-security/main Sources [64.0 kB]
                                                                      97% [7 Sources bzip2 0 B] [18 Sources 14.1 kB/64.0 kB 22%] [Waiting for headers]                                                                                97% [18 Sources 20.4 kB/64.0 kB 32%] [Waiting for headers]                                                          97% [8 Sources bzip2 0 B] [18 Sources 20.4 kB/64.0 kB 32%] [Waiting for headers]                                                                                97% [18 Sources 20.4 kB/64.0 kB 32%] [Waiting for headers]                                                          97% [9 Packages bzip2 0 B] [18 Sources 20.4 kB/64.0 kB 32%] [Waiting for headers]                                                                                 100% [9 Packages bzip2 0 B] [Waiting for headers]                                                 Ign http://pkg.mytestbed.net precise/ Release.gpg
100% [9 Packages bzip2 0 B] [Waiting for headers]                                                 Get:19 http://security.ubuntu.com precise-security/restricted Sources [1,950 B]
                                                 100% [9 Packages bzip2 0 B] [19 Sources 1,950 B/1,950 B 100%] [Waiting for headers]                                                                                   100% [9 Packages bzip2 0 B] [Waiting for headers]                                                 Get:20 http://security.ubuntu.com precise-security/universe Sources [22.2 kB]
                                                 99% [9 Packages bzip2 0 B] [20 Sources 4,096 B/22.2 kB 18%] [Waiting for headers]                                                                                 100% [9 Packages bzip2 0 B] [Waiting for headers]                                                 Get:21 http://security.ubuntu.com precise-security/multiverse Sources [1,388 B]
                                                 100% [9 Packages bzip2 0 B] [21 Sources 1,388 B/1,388 B 100%] [Waiting for headers]                                                                                   100% [9 Packages bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                       Get:22 http://security.ubuntu.com precise-security/main i386 Packages [239 kB]
                                                                       87% [9 Packages bzip2 0 B] [22 Packages 8,918 B/239 kB 4%] [Waiting for headers]                                                                                90% [22 Packages 54.7 kB/239 kB 23%] [Waiting for headers]                                                          90% [10 Packages bzip2 0 B] [22 Packages 63.0 kB/239 kB 26%] [Waiting for headers]                                                                                  92% [22 Packages 92.2 kB/239 kB 39%] [Waiting for headers]                                                          92% [11 Packages bzip2 0 B] [22 Packages 92.2 kB/239 kB 39%] [Waiting for headers]                                                                                  Ign http://pkg.mytestbed.net precise/ Release
                                                                                  95% [11 Packages bzip2 0 B] [22 Packages 148 kB/239 kB 62%]                                                           95% [22 Packages 157 kB/239 kB 66%] [Waiting for headers]                                                         95% [12 Packages bzip2 0 B] [22 Packages 157 kB/239 kB 66%] [Waiting for headers]                                                                                 95% [22 Packages 157 kB/239 kB 66%] [Waiting for headers]                                                         95% [17 Translation-en bzip2 0 B] [22 Packages 157 kB/239 kB 66%] [Waiting for heade                                                                                    100% [22 Packages 231 kB/239 kB 97%] [Waiting for headers]                                                          100% [18 Sources bzip2 0 B] [22 Packages 231 kB/239 kB 97%] [Waiting for headers]                                                                                 100% [18 Sources bzip2 0 B] [Waiting for headers]                                                 Get:23 http://security.ubuntu.com precise-security/restricted i386 Packages [3,968 B]
                                                 100% [18 Sources bzip2 0 B] [23 Packages 2,677 B/3,968 B 67%] [Waiting for headers]                                                                                   100% [18 Sources bzip2 0 B] [Waiting for headers]                                                 Get:24 http://security.ubuntu.com precise-security/universe i386 Packages [69.9 kB]
                                                 97% [18 Sources bzip2 0 B] [24 Packages 6,838 B/69.9 kB 10%] [Waiting for headers]                                                                                  97% [24 Packages 15.0 kB/69.9 kB 21%] [Waiting for headers]                                                           97% [19 Sources bzip2 0 B] [24 Packages 15.0 kB/69.9 kB 21%] [Waiting for headers]                                                                                  99% [24 Packages 58.0 kB/69.9 kB 83%] [Waiting for headers]                                                           99% [20 Sources bzip2 0 B] [24 Packages 58.0 kB/69.9 kB 83%] [Waiting for headers]                                                                                  100% [20 Sources bzip2 0 B] [Waiting for headers]                                                 Get:25 http://security.ubuntu.com precise-security/multiverse i386 Packages [2,362 B]
                                                 100% [20 Sources bzip2 0 B] [25 Packages 158 B/2,362 B 7%] [Waiting for headers]                                                                                100% [25 Packages 158 B/2,362 B 7%] [Waiting for headers]                                                         100% [21 Sources bzip2 0 B] [25 Packages 158 B/2,362 B 7%] [Waiting for headers]                                                                                100% [25 Packages 158 B/2,362 B 7%] [Waiting for headers]                                                         100% [22 Packages bzip2 0 B] [25 Packages 158 B/2,362 B 7%] [Waiting for headers]                                                                                 100% [22 Packages bzip2 0 B] [Waiting for headers]                                                  Get:26 http://security.ubuntu.com precise-security/main TranslationIndex [74 B]
                                                  100% [22 Packages bzip2 0 B] [26 TranslationIndex 74 B/74 B 100%] [Waiting for heade                                                                                    100% [22 Packages bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                        Get:27 http://security.ubuntu.com precise-security/multiverse TranslationIndex [71 B]
100% [22 Packages bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                        Get:28 http://security.ubuntu.com precise-security/restricted TranslationIndex [71 B]
                                                                        Get:29 http://security.ubuntu.com precise-security/universe TranslationIndex [73 B]
                                                                        100% [22 Packages bzip2 0 B] [29 TranslationIndex 73 B/73 B 100%] [Waiting for heade                                                                                    100% [22 Packages bzip2 0 B] [Waiting for headers]                                                  Ign http://pkg.mytestbed.net precise/ Packages/DiffIndex
100% [22 Packages bzip2 0 B] [Waiting for headers]                                                  100% [Waiting for headers] [Waiting for headers]                                                100% [23 Packages bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                        100% [Waiting for headers] [Waiting for headers]                                                100% [24 Packages bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                        Hit http://security.ubuntu.com precise-security/main Translation-en
                                                                        100% [24 Packages bzip2 0 B] [Waiting for headers]                                                  Hit http://security.ubuntu.com precise-security/multiverse Translation-en
                                                  Hit http://security.ubuntu.com precise-security/restricted Translation-en
100% [24 Packages bzip2 0 B] [Waiting for headers]                                                  100% [Waiting for headers] [Waiting for headers]                                                100% [25 Packages bzip2 0 B] [Waiting for headers] [Waiting for headers]                                                                        100% [Waiting for headers] [Waiting for headers]                                                Hit http://security.ubuntu.com precise-security/universe Translation-en
                                                100% [Waiting for headers]                          Get:30 http://pkg.mytestbed.net precise/ Packages [15.3 kB]
                          100% [30 Packages 6,636 B/15.3 kB 43%]                                      100% [Waiting for headers]                          100% [30 Packages bzip2 0 B]                            100% [Waiting for headers]100% [Waiting for headers]100% [Waiting for headers]                          Ign http://pkg.mytestbed.net precise/ Translation-en_US
                          100% [Working]              Ign http://pkg.mytestbed.net precise/ Translation-en
100% [Working]              Fetched 1,895 kB in 3s (498 kB/s)
Reading package lists... 0%Reading package lists... 0%Reading package lists... 1%Reading package lists... 11%Reading package lists... 11%Reading package lists... 12%Reading package lists... 12%Reading package lists... 50%Reading package lists... 51%Reading package lists... 51%Reading package lists... 52%Reading package lists... 52%Reading package lists... 57%Reading package lists... 57%Reading package lists... 58%Reading package lists... 58%Reading package lists... 58%Reading package lists... 58%Reading package lists... 81%Reading package lists... 81%Reading package lists... 87%Reading package lists... 87%Reading package lists... 87%Reading package lists... 87%Reading package lists... 89%Reading package lists... 89%Reading package lists... 89%Reading package lists... 89%Reading package lists... 92%Reading package lists... 92%Reading package lists... 92%Reading package lists... 92%Reading package lists... 92%Reading package lists... 92%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 93%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 96%Reading package lists... 97%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... 98%Reading package lists... Done
Baseline orbit image this image is based on /.orbit_image:
Ubutnut 12.04

Broadcast message from root@node5-5
	(/dev/pts/1) at 18:58 ...

The system is going down for power off NOW!
]0;root@node5-5: ~root@node5-5:~# Connection to node5-5 closed by remote host.
Connection to node5-5 closed.
tritons@console.grid:~$ omf save -n node8-8.grid.orbit-lab.or[1P.grid.orbit-lab.or6.grid.orbit-lab.or[C[C[1P.grid.orbit-lab.or5.grid.orbit-lab.or[C[1P-5.grid.orbit-lab.or5-5.grid.orbit-lab.or[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cgr[1Pr[Cg

 INFO NodeHandler: OMF Experiment Controller 5.4 (git c005675)
 INFO NodeHandler: Slice ID: pxe_slice 
 INFO NodeHandler: Experiment ID: pxe_slice-2013-03-06t18.59.27.284-05.00
 INFO NodeHandler: Message authentication is disabled
 INFO Experiment: load system:exp:stdlib
 INFO property.resetDelay: resetDelay = 230 (Fixnum)
 INFO property.resetTries: resetTries = 1 (Fixnum)
 INFO Experiment: load system:exp:eventlib
 INFO Experiment: load system:exp:winlib
 INFO Experiment: load system:exp:saveNode
 INFO property.node: node = "node5-5.grid.orbit-lab.org" (String)
 INFO property.pxe: pxe = "1.1.6" (String)
 INFO property.domain: domain = "grid.orbit-lab.org" (String)
 INFO property.started: started = "false" (String)
 INFO property.image: image = nil (NilClass)
 INFO property.resize: resize = nil (NilClass)
 WARN exp: Saving only works for ext2/ext3 partitions and MBR (msdos) partition tables. Saving any other filesystem or partition table type will produce a 0 byte image.
 INFO Topology: Loading topology 'node5-5.grid.orbit-lab.org'.
 INFO Experiment: Resetting resources
 INFO stdlib: Waiting for nodes (Up/Down/Total): 0/1/1 - (still down: node5-5.grid.orbit-lab.org) [0 sec.]
 INFO stdlib: Waiting for nodes (Up/Down/Total): 0/1/1 - (still down: node5-5.grid.orbit-lab.org) [10 sec.]
 INFO stdlib: Waiting for nodes (Up/Down/Total): 0/1/1 - (still down: node5-5.grid.orbit-lab.org) [20 sec.]
 INFO stdlib: Waiting for nodes (Up/Down/Total): 0/1/1 - (still down: node5-5.grid.orbit-lab.org) [30 sec.]
 INFO stdlib: Waiting for nodes (Up/Down/Total): 0/1/1 - (still down: node5-5.grid.orbit-lab.org) [40 sec.]
 INFO ALL_UP: Event triggered. Starting the associated tasks.
 INFO node5-5.grid.orbit-lab.org:  
 INFO node5-5.grid.orbit-lab.org: - Saving image of '/dev/sda' on node 'node5-5.grid.orbit-lab.org'
 INFO node5-5.grid.orbit-lab.org:   to the file 'tritons-node-node5-5.grid.orbit-lab.org-2013-03-06-19-00-24.ndz' on host '10.10.0.42'
 INFO node5-5.grid.orbit-lab.org:  
 INFO property.started: started = "true" (String)
 INFO exp:  
 INFO exp: - Saving process started at: Wed Mar 06 19:00:29 -0500 2013
 INFO exp:   (this may take a while depending on the size of your image)
 INFO exp: - Saving disk image of 'node5-5.grid.orbit-lab.org' finished with success.
 INFO exp: - Saving process completed at: Wed Mar 06 19:02:49 -0500 2013
 INFO exp:  
 INFO EXPERIMENT_DONE: Event triggered. Starting the associated tasks.
 INFO NodeHandler: 
 INFO NodeHandler: Shutting down experiment, please wait...
 INFO NodeHandler: 
 INFO NodeHandler: Shutdown flag is set - Turning Off the resources
 INFO run: Experiment pxe_slice-2013-03-06t18.59.27.284-05.00 finished after 3:33

tritons@console.grid:~$ 
tritons@console.grid:~$ 
tritons@console.grid:~$ exit
logout
